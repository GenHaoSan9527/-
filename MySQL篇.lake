<!doctype lake><title>MySQL篇</title><meta name="doc-version" content="1" /><meta name="viewport" content="fixed" /><meta name="typography" content="classic" /><meta name="paragraphSpacing" content="relax" /><h2 data-lake-id="rsc6W" id="rsc6W" data-lake-index-type="0"><strong><span data-lake-id="u0474b30c" id="u0474b30c">为什么MySQL用B+树做索引结构？</span></strong></h2><p data-lake-id="u11303248" id="u11303248"><strong><span data-lake-id="ub1ff27b8" id="ub1ff27b8">​</span></strong><br></p><p data-lake-id="u66f5e5d1" id="u66f5e5d1" style="padding-left: 2em"><span data-lake-id="u7f11b602" id="u7f11b602">主要有三个方面：</span></p><p data-lake-id="u4ee8133c" id="u4ee8133c" style="padding-left: 2em"><span data-lake-id="u4855232b" id="u4855232b">一、高效的查询性能</span></p><p data-lake-id="u3b62ee9e" id="u3b62ee9e" style="padding-left: 2em"><span data-lake-id="u926ae140" id="u926ae140">B+树是一种多路平衡查找树，他的插入，删除，查询的时间复杂度都是</span><strong><span data-lake-id="uf7d82d47" id="uf7d82d47">O(logn)</span></strong><span data-lake-id="udfd8ff64" id="udfd8ff64">，每次插入删除都会进行自动调节平衡，让根节点到没个叶子结点的路径相同。</span></p><p data-lake-id="ub007ac30" id="ub007ac30" style="padding-left: 2em"><span data-lake-id="ue0b0fc2a" id="ue0b0fc2a">二、树的高度不会增长过快，从而使磁盘的I/O次数减少</span></p><p data-lake-id="u4849f2ce" id="u4849f2ce" style="padding-left: 2em"><span data-lake-id="ub2d269f9" id="ub2d269f9">不像红黑树一样，数据越多，高度越高。因为B+树只将数据存储在叶子节点中，</span><strong><span data-lake-id="u546390fb" id="u546390fb">非叶子节点只保存主键或索引值和指针</span></strong><span data-lake-id="uf9ddad0e" id="uf9ddad0e">。所以每个节点能够存储更多的索引，容易命中缓存，从而减少I/O次数。</span></p><p data-lake-id="uc82cd6f2" id="uc82cd6f2" style="padding-left: 2em"><span data-lake-id="ud5769d83" id="ud5769d83">三、查询范围强</span></p><p data-lake-id="ucb23635e" id="ucb23635e" style="padding-left: 2em"><span data-lake-id="ud3d61b6e" id="ud3d61b6e">因为B+树叶子节点采用双向链表结构连接，当从根节点定位到叶子节点后，可以顺序查寻，遍历其他数据。</span></p><p data-lake-id="uee009d5d" id="uee009d5d" style="padding-left: 2em"><span data-lake-id="ub9033444" id="ub9033444">猜测提问：那为什不使用B树呢？</span></p><p data-lake-id="ud338ee33" id="ud338ee33" style="padding-left: 2em"><span data-lake-id="ub50f3a2d" id="ub50f3a2d">因为B树每个节点都存储有完整数据，B+树非叶子节点只存储指针和key，能容下更多索引页，从而进一步减少I/O次数，还有B+树采用叶子采用双向链表，更适合于区间查询，而B树只能每一层遍历查找</span></p><h2 data-lake-id="Rq0Bm" id="Rq0Bm" data-lake-index-type="0"><strong><span data-lake-id="uce1a5044" id="uce1a5044">MySQL索引的最左侧前缀匹配原则是什么？</span></strong></h2><p data-lake-id="uc1bd7d55" id="uc1bd7d55"><br></p><p data-lake-id="u2780ebaa" id="u2780ebaa" style="text-indent: 2em"><span data-lake-id="u632161e8" id="u632161e8">在使用联合索引时，查询条件必须按照索引的顺序，从左往右来。</span></p><p data-lake-id="u9e142aa8" id="u9e142aa8" style="text-indent: 2em"><span data-lake-id="uf6f33307" id="uf6f33307">比如有个联合索引（a，b，c）然后查询条件是a = 1 and b=2 and c=3,这样不能打乱顺序，否则无法使           用。如果是a =1,b = 3，这样也是不行的。在5.6之前只能使用a = 1,查询。但是之后就有了索引下推，把           查 推到引擎层面处理之后值返回到server层。</span></p><p data-lake-id="ua536b740" id="ua536b740" style="text-indent: 2em"><span data-lake-id="u4b91a25e" id="u4b91a25e">注意范围查询当遇到（&gt;,&lt;）就会停止使用联合查询（停止后后续的条件会使用过滤），（&gt;=,&lt;=,like，      between）不会停止。停止匹配：在B+树中</span><span data-lake-id="u5c37a9fd" id="u5c37a9fd" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">联合索引 </span><code data-lake-id="u343247cf" id="u343247cf"><span data-lake-id="u15867b53" id="u15867b53" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">(a, b, c, d)</span></code><span data-lake-id="u75af5a95" id="u75af5a95" class="lake-fontsize-12" style="color: rgb(64, 64, 64)"> 在B+树中的排列方式是：</span></p><ul list="uba7f158c"><li fid="uf000f744" data-lake-id="u9ec1357e" id="u9ec1357e"><span data-lake-id="uc2477e0f" id="uc2477e0f" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">首先按a列排序</span></li><li fid="uf000f744" data-lake-id="u8bb4054f" id="u8bb4054f"><span data-lake-id="ubbaff8f2" id="ubbaff8f2" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">a相同则按b列排序</span></li><li fid="uf000f744" data-lake-id="u0b792886" id="u0b792886"><span data-lake-id="u12515aec" id="u12515aec" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">b相同则按c列排序</span></li></ul><p data-lake-id="u1ca98ca0" id="u1ca98ca0" style="padding-left: 2em"><span data-lake-id="u777cbfc4" id="u777cbfc4">最后按d列排序</span></p><p data-lake-id="u09dbca95" id="u09dbca95" style="text-indent: 2em"><span data-lake-id="u0fe0e52f" id="u0fe0e52f">如果出现（&gt;,&lt;），就会导致后面的查询条件无序。</span></p><p data-lake-id="u490507df" id="u490507df" style="text-indent: 2em"><span data-lake-id="u26858220" id="u26858220">8之后出现了优化，可以存在跳过扫描范围的局限性，从而使用上联合索引。</span></p><h2 data-lake-id="Lv9qo" id="Lv9qo" data-lake-index-type="0"><strong><span data-lake-id="u39eaab83" id="u39eaab83">MySQL三层B+树能存多少数据？</span></strong></h2><p data-lake-id="u65b0d09b" id="u65b0d09b"><br></p><p data-lake-id="uabc11d8d" id="uabc11d8d" style="text-indent: 2em"><span data-lake-id="u23731c9a" id="u23731c9a">首先B+树中每个叶子节点表示一个数据页，然后这个页的大小可以设置(常规页大小：4KB、8KB、16KB、32KB、64KB）,默认是16kb要知道，每个非叶子节点存储指针和索引，指针为6b,索引一般为bigint类型所以为8b,一起就是14b,所以一个根节点就可以存储16*1024/14=1170个（约等于），然后就对应1170个中间节点，每个中间节点对应1170个叶子节点，然后假设存储的完整数据是1kb，那么一个叶子节点就可以存储16个完整数据，所以在每条数据为1kb,数据页为16kb,索引采用Bigint，的情况下存储1170*1170*16约等于2000万条数据。</span></p><h2 data-lake-id="VF8Wp" id="VF8Wp" data-lake-index-type="0"><strong><span data-lake-id="u5f97d29a" id="u5f97d29a">MySQL中的回表是什么？</span></strong></h2><p data-lake-id="u91381c58" id="u91381c58" style="text-indent: 2em"><span data-lake-id="u31722768" id="u31722768">简单来说就是查询时使用了二级索引（非聚族索引）作为查询条件，由于二级索引中只存储了索引值和主键，并没有完整的数据，所以拿到主键后还要去主键索引（聚族索引）查询一次，这个过程叫做回表。回表会产生随机I/O，所以会导致查询效率低。</span></p><p data-lake-id="uffef42da" id="uffef42da" style="text-indent: 2em"><span data-lake-id="uf3c2631d" id="uf3c2631d">什么操作可以减少回表操作呢？</span></p><p data-lake-id="u60f3d63f" id="u60f3d63f" style="text-indent: 2em"><span data-lake-id="ucb5f62a7" id="ucb5f62a7">1.尽量减少不必要的查询字段。</span></p><p data-lake-id="uaeaef0ef" id="uaeaef0ef" style="text-indent: 2em"><span data-lake-id="u31f420a5" id="u31f420a5">2.使用覆盖索引（就是索引字段包含了所有查询字段），就不需要回表。</span></p><p data-lake-id="ub3828cfa" id="ub3828cfa" style="text-indent: 2em"><span data-lake-id="u5c1238c5" id="u5c1238c5">3.还有一种情况是优化器自带索引下推，也可以避免回表。</span></p><h2 data-lake-id="TSg5L" id="TSg5L" data-lake-index-type="0"><strong><span data-lake-id="udcab02a8" id="udcab02a8">MySQL中使用索引一定有效吗？如何排查索引效果？</span></strong></h2><p data-lake-id="u0a435c18" id="u0a435c18"><br></p><p data-lake-id="uf40d3926" id="uf40d3926" style="text-indent: 2em"><span data-lake-id="ucb0e1d7a" id="ucb0e1d7a">不一定。</span></p><p data-lake-id="uc2aaf1e6" id="uc2aaf1e6" style="text-indent: 2em"><span data-lake-id="ua57096a7" id="ua57096a7">MySQL索引失效的核心场景：</span></p><p data-lake-id="u0e2f8610" id="u0e2f8610" style="text-indent: 2em"><span data-lake-id="uc7d26f96" id="uc7d26f96">1.破坏最左侧匹配原则</span></p><p data-lake-id="u445f792a" id="u445f792a" style="text-indent: 2em"><span data-lake-id="ua5a92257" id="ua5a92257">2.破坏索引覆盖原则</span></p><p data-lake-id="u9c15becc" id="u9c15becc" style="text-indent: 2em"><span data-lake-id="uecf2800f" id="uecf2800f">3.破坏前缀匹配原则</span></p><p data-lake-id="u34c30871" id="u34c30871" style="text-indent: 2em"><span data-lake-id="u189bed2a" id="u189bed2a">4.order by 排序不当</span></p><p data-lake-id="u902fece5" id="u902fece5" style="text-indent: 2em"><span data-lake-id="u44fed53b" id="u44fed53b">5.索引列上有函数或者计算</span></p><p data-lake-id="u7db362e1" id="u7db362e1" style="text-indent: 2em"><span data-lake-id="u76f2f604" id="u76f2f604">6.使用not in和not exist 不当</span></p><p data-lake-id="ued80a625" id="ued80a625" style="text-indent: 2em"><span data-lake-id="u08d044f6" id="u08d044f6">7.列的对比，in字段</span></p><p data-lake-id="u2727dcad" id="u2727dcad" style="text-indent: 2em"><span data-lake-id="ud157d6ef" id="ud157d6ef">在查询语句前带上explain 可以给出是否使用索引，使用了那个索引。type(访问类型)</span></p><table data-lake-id="eLEk1" id="eLEk1" margin="true" class="lake-table" style="width: 750px"><colgroup><col width="250"><col width="250"><col width="250"></colgroup><tbody><tr data-lake-id="u14ba379d" id="u14ba379d"><td data-lake-id="u4fa1e42c" id="u4fa1e42c"><p data-lake-id="u79c6108b" id="u79c6108b" style="text-align: left"><strong><span data-lake-id="ue65dba7d" id="ue65dba7d" class="lake-fontsize-12" style="color: rgb(var(--ds-rgb-label-1))">类型</span></strong></p></td><td data-lake-id="uec29ef21" id="uec29ef21"><p data-lake-id="u41fde6c2" id="u41fde6c2" style="text-align: left"><strong><span data-lake-id="u0de3b061" id="u0de3b061" class="lake-fontsize-12" style="color: rgb(var(--ds-rgb-label-1))">性能</span></strong></p></td><td data-lake-id="u5296a086" id="u5296a086"><p data-lake-id="u7ead6102" id="u7ead6102" style="text-align: left"><strong><span data-lake-id="u37b0453a" id="u37b0453a" class="lake-fontsize-12" style="color: rgb(var(--ds-rgb-label-1))">说明</span></strong></p></td></tr><tr data-lake-id="u181c4817" id="u181c4817"><td data-lake-id="u5edd274f" id="u5edd274f"><p data-lake-id="uc8c551d2" id="uc8c551d2"><span data-lake-id="u836f6aea" id="u836f6aea" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">system</span></p></td><td data-lake-id="u4c90450c" id="u4c90450c"><p data-lake-id="ue4f4834a" id="ue4f4834a"><span data-lake-id="u6c0f2648" id="u6c0f2648" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">★★★★★</span></p></td><td data-lake-id="u8c25d1fb" id="u8c25d1fb"><p data-lake-id="ud9fd4274" id="ud9fd4274"><span data-lake-id="u139c2703" id="u139c2703" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">最佳情况，表只有一行</span></p></td></tr><tr data-lake-id="uc48263f5" id="uc48263f5"><td data-lake-id="uf882e5fa" id="uf882e5fa"><p data-lake-id="u4ae1cfaa" id="u4ae1cfaa"><span data-lake-id="u247a6b1c" id="u247a6b1c" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">const</span></p></td><td data-lake-id="u74177472" id="u74177472"><p data-lake-id="u0b189b21" id="u0b189b21"><span data-lake-id="ua9e963a6" id="ua9e963a6" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">★★★★☆</span></p></td><td data-lake-id="u94bd0bdf" id="u94bd0bdf"><p data-lake-id="u1b56eb24" id="u1b56eb24"><span data-lake-id="uf02eba43" id="uf02eba43" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">主键/唯一索引的等值查询</span></p></td></tr><tr data-lake-id="u3335320b" id="u3335320b"><td data-lake-id="u1be6eca1" id="u1be6eca1"><p data-lake-id="uc9734067" id="uc9734067"><span data-lake-id="u76198a12" id="u76198a12" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">eq_ref</span></p></td><td data-lake-id="uecfdd3f2" id="uecfdd3f2"><p data-lake-id="u01f06e27" id="u01f06e27"><span data-lake-id="uec64c1ef" id="uec64c1ef" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">★★★★☆</span></p></td><td data-lake-id="uacf3644d" id="uacf3644d"><p data-lake-id="u36dc9145" id="u36dc9145"><span data-lake-id="u8dee9a3a" id="u8dee9a3a" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">连接中使用主键/唯一索引</span></p></td></tr><tr data-lake-id="ua12b3b12" id="ua12b3b12"><td data-lake-id="u17162c65" id="u17162c65"><p data-lake-id="ue092be57" id="ue092be57"><span data-lake-id="u79e79427" id="u79e79427" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">ref</span></p></td><td data-lake-id="u7f522588" id="u7f522588"><p data-lake-id="ud49dc335" id="ud49dc335"><span data-lake-id="u32037dfb" id="u32037dfb" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">★★★☆☆</span></p></td><td data-lake-id="u47ee65c3" id="u47ee65c3"><p data-lake-id="u477ed783" id="u477ed783"><span data-lake-id="u68ea3ac0" id="u68ea3ac0" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">非唯一索引的等值查询</span></p></td></tr><tr data-lake-id="u31fce180" id="u31fce180" style="height: 38px"><td data-lake-id="u486cc713" id="u486cc713"><p data-lake-id="u41247284" id="u41247284"><span data-lake-id="uee93b033" id="uee93b033" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">range</span></p></td><td data-lake-id="ue223a017" id="ue223a017"><p data-lake-id="u794a5ee5" id="u794a5ee5"><span data-lake-id="u6da38bc8" id="u6da38bc8" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">★★☆☆☆</span></p></td><td data-lake-id="u1aa18b92" id="u1aa18b92"><p data-lake-id="u9caa19de" id="u9caa19de"><span data-lake-id="u848f348f" id="u848f348f" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">索引范围扫描</span></p></td></tr><tr data-lake-id="u104fc740" id="u104fc740"><td data-lake-id="u0c661eca" id="u0c661eca"><p data-lake-id="uefc002c8" id="uefc002c8"><span data-lake-id="u1eefaf59" id="u1eefaf59" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">index</span></p></td><td data-lake-id="u4141a83f" id="u4141a83f"><p data-lake-id="u9c4be2e5" id="u9c4be2e5"><span data-lake-id="u1212f3e8" id="u1212f3e8" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">★☆☆☆☆</span></p></td><td data-lake-id="udba3f33e" id="udba3f33e"><p data-lake-id="u3590c212" id="u3590c212"><span data-lake-id="u3f9acbf8" id="u3f9acbf8" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">全索引扫描</span></p></td></tr><tr data-lake-id="u0d9173aa" id="u0d9173aa"><td data-lake-id="uff3b2680" id="uff3b2680"><p data-lake-id="u1b3dbbc0" id="u1b3dbbc0"><span data-lake-id="udb957c4a" id="udb957c4a" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">ALL</span></p></td><td data-lake-id="uc3baa617" id="uc3baa617"><p data-lake-id="u0a2095b1" id="u0a2095b1"><span data-lake-id="u2e6248ac" id="u2e6248ac" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">☆☆☆☆☆</span></p></td><td data-lake-id="ue4902f7d" id="ue4902f7d"><p data-lake-id="u062dd48d" id="u062dd48d"><span data-lake-id="u2b8577f9" id="u2b8577f9" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">全表扫描</span></p></td></tr></tbody></table><p data-lake-id="u914b7d2d" id="u914b7d2d"><span data-lake-id="u7aa61650" id="u7aa61650">key(具体使用的索引名称)，</span><span data-lake-id="uebe34037" id="uebe34037" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">当 </span><code data-lake-id="uafefab30" id="uafefab30"><span data-lake-id="u3cfed544" id="u3cfed544" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">type</span></code><span data-lake-id="u32437143" id="u32437143" class="lake-fontsize-12" style="color: rgb(64, 64, 64)"> 为 </span><code data-lake-id="u116f43cd" id="u116f43cd"><span data-lake-id="uaf646423" id="uaf646423" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">ALL</span></code><span data-lake-id="u7a18e94d" id="u7a18e94d" class="lake-fontsize-12" style="color: rgb(64, 64, 64)"> 或 </span><code data-lake-id="uc4284c09" id="uc4284c09"><span data-lake-id="ufae26258" id="ufae26258" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">index</span></code><span data-lake-id="u52c8d999" id="u52c8d999" class="lake-fontsize-12" style="color: rgb(64, 64, 64)"> 时，</span><code data-lake-id="u32c8d68d" id="u32c8d68d"><span data-lake-id="udc1a6664" id="udc1a6664" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">key</span></code><span data-lake-id="ud14d62d3" id="ud14d62d3" class="lake-fontsize-12" style="color: rgb(64, 64, 64)"> 可能为 NULL 或显示全索引扫描的索引</span></p><p data-lake-id="uabbecc45" id="uabbecc45"><br></p><h2 data-lake-id="mfCYq" id="mfCYq" data-lake-index-type="0"><span data-lake-id="udfce0d80" id="udfce0d80" class="lake-fontsize-12">MySQL中索引建立时需要注意那些事项？</span></h2><p data-lake-id="u13d98b94" id="u13d98b94" style="text-indent: 2em"><span data-lake-id="ub6dc31b6" id="ub6dc31b6" class="lake-fontsize-12">1.索引不是越多越好，维护索引需要消耗一定资源。</span></p><p data-lake-id="u44671f26" id="u44671f26" style="text-indent: 2em"><span data-lake-id="ufd66a517" id="ufd66a517" class="lake-fontsize-12">2.大量重复字段不要创建索引，像性别，判断。索引在这方面的性能提升有限。</span></p><p data-lake-id="u2021be46" id="u2021be46" style="text-indent: 2em"><span data-lake-id="ua76c972b" id="ua76c972b" class="lake-fontsize-12">3.长字段不因该创建索引，像text，longtext，扫描时消耗内存大，可能导致整体性能下降。</span></p><p data-lake-id="u531e37a9" id="u531e37a9" style="text-indent: 2em"><span data-lake-id="uef151309" id="uef151309" class="lake-fontsize-12">4.当数据表的修改频率远大于查询频率时不因该创建索引，因为建立索引会减慢修改的效率。</span></p><p data-lake-id="u85bec161" id="u85bec161" style="text-indent: 2em"><span data-lake-id="u6c591e68" id="u6c591e68" class="lake-fontsize-12">5.当某些字段频繁被作为条件查询时，可以将这些字段做成联合索引，可以减少索引数量。</span></p><p data-lake-id="ud4a784f6" id="ud4a784f6" style="text-indent: 2em"><span data-lake-id="u0fb4d6c2" id="u0fb4d6c2" class="lake-fontsize-12">6.对于频繁作为order by,group by,distinct,后面的字段（一般为主键），可以作为索引，加快排序去重，分组速度。</span></p><h2 data-lake-id="LGeyZ" id="LGeyZ" data-lake-index-type="0"><span data-lake-id="u096d7980" id="u096d7980" class="lake-fontsize-12">MySQL中的索引数量是否越多越好？为什么？</span></h2><p data-lake-id="udfa1e1fc" id="udfa1e1fc" style="text-indent: 2em"><span data-lake-id="ude788cce" id="ude788cce" class="lake-fontsize-12">不是</span></p><p data-lake-id="u8209e19f" id="u8209e19f" style="text-indent: 2em"><span data-lake-id="u44f046fa" id="u44f046fa" class="lake-fontsize-12">1.从时间上看，每次对表的增删改，索引也要接着修改，如果数据行很多这就需要消耗很多时间，因为当删除或者增加一个数据行时，会破坏B+树的有序性，从而会自动进行分裂合并，保持有序性。</span></p><p data-lake-id="ude50e0b1" id="ude50e0b1" style="text-indent: 2em"><span data-lake-id="u7eac57de" id="u7eac57de" class="lake-fontsize-12">2.还有如果索引过多，也会影响优化器的选择，就像如果索引过多需要时间计算那个更优，如果索引未及时更新可能就会被pass掉。从而选择次优的索引。</span></p><p data-lake-id="u3a7fbe0d" id="u3a7fbe0d" style="text-indent: 2em"><span data-lake-id="ubacbf211" id="ubacbf211" class="lake-fontsize-12">3.从空间上来看，每建立一个二级索引，都会创建一个B+树，每个数据页大概占16kb,如果量和大这个占用空间可不小。</span></p><p data-lake-id="u987a856f" id="u987a856f" style="text-indent: 2em"><span data-lake-id="u31cb9c3f" id="u31cb9c3f" class="lake-fontsize-12">​</span><br></p><h2 data-lake-id="Q4j7c" id="Q4j7c" data-lake-index-type="0"><span data-lake-id="u84ed947c" id="u84ed947c" class="lake-fontsize-12">如何使用MySQL的explain的语句进行查询分析？</span></h2><p data-lake-id="u49765b84" id="u49765b84"><card type="inline" name="image" value="data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2025%2Fpng%2F32795398%2F1743678283258-98f2106b-5493-4d48-b197-1f32d9af98a8.png%22%2C%22taskId%22%3A%22uba3f9e32-cb52-491c-9562-c9dc86b2282%22%2C%22clientId%22%3A%22u89de416e-d61c-4%22%2C%22originalType%22%3A%22binary%22%2C%22width%22%3A1246.6666666666667%2C%22height%22%3A67%2C%22linkTarget%22%3A%22_blank%22%2C%22name%22%3A%22image.png%22%2C%22size%22%3A20460%2C%22from%22%3A%22paste%22%2C%22originWidth%22%3A1870%2C%22originHeight%22%3A101%2C%22ratio%22%3A1.5%2C%22status%22%3A%22done%22%2C%22style%22%3A%22none%22%2C%22search%22%3A%22D%20KEY%20SELECT_TYPE%20POSSIBLE_KEYS%20ID%20TABLE%20KEY_LEN%20TYPE%20PARTITIONS%20PEF%20POWS%208%20PRIMARY%20PRIMARY%201%20SIMPLE%20CONST%20%3CNUL%3E%20CONST%20USER%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A1276%2C%22y%22%3A15%2C%22width%22%3A78%2C%22height%22%3A27%2C%22text%22%3A%22D%20KEY%22%7D%2C%7B%22x%22%3A220%2C%22y%22%3A18%2C%22width%22%3A157%2C%22height%22%3A24%2C%22text%22%3A%22SELECT_TYPE%22%7D%2C%7B%22x%22%3A1025%2C%22y%22%3A19%2C%22width%22%3A183%2C%22height%22%3A24%2C%22text%22%3A%22POSSIBLE_KEYS%22%7D%2C%7B%22x%22%3A102%2C%22y%22%3A19%2C%22width%22%3A29%2C%22height%22%3A21%2C%22text%22%3A%22ID%22%7D%2C%7B%22x%22%3A469%2C%22y%22%3A19%2C%22width%22%3A72%2C%22height%22%3A22%2C%22text%22%3A%22TABLE%22%7D%2C%7B%22x%22%3A1451%2C%22y%22%3A19%2C%22width%22%3A101%2C%22height%22%3A25%2C%22text%22%3A%22KEY_LEN%22%7D%2C%7B%22x%22%3A861%2C%22y%22%3A19%2C%22width%22%3A62%2C%22height%22%3A24%2C%22text%22%3A%22TYPE%22%7D%2C%7B%22x%22%3A633%2C%22y%22%3A17%2C%22width%22%3A146%2C%22height%22%3A26%2C%22text%22%3A%22PARTITIONS%22%7D%2C%7B%22x%22%3A1653%2C%22y%22%3A19%2C%22width%22%3A39%2C%22height%22%3A21%2C%22text%22%3A%22PEF%22%7D%2C%7B%22x%22%3A1811%2C%22y%22%3A21%2C%22width%22%3A54%2C%22height%22%3A20%2C%22text%22%3A%22POWS%22%7D%2C%7B%22x%22%3A1411%2C%22y%22%3A66%2C%22width%22%3A25%2C%22height%22%3A31%2C%22text%22%3A%228%22%7D%2C%7B%22x%22%3A1269%2C%22y%22%3A67%2C%22width%22%3A101%2C%22height%22%3A25%2C%22text%22%3A%22PRIMARY%22%7D%2C%7B%22x%22%3A985%2C%22y%22%3A67%2C%22width%22%3A101%2C%22height%22%3A25%2C%22text%22%3A%22PRIMARY%22%7D%2C%7B%22x%22%3A152%2C%22y%22%3A66%2C%22width%22%3A116%2C%22height%22%3A27%2C%22text%22%3A%221%20SIMPLE%22%7D%2C%7B%22x%22%3A1613%2C%22y%22%3A69%2C%22width%22%3A74%2C%22height%22%3A22%2C%22text%22%3A%22CONST%22%7D%2C%7B%22x%22%3A597%2C%22y%22%3A69%2C%22width%22%3A87%2C%22height%22%3A24%2C%22text%22%3A%22%3CNUL%3E%22%7D%2C%7B%22x%22%3A828%2C%22y%22%3A70%2C%22width%22%3A71%2C%22height%22%3A21%2C%22text%22%3A%22CONST%22%7D%2C%7B%22x%22%3A431%2C%22y%22%3A70%2C%22width%22%3A57%2C%22height%22%3A21%2C%22text%22%3A%22USER%22%7D%5D%2C%22showTitle%22%3Afalse%2C%22title%22%3A%22%22%2C%22rotation%22%3A0%2C%22crop%22%3A%5B0%2C0%2C1%2C1%5D%2C%22averageHue%22%3A%22%23edf1f7%22%2C%22id%22%3A%22ufd85a36e%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D"></card></p><p data-lake-id="uf76d0a3d" id="uf76d0a3d" style="text-indent: 2em"><span data-lake-id="u80263cc3" id="u80263cc3" class="lake-fontsize-12">1.id:查询的执行顺序的标识符，值越大优先级越高。简单查询的id一般为1，复杂查询的话id会有多个。</span></p><p data-lake-id="ud588658e" id="ud588658e" style="text-indent: 2em"><span data-lake-id="uab91597a" id="uab91597a" class="lake-fontsize-12">2.select_type:查询的类型，如simple（简单查询），primary（主查询），subquery（子查询）等</span></p><p data-lake-id="ue8384420" id="ue8384420" style="text-indent: 2em"><span data-lake-id="uac8d642a" id="uac8d642a" class="lake-fontsize-12">3.table：查询数据表</span></p><p data-lake-id="u01844515" id="u01844515" style="text-indent: 2em"><span data-lake-id="ud9a5723a" id="ud9a5723a" class="lake-fontsize-12">4.type:访问类型const&gt;eq_ref&gt;ref&gt;range&gt;index&gt;all</span></p><p data-lake-id="u07eb02bf" id="u07eb02bf" style="text-indent: 2em"><span data-lake-id="uc093c0d2" id="uc093c0d2" class="lake-fontsize-12">5.possible_keys:可能用到的索引</span></p><p data-lake-id="uc383183b" id="uc383183b" style="text-indent: 2em"><span data-lake-id="uc6952663" id="uc6952663" class="lake-fontsize-12">6.key:实际用到的索引</span></p><p data-lake-id="u283202f5" id="u283202f5" style="text-indent: 2em"><span data-lake-id="u5937820f" id="u5937820f" class="lake-fontsize-12">7.key_len:用到的索引</span></p><p data-lake-id="u8192cf38" id="u8192cf38" style="text-indent: 2em"><span data-lake-id="uc38786d0" id="uc38786d0" class="lake-fontsize-12">8.ref:显示索引的那一列被使用</span></p><p data-lake-id="udd977a2a" id="udd977a2a" style="text-indent: 2em"><span data-lake-id="ufdb14abd" id="ufdb14abd" class="lake-fontsize-12">9.rows:估计要扫描的行数，值越小越好。</span></p><p data-lake-id="uc83373a9" id="uc83373a9" style="text-indent: 2em"><span data-lake-id="u57e70856" id="u57e70856" class="lake-fontsize-12">10.extra:额外信息，如usering index(表示使用覆盖索引)，using where(表示使用where条件过滤)，using temporary(表示使用临时表)，using filesort（表示额外的排序步骤）。</span></p><h2 data-lake-id="WgEoe" id="WgEoe" data-lake-index-type="0"><span data-lake-id="uba43c798" id="uba43c798" class="lake-fontsize-12">MySQL中如何进行SQL调优？</span></h2><p data-lake-id="u8689d664" id="u8689d664" style="text-indent: 2em"><span data-lake-id="u202c06ff" id="u202c06ff" class="lake-fontsize-12">1.平时进行SQL调优，主要是通过观察慢SQL，然后利用explain分析查询语句据的执行情况，识别瓶颈，优化查询语句。</span></p><p data-lake-id="u9e7df3ad" id="u9e7df3ad" style="text-indent: 2em"><span data-lake-id="ucabe69f6" id="ucabe69f6" class="lake-fontsize-12">2.合理设计索引，避免回表。</span></p><p data-lake-id="u5406f987" id="u5406f987" style="text-indent: 2em"><span data-lake-id="u4d34d6c2" id="u4d34d6c2" class="lake-fontsize-12">3.避免使用*查询</span></p><p data-lake-id="u3772c67e" id="u3772c67e" style="text-indent: 2em"><span data-lake-id="u3ac01486" id="u3ac01486" class="lake-fontsize-12">4.不要使用函数</span></p><p data-lake-id="u24ae83aa" id="u24ae83aa" style="text-indent: 2em"><span data-lake-id="u974a211e" id="u974a211e" class="lake-fontsize-12">5.不要使用模糊查询</span></p><p data-lake-id="u41af03f5" id="u41af03f5" style="text-indent: 2em"><span data-lake-id="u4641681f" id="u4641681f" class="lake-fontsize-12">6.满足最左侧匹配原则</span></p><p data-lake-id="ubfb4e3de" id="ubfb4e3de" style="text-indent: 2em"><span data-lake-id="ue5c0441f" id="ue5c0441f" class="lake-fontsize-12">7.不要对无索引字段进行排序操作</span></p><p data-lake-id="u255cc81b" id="u255cc81b" style="text-indent: 2em"><span data-lake-id="u7d0019c3" id="u7d0019c3" class="lake-fontsize-12">8.连表查询需要注意不同字段的字符集是否一致，否则会进行全表查询。</span></p><p data-lake-id="u9e1d1bc6" id="u9e1d1bc6" style="text-indent: 2em"><span data-lake-id="ue8f9c96d" id="ue8f9c96d" class="lake-fontsize-12">9.可以利用缓存优化，一些变化少或者访问频繁的数据设置到缓存中。</span></p><p data-lake-id="u1dd09f0d" id="u1dd09f0d" style="text-indent: 2em"><span data-lake-id="u04cab91f" id="u04cab91f" class="lake-fontsize-12">慢SQL</span></p><p data-lake-id="u979fee87" id="u979fee87" style="text-indent: 2em"><span data-lake-id="ub147d51b" id="ub147d51b" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">MySQL通过</span><code data-lake-id="u25909d3d" id="u25909d3d"><span data-lake-id="u7ca0dbcb" id="u7ca0dbcb" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">long_query_time</span></code><span data-lake-id="uf9cebc70" id="uf9cebc70" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">参数(默认10秒)来定义慢查询：</span></p><ul list="u8461a123"><li fid="u515f19fd" data-lake-id="u6d0e64a5" id="u6d0e64a5"><span data-lake-id="u4db6ceeb" id="u4db6ceeb" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">执行时间超过此阈值的SQL会被记录到慢查询日志中</span></li><li fid="u515f19fd" data-lake-id="u322f8078" id="u322f8078"><span data-lake-id="u6893e9e4" id="u6893e9e4" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">实际应用中，通常会将阈值设置为更小的值(如1-2秒)</span></li></ul><card type="inline" name="codeblock" value="data:%7B%22search%22%3A%22%22%2C%22mode%22%3A%22plain%22%2C%22code%22%3A%22--%20%E6%9F%A5%E7%9C%8B%E6%85%A2%E6%9F%A5%E8%AF%A2%E6%97%A5%E5%BF%97%E9%85%8D%E7%BD%AE%5CnSHOW%20VARIABLES%20LIKE%20'%25slow_query_log%25'%3B%5CnSHOW%20VARIABLES%20LIKE%20'%25long_query_time%25'%3B%5Cn%5Cn--%20%E5%90%AF%E7%94%A8%E6%85%A2%E6%9F%A5%E8%AF%A2%E6%97%A5%E5%BF%97%5CnSET%20GLOBAL%20slow_query_log%20%3D%20'ON'%3B%5CnSET%20GLOBAL%20long_query_time%20%3D%202%3B%20--%20%E8%AE%BE%E7%BD%AE%E4%B8%BA2%E7%A7%92%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22Bracket%20Lights%20Pro%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22Nwfa0%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D"></card><ol list="u4f07ba8c"><li fid="u0214c4df" data-lake-id="u33ced238" id="u33ced238"><strong><span data-lake-id="ua7d74ccd" id="ua7d74ccd" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">性能分析工具</span></strong><span data-lake-id="u63a28de0" id="u63a28de0" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">：</span></li></ol><ul list="u034acb71" data-lake-indent="1"><li fid="ufad72e59" data-lake-id="ub41173f4" id="ub41173f4"><code data-lake-id="ua4708e60" id="ua4708e60"><span data-lake-id="u225b8129" id="u225b8129" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">EXPLAIN</span></code><span data-lake-id="udc2a3b04" id="udc2a3b04" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">分析执行计划</span></li><li fid="ufad72e59" data-lake-id="uf834ddc5" id="uf834ddc5"><code data-lake-id="uf866c214" id="uf866c214"><span data-lake-id="ub7446780" id="ub7446780" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">SHOW PROFILE</span></code><span data-lake-id="u99351657" id="u99351657" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">查看详细执行信息</span></li><li fid="ufad72e59" data-lake-id="ue1dc1b6e" id="ue1dc1b6e"><span data-lake-id="u00ac9be6" id="u00ac9be6" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">Performance Schema监控</span></li></ul><h2 data-lake-id="qzLz4" id="qzLz4" data-lake-index-type="0"><span data-lake-id="uf51fe22f" id="uf51fe22f" class="lake-fontsize-12">请详细描述MySQL的B+树中的查询过程？</span></h2><p data-lake-id="uab337281" id="uab337281"><span data-lake-id="uf49e83b3" id="uf49e83b3" class="lake-fontsize-12">1.数据从根节点开始，首先你知道数据行的主键，然后将主键与根节点的索引表进行二分区间查找，从上到下，从根节点到中间结点，最后到叶子节点。</span></p><p data-lake-id="u4401279e" id="u4401279e"><card type="inline" name="image" value="data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2025%2Fpng%2F32795398%2F1743753537667-0d5903bd-42df-4102-a948-52c17bf198f1.png%22%2C%22taskId%22%3A%22ua7fd9183-88f4-4f4d-9a1c-a2e5eefbff4%22%2C%22clientId%22%3A%22uca086c05-a801-4%22%2C%22originalType%22%3A%22binary%22%2C%22width%22%3A1374.6666666666667%2C%22height%22%3A579%2C%22linkTarget%22%3A%22_blank%22%2C%22name%22%3A%22image.png%22%2C%22size%22%3A602167%2C%22from%22%3A%22paste%22%2C%22originWidth%22%3A2062%2C%22originHeight%22%3A868%2C%22ratio%22%3A1.5%2C%22status%22%3A%22done%22%2C%22style%22%3A%22none%22%2C%22search%22%3A%22%E6%A0%B9%E5%8F%B6%E5%AD%90%E8%8A%82%E7%82%B9PAGE%2020%20PAGE%20DIRECTORY%20%E9%A1%B5%E7%9B%AE%E5%BD%95%20SUPREMUM%20PAG%20PAG%2010%2018%20%E9%9D%9E%E5%8F%B6%E5%AD%90%E8%8A%82%E7%82%B9%20PAGE%2010%20%E9%9D%9E%E5%8F%B6%E5%AD%90%E8%8A%82%E7%82%B9%20PAGE%2018%20PAGE%20DIRECTORY%20%E9%A1%B5%E7%9B%AE%E5%BD%95%20PAGE%20DIRECTORY%20%E9%A1%B5%E7%9B%AE%E5%BD%95%2015%2010%20RECORD%20RECORD%20PAGE%20PAGE%20PAGE%2012%2015%2014%20%E5%8F%B6%E5%AD%90%E8%8A%82%E7%82%B9PAGE%2014%20%E5%8F%B6%E5%AD%90%E8%8A%82%E7%82%B9%20PAGE%205%20%E5%8F%B6%E5%AD%90%E8%8A%82%E7%82%B9%20PAGE%2012%20%E5%8F%B6%E5%AD%90%E8%8A%82%E7%82%B9%20PAGE%2015%20PAGE%20DIRECTORY%20%E9%A1%B5%E7%9B%AE%E5%BD%95%20PAGE%20DIRECTORY%20%E9%A1%B5%E7%9B%AE%E5%BD%95%20PAGE%20DIRECTORY%20%E9%A1%B5%E7%9B%AE%E5%BD%95%20PAGE%20DIRECTORY%20%E9%A1%B5%E7%9B%AE%E5%BD%95%2010%20SUPREMUM%20SUPREMUM%20RECORD%20RECORD%20DATA%20DATA%20DATA%20DATA%20DATA%20DATA%20DATA%20DATA%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A1003%2C%22y%22%3A9%2C%22width%22%3A147%2C%22height%22%3A20%2C%22text%22%3A%22%E6%A0%B9%E5%8F%B6%E5%AD%90%E8%8A%82%E7%82%B9PAGE%2020%22%7D%2C%7B%22x%22%3A1004%2C%22y%22%3A65%2C%22width%22%3A163%2C%22height%22%3A22%2C%22text%22%3A%22PAGE%20DIRECTORY%20%E9%A1%B5%E7%9B%AE%E5%BD%95%22%7D%2C%7B%22x%22%3A1160%2C%22y%22%3A150%2C%22width%22%3A63%2C%22height%22%3A16%2C%22text%22%3A%22SUPREMUM%22%7D%2C%7B%22x%22%3A1017%2C%22y%22%3A168%2C%22width%22%3A31%2C%22height%22%3A24%2C%22text%22%3A%22PAG%22%7D%2C%7B%22x%22%3A1090%2C%22y%22%3A170%2C%22width%22%3A28%2C%22height%22%3A19%2C%22text%22%3A%22PAG%22%7D%2C%7B%22x%22%3A1023%2C%22y%22%3A192%2C%22width%22%3A19%2C%22height%22%3A21%2C%22text%22%3A%2210%22%7D%2C%7B%22x%22%3A1095%2C%22y%22%3A195%2C%22width%22%3A22%2C%22height%22%3A19%2C%22text%22%3A%2218%22%7D%2C%7B%22x%22%3A642%2C%22y%22%3A303%2C%22width%22%3A144%2C%22height%22%3A21%2C%22text%22%3A%22%E9%9D%9E%E5%8F%B6%E5%AD%90%E8%8A%82%E7%82%B9%20PAGE%2010%22%7D%2C%7B%22x%22%3A1582%2C%22y%22%3A310%2C%22width%22%3A142%2C%22height%22%3A21%2C%22text%22%3A%22%E9%9D%9E%E5%8F%B6%E5%AD%90%E8%8A%82%E7%82%B9%20PAGE%2018%22%7D%2C%7B%22x%22%3A661%2C%22y%22%3A357%2C%22width%22%3A161%2C%22height%22%3A21%2C%22text%22%3A%22PAGE%20DIRECTORY%20%E9%A1%B5%E7%9B%AE%E5%BD%95%22%7D%2C%7B%22x%22%3A1585%2C%22y%22%3A358%2C%22width%22%3A162%2C%22height%22%3A21%2C%22text%22%3A%22PAGE%20DIRECTORY%20%E9%A1%B5%E7%9B%AE%E5%BD%95%22%7D%2C%7B%22x%22%3A1630%2C%22y%22%3A417%2C%22width%22%3A23%2C%22height%22%3A18%2C%22text%22%3A%2215%22%7D%2C%7B%22x%22%3A796%2C%22y%22%3A418%2C%22width%22%3A19%2C%22height%22%3A15%2C%22text%22%3A%2210%22%7D%2C%7B%22x%22%3A520%2C%22y%22%3A457%2C%22width%22%3A48%2C%22height%22%3A15%2C%22text%22%3A%22RECORD%22%7D%2C%7B%22x%22%3A1718%2C%22y%22%3A457%2C%22width%22%3A47%2C%22height%22%3A15%2C%22text%22%3A%22RECORD%22%7D%2C%7B%22x%22%3A716%2C%22y%22%3A465%2C%22width%22%3A31%2C%22height%22%3A18%2C%22text%22%3A%22PAGE%22%7D%2C%7B%22x%22%3A1626%2C%22y%22%3A465%2C%22width%22%3A30%2C%22height%22%3A19%2C%22text%22%3A%22PAGE%22%7D%2C%7B%22x%22%3A789%2C%22y%22%3A465%2C%22width%22%3A32%2C%22height%22%3A18%2C%22text%22%3A%22PAGE%22%7D%2C%7B%22x%22%3A1629%2C%22y%22%3A488%2C%22width%22%3A24%2C%22height%22%3A19%2C%22text%22%3A%2212%22%7D%2C%7B%22x%22%3A793%2C%22y%22%3A489%2C%22width%22%3A23%2C%22height%22%3A17%2C%22text%22%3A%2215%22%7D%2C%7B%22x%22%3A721%2C%22y%22%3A490%2C%22width%22%3A21%2C%22height%22%3A16%2C%22text%22%3A%2214%22%7D%2C%7B%22x%22%3A645%2C%22y%22%3A662%2C%22width%22%3A134%2C%22height%22%3A23%2C%22text%22%3A%22%E5%8F%B6%E5%AD%90%E8%8A%82%E7%82%B9PAGE%2014%22%7D%2C%7B%22x%22%3A156%2C%22y%22%3A663%2C%22width%22%3A119%2C%22height%22%3A19%2C%22text%22%3A%22%E5%8F%B6%E5%AD%90%E8%8A%82%E7%82%B9%20PAGE%205%22%7D%2C%7B%22x%22%3A1820%2C%22y%22%3A663%2C%22width%22%3A130%2C%22height%22%3A21%2C%22text%22%3A%22%E5%8F%B6%E5%AD%90%E8%8A%82%E7%82%B9%20PAGE%2012%22%7D%2C%7B%22x%22%3A1148%2C%22y%22%3A664%2C%22width%22%3A130%2C%22height%22%3A21%2C%22text%22%3A%22%E5%8F%B6%E5%AD%90%E8%8A%82%E7%82%B9%20PAGE%2015%22%7D%2C%7B%22x%22%3A150%2C%22y%22%3A718%2C%22width%22%3A162%2C%22height%22%3A20%2C%22text%22%3A%22PAGE%20DIRECTORY%20%E9%A1%B5%E7%9B%AE%E5%BD%95%22%7D%2C%7B%22x%22%3A639%2C%22y%22%3A718%2C%22width%22%3A163%2C%22height%22%3A21%2C%22text%22%3A%22PAGE%20DIRECTORY%20%E9%A1%B5%E7%9B%AE%E5%BD%95%22%7D%2C%7B%22x%22%3A1143%2C%22y%22%3A719%2C%22width%22%3A162%2C%22height%22%3A20%2C%22text%22%3A%22PAGE%20DIRECTORY%20%E9%A1%B5%E7%9B%AE%E5%BD%95%22%7D%2C%7B%22x%22%3A1815%2C%22y%22%3A719%2C%22width%22%3A162%2C%22height%22%3A19%2C%22text%22%3A%22PAGE%20DIRECTORY%20%E9%A1%B5%E7%9B%AE%E5%BD%95%22%7D%2C%7B%22x%22%3A1170%2C%22y%22%3A778%2C%22width%22%3A21%2C%22height%22%3A18%2C%22text%22%3A%2210%22%7D%2C%7B%22x%22%3A313%2C%22y%22%3A791%2C%22width%22%3A59%2C%22height%22%3A16%2C%22text%22%3A%22SUPREMUM%22%7D%2C%7B%22x%22%3A1304%2C%22y%22%3A792%2C%22width%22%3A62%2C%22height%22%3A16%2C%22text%22%3A%22SUPREMUM%22%7D%2C%7B%22x%22%3A1027%2C%22y%22%3A817%2C%22width%22%3A50%2C%22height%22%3A16%2C%22text%22%3A%22RECORD%22%7D%2C%7B%22x%22%3A524%2C%22y%22%3A818%2C%22width%22%3A47%2C%22height%22%3A15%2C%22text%22%3A%22RECORD%22%7D%2C%7B%22x%22%3A1235%2C%22y%22%3A822%2C%22width%22%3A33%2C%22height%22%3A20%2C%22text%22%3A%22DATA%22%7D%2C%7B%22x%22%3A172%2C%22y%22%3A823%2C%22width%22%3A31%2C%22height%22%3A21%2C%22text%22%3A%22DATA%22%7D%2C%7B%22x%22%3A1907%2C%22y%22%3A822%2C%22width%22%3A33%2C%22height%22%3A21%2C%22text%22%3A%22DATA%22%7D%2C%7B%22x%22%3A1834%2C%22y%22%3A823%2C%22width%22%3A33%2C%22height%22%3A19%2C%22text%22%3A%22DATA%22%7D%2C%7B%22x%22%3A239%2C%22y%22%3A823%2C%22width%22%3A36%2C%22height%22%3A18%2C%22text%22%3A%22DATA%22%7D%2C%7B%22x%22%3A655%2C%22y%22%3A824%2C%22width%22%3A39%2C%22height%22%3A19%2C%22text%22%3A%22DATA%22%7D%2C%7B%22x%22%3A1163%2C%22y%22%3A823%2C%22width%22%3A32%2C%22height%22%3A20%2C%22text%22%3A%22DATA%22%7D%2C%7B%22x%22%3A731%2C%22y%22%3A823%2C%22width%22%3A32%2C%22height%22%3A18%2C%22text%22%3A%22DATA%22%7D%5D%2C%22showTitle%22%3Afalse%2C%22title%22%3A%22%22%2C%22rotation%22%3A0%2C%22crop%22%3A%5B0%2C0%2C1%2C1%5D%2C%22averageHue%22%3A%22%23e2dfbc%22%2C%22id%22%3A%22u13deff84%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D"></card></p><p data-lake-id="uf22ad3b0" id="uf22ad3b0"><span data-lake-id="ub1bb90b6" id="ub1bb90b6" class="lake-fontsize-12">2.到了叶子节点并没有结束，每个叶子节点有16kb,能够存储很多数据行， 叶子节点里面有页目录，页目录由一个个槽组成，标号是从0到n,每个槽对应一个分组，用指针指向对应分组中的内存最大行主键，0槽指向最小记录组，从上到下依次。然后再次用主键在页目录中进行二分，找到对应的组，如果刚好需要查询的数据行是当前页的最大记录行那么这次查询结束。如果不是，则返回当前槽的上一位槽进行查询，从上一个分组的最大行向下遍历查找，因为每组中数据行使用单向链表链接从上到下，每组之间也是使用链表链接。</span></p><p data-lake-id="u723725d6" id="u723725d6"><card type="inline" name="image" value="data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2025%2Fpng%2F32795398%2F1743753589620-52fbdb04-114c-49d1-8545-d4d9a2733c53.png%22%2C%22taskId%22%3A%22ube1d91b4-daee-4df8-8e7f-4dd7afc7d70%22%2C%22clientId%22%3A%22uca086c05-a801-4%22%2C%22originalType%22%3A%22binary%22%2C%22width%22%3A742.6666666666666%2C%22height%22%3A762%2C%22linkTarget%22%3A%22_blank%22%2C%22name%22%3A%22image.png%22%2C%22size%22%3A589354%2C%22from%22%3A%22paste%22%2C%22originWidth%22%3A1114%2C%22originHeight%22%3A1143%2C%22ratio%22%3A1.5%2C%22status%22%3A%22done%22%2C%22style%22%3A%22none%22%2C%22search%22%3A%22PAGE%20PAGE%20DIECTORY%20GROUP%201%20INFIRMUN%20RECORD%20NEXT%20RECORD%20SLOT%200%20RECORD%202%20RECORD%200%20GROUP%202%20SLOT%201%20RECORD%204%20RECORD%205%20RECORD%20RECORD%20GROUP%203%20SLOT%202%20RECORD%20RECORD%20RECORD%20RECORD%200%2010%200%20SLOT%203%20GROUP%204%20RECORD%200%2012%200%2011%20RECORD%205%20SUPREMUM%20RECORD%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A492%2C%22y%22%3A17%2C%22width%22%3A87%2C%22height%22%3A35%2C%22text%22%3A%22PAGE%22%7D%2C%7B%22x%22%3A32%2C%22y%22%3A104%2C%22width%22%3A145%2C%22height%22%3A24%2C%22text%22%3A%22PAGE%20DIECTORY%22%7D%2C%7B%22x%22%3A925%2C%22y%22%3A166%2C%22width%22%3A105%2C%22height%22%3A30%2C%22text%22%3A%22GROUP%201%22%7D%2C%7B%22x%22%3A536%2C%22y%22%3A167%2C%22width%22%3A170%2C%22height%22%3A21%2C%22text%22%3A%22INFIRMUN%20RECORD%22%7D%2C%7B%22x%22%3A390%2C%22y%22%3A169%2C%22width%22%3A123%2C%22height%22%3A19%2C%22text%22%3A%22NEXT%20RECORD%22%7D%2C%7B%22x%22%3A76%2C%22y%22%3A196%2C%22width%22%3A58%2C%22height%22%3A17%2C%22text%22%3A%22SLOT%200%22%7D%2C%7B%22x%22%3A777%2C%22y%22%3A340%2C%22width%22%3A72%2C%22height%22%3A21%2C%22text%22%3A%22RECORD%22%7D%2C%7B%22x%22%3A710%2C%22y%22%3A341%2C%22width%22%3A18%2C%22height%22%3A22%2C%22text%22%3A%222%22%7D%2C%7B%22x%22%3A447%2C%22y%22%3A341%2C%22width%22%3A75%2C%22height%22%3A21%2C%22text%22%3A%22RECORD%22%7D%2C%7B%22x%22%3A602%2C%22y%22%3A343%2C%22width%22%3A16%2C%22height%22%3A16%2C%22text%22%3A%220%22%7D%2C%7B%22x%22%3A924%2C%22y%22%3A392%2C%22width%22%3A110%2C%22height%22%3A34%2C%22text%22%3A%22GROUP%202%22%7D%2C%7B%22x%22%3A77%2C%22y%22%3A401%2C%22width%22%3A52%2C%22height%22%3A17%2C%22text%22%3A%22SLOT%201%22%7D%2C%7B%22x%22%3A449%2C%22y%22%3A444%2C%22width%22%3A73%2C%22height%22%3A22%2C%22text%22%3A%22RECORD%22%7D%2C%7B%22x%22%3A710%2C%22y%22%3A462%2C%22width%22%3A18%2C%22height%22%3A21%2C%22text%22%3A%224%22%7D%2C%7B%22x%22%3A775%2C%22y%22%3A462%2C%22width%22%3A73%2C%22height%22%3A19%2C%22text%22%3A%22RECORD%22%7D%2C%7B%22x%22%3A384%2C%22y%22%3A600%2C%22width%22%3A15%2C%22height%22%3A21%2C%22text%22%3A%225%22%7D%2C%7B%22x%22%3A446%2C%22y%22%3A600%2C%22width%22%3A77%2C%22height%22%3A24%2C%22text%22%3A%22RECORD%22%7D%2C%7B%22x%22%3A776%2C%22y%22%3A601%2C%22width%22%3A73%2C%22height%22%3A20%2C%22text%22%3A%22RECORD%22%7D%2C%7B%22x%22%3A923%2C%22y%22%3A641%2C%22width%22%3A107%2C%22height%22%3A26%2C%22text%22%3A%22GROUP%203%22%7D%2C%7B%22x%22%3A76%2C%22y%22%3A645%2C%22width%22%3A59%2C%22height%22%3A19%2C%22text%22%3A%22SLOT%202%22%7D%2C%7B%22x%22%3A784%2C%22y%22%3A705%2C%22width%22%3A74%2C%22height%22%3A23%2C%22text%22%3A%22RECORD%22%7D%2C%7B%22x%22%3A451%2C%22y%22%3A706%2C%22width%22%3A71%2C%22height%22%3A21%2C%22text%22%3A%22RECORD%22%7D%2C%7B%22x%22%3A457%2C%22y%22%3A883%2C%22width%22%3A76%2C%22height%22%3A21%2C%22text%22%3A%22RECORD%22%7D%2C%7B%22x%22%3A785%2C%22y%22%3A882%2C%22width%22%3A73%2C%22height%22%3A21%2C%22text%22%3A%22RECORD%22%7D%2C%7B%22x%22%3A283%2C%22y%22%3A884%2C%22width%22%3A17%2C%22height%22%3A19%2C%22text%22%3A%220%22%7D%2C%7B%22x%22%3A718%2C%22y%22%3A885%2C%22width%22%3A24%2C%22height%22%3A19%2C%22text%22%3A%2210%22%7D%2C%7B%22x%22%3A612%2C%22y%22%3A885%2C%22width%22%3A16%2C%22height%22%3A19%2C%22text%22%3A%220%22%7D%2C%7B%22x%22%3A76%2C%22y%22%3A918%2C%22width%22%3A57%2C%22height%22%3A20%2C%22text%22%3A%22SLOT%203%22%7D%2C%7B%22x%22%3A923%2C%22y%22%3A962%2C%22width%22%3A106%2C%22height%22%3A27%2C%22text%22%3A%22GROUP%204%22%7D%2C%7B%22x%22%3A784%2C%22y%22%3A991%2C%22width%22%3A74%2C%22height%22%3A24%2C%22text%22%3A%22RECORD%22%7D%2C%7B%22x%22%3A612%2C%22y%22%3A992%2C%22width%22%3A16%2C%22height%22%3A21%2C%22text%22%3A%220%22%7D%2C%7B%22x%22%3A714%2C%22y%22%3A992%2C%22width%22%3A28%2C%22height%22%3A21%2C%22text%22%3A%2212%22%7D%2C%7B%22x%22%3A292%2C%22y%22%3A993%2C%22width%22%3A15%2C%22height%22%3A20%2C%22text%22%3A%220%22%7D%2C%7B%22x%22%3A396%2C%22y%22%3A994%2C%22width%22%3A23%2C%22height%22%3A19%2C%22text%22%3A%2211%22%7D%2C%7B%22x%22%3A459%2C%22y%22%3A995%2C%22width%22%3A71%2C%22height%22%3A19%2C%22text%22%3A%22RECORD%22%7D%2C%7B%22x%22%3A611%2C%22y%22%3A1076%2C%22width%22%3A15%2C%22height%22%3A24%2C%22text%22%3A%225%22%7D%2C%7B%22x%22%3A651%2C%22y%22%3A1076%2C%22width%22%3A192%2C%22height%22%3A23%2C%22text%22%3A%22SUPREMUM%20RECORD%22%7D%5D%2C%22showTitle%22%3Afalse%2C%22title%22%3A%22%22%2C%22rotation%22%3A0%2C%22crop%22%3A%5B0%2C0%2C1%2C1%5D%2C%22averageHue%22%3A%22%23e7e1cf%22%2C%22id%22%3A%22ue4c03b37%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D"></card></p><p data-lake-id="uc89b5115" id="uc89b5115" style="text-indent: 2em"><span data-lake-id="u5b4e5cb3" id="u5b4e5cb3" class="lake-fontsize-12">扩展：每组的记录数有规定</span></p><p data-lake-id="u121258a9" id="u121258a9" style="text-indent: 2em"><span data-lake-id="u6bb0b92d" id="u6bb0b92d" class="lake-fontsize-12">第一个分组只记录一个记录</span></p><p data-lake-id="u762f6951" id="u762f6951" style="text-indent: 2em"><span data-lake-id="u30c99f6f" id="u30c99f6f" class="lake-fontsize-12">中间的额分组记录4-8个记录</span></p><p data-lake-id="u78f9a8a9" id="u78f9a8a9" style="text-indent: 2em"><span data-lake-id="u5b4c0d9d" id="u5b4c0d9d" class="lake-fontsize-12">最后记录1-8个记录</span></p><p data-lake-id="uf73345e0" id="uf73345e0" style="text-indent: 2em"><span data-lake-id="u40df2324" id="u40df2324" class="lake-fontsize-12">因此不必担心链表过长性能差</span></p><h2 data-lake-id="YCKrk" id="YCKrk" data-lake-index-type="0"><span data-lake-id="u37740d9a" id="u37740d9a">MySQL中count(*),count(1),count(字段名)有什么区别</span><span data-lake-id="uc8d708ae" id="uc8d708ae" class="lake-fontsize-12">？</span></h2><p data-lake-id="ud14f0f1c" id="ud14f0f1c" style="text-indent: 2em"><span data-lake-id="u60c286a9" id="u60c286a9" class="lake-fontsize-12">首先他们都是用来统计行数的</span><strong><span data-lake-id="u02278e36" id="u02278e36" class="lake-fontsize-12">聚合函数</span></strong></p><table data-lake-id="fpUhi" id="fpUhi" margin="true" class="lake-table" style="width: 750px"><colgroup><col width="150"><col width="150"><col width="150"><col width="150"><col width="150"></colgroup><tbody><tr data-lake-id="ud56d1d5e" id="ud56d1d5e"><td data-lake-id="u9962a240" id="u9962a240"><p data-lake-id="u5275e673" id="u5275e673" style="text-align: left"><strong><span data-lake-id="u28e55c54" id="u28e55c54" class="lake-fontsize-12" style="color: rgb(var(--ds-rgb-label-1))">函数形式</span></strong></p></td><td data-lake-id="ud212b319" id="ud212b319"><p data-lake-id="ub82815b9" id="ub82815b9" style="text-align: left"><strong><span data-lake-id="uf05f0af0" id="uf05f0af0" class="lake-fontsize-12" style="color: rgb(var(--ds-rgb-label-1))">功能描述</span></strong></p></td><td data-lake-id="u087d8963" id="u087d8963"><p data-lake-id="u787db68c" id="u787db68c" style="text-align: left"><strong><span data-lake-id="ufdc264ee" id="ufdc264ee" class="lake-fontsize-12" style="color: rgb(var(--ds-rgb-label-1))">是否统计NULL值</span></strong></p></td><td data-lake-id="u1750b8e4" id="u1750b8e4"><p data-lake-id="u25f77ce5" id="u25f77ce5" style="text-align: left"><strong><span data-lake-id="uc9ce5b42" id="uc9ce5b42" class="lake-fontsize-12" style="color: rgb(var(--ds-rgb-label-1))">性能比较</span></strong></p></td><td data-lake-id="u3efe412c" id="u3efe412c"><p data-lake-id="u28a800c5" id="u28a800c5" style="text-align: left"><strong><span data-lake-id="ua52c9ed2" id="ua52c9ed2" class="lake-fontsize-12" style="color: rgb(var(--ds-rgb-label-1))">使用场景</span></strong></p></td></tr><tr data-lake-id="u2ece1b0b" id="u2ece1b0b"><td data-lake-id="ufdf6ad46" id="ufdf6ad46"><p data-lake-id="u800e85cb" id="u800e85cb"><code data-lake-id="u8ef043ce" id="u8ef043ce"><span data-lake-id="ubdf92551" id="ubdf92551" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">COUNT(*)</span></code></p></td><td data-lake-id="u8649f47f" id="u8649f47f"><p data-lake-id="u09c0e3e9" id="u09c0e3e9"><span data-lake-id="ucc574109" id="ucc574109" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">统计表中所有行的数量，包括NULL值行</span></p></td><td data-lake-id="u3d8013b9" id="u3d8013b9"><p data-lake-id="u137f6fa1" id="u137f6fa1"><span data-lake-id="uc630f31e" id="uc630f31e" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">是</span></p></td><td data-lake-id="ue0794f48" id="ue0794f48"><p data-lake-id="u2d7fa444" id="u2d7fa444"><span data-lake-id="u657bfa64" id="u657bfa64" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">现代数据库优化后性能最好</span></p></td><td data-lake-id="u32a14ee2" id="u32a14ee2"><p data-lake-id="u1a6e0089" id="u1a6e0089"><span data-lake-id="ue4633a78" id="ue4633a78" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">需要统计表总行数时使用</span></p></td></tr><tr data-lake-id="u385b05ae" id="u385b05ae"><td data-lake-id="u718f0f88" id="u718f0f88"><p data-lake-id="ud47bcb23" id="ud47bcb23"><code data-lake-id="u1a53ff6e" id="u1a53ff6e"><span data-lake-id="u315bf2ae" id="u315bf2ae" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">COUNT(1)</span></code></p></td><td data-lake-id="u75090aee" id="u75090aee"><p data-lake-id="u4dabb0c8" id="u4dabb0c8"><span data-lake-id="u6ee6657d" id="u6ee6657d" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">统计表中所有行的数量，相当于为每行提供一个常量值1</span></p></td><td data-lake-id="u94c4b7e4" id="u94c4b7e4"><p data-lake-id="ub729d6fd" id="ub729d6fd"><span data-lake-id="u7b4ac317" id="u7b4ac317" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">是</span></p></td><td data-lake-id="uaeca37cf" id="uaeca37cf"><p data-lake-id="uad39ea7f" id="uad39ea7f"><span data-lake-id="ufc0d5e7a" id="ufc0d5e7a" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">与COUNT(*)性能几乎相同</span></p></td><td data-lake-id="u328a3fde" id="u328a3fde"><p data-lake-id="u510d72f2" id="u510d72f2"><span data-lake-id="uea947b2f" id="uea947b2f" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">功能同COUNT(*)，但语义稍不直观</span></p></td></tr><tr data-lake-id="u3138d88e" id="u3138d88e"><td data-lake-id="ub77f3221" id="ub77f3221"><p data-lake-id="uba6caf09" id="uba6caf09"><code data-lake-id="u3c7e53e3" id="u3c7e53e3"><span data-lake-id="uaf3b95b2" id="uaf3b95b2" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">COUNT(字段名)</span></code></p></td><td data-lake-id="u72ceb0d3" id="u72ceb0d3"><p data-lake-id="u096f3643" id="u096f3643"><span data-lake-id="u13d26f9a" id="u13d26f9a" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">统计指定字段非NULL值的行数</span></p></td><td data-lake-id="ud1a94131" id="ud1a94131"><p data-lake-id="u98e27b36" id="u98e27b36"><span data-lake-id="ub157b079" id="ub157b079" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">否</span></p></td><td data-lake-id="uea095472" id="uea095472"><p data-lake-id="uf18f4333" id="uf18f4333"><span data-lake-id="u8c903718" id="u8c903718" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">比COUNT(*)稍慢，需检查字段是否为NULL</span></p></td><td data-lake-id="udd424326" id="udd424326"><p data-lake-id="ued49da27" id="ued49da27"><span data-lake-id="udefce666" id="udefce666" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">需要统计某字段非NULL值的数量时使用</span></p></td></tr></tbody></table><ol list="u8b8fefb0"><li fid="u5328cc90" data-lake-id="u4f59576a" id="u4f59576a"><strong><span data-lake-id="u1362187c" id="u1362187c" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">效率问题</span></strong><span data-lake-id="ub2971833" id="ub2971833" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">：在现代数据库系统中，</span><code data-lake-id="u2c00d609" id="u2c00d609"><span data-lake-id="ufa5a9c30" id="ufa5a9c30" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">COUNT(*)</span></code><span data-lake-id="ue0d30a76" id="ue0d30a76" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">和</span><code data-lake-id="u2bb02667" id="u2bb02667"><span data-lake-id="u2f72c065" id="u2f72c065" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">COUNT(1)</span></code><span data-lake-id="ue4da3aef" id="ue4da3aef" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">的执行效率基本相同，因为优化器会对它们做相同处理。</span></li><li fid="u5328cc90" data-lake-id="u2e4c4fe8" id="u2e4c4fe8"><span data-lake-id="ue2b50922" id="ue2b50922" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">**COUNT(字段名)**的特殊情况：</span></li></ol><ul list="ude92e465" data-lake-indent="1"><li fid="u9a30cc34" data-lake-id="u228a9029" id="u228a9029"><span data-lake-id="u40a0d12e" id="u40a0d12e" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">如果字段有索引，数据库可能会使用索引来加速计数</span></li><li fid="u9a30cc34" data-lake-id="u31e1bfce" id="u31e1bfce"><span data-lake-id="u47c52ecb" id="u47c52ecb" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">如果字段定义为NOT NULL，则结果与COUNT(*)相同</span></li></ul><ol list="u8b8fefb0" start="3"><li fid="u5328cc90" data-lake-id="u738ca2df" id="u738ca2df"><strong><span data-lake-id="ue65a314a" id="ue65a314a" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">最佳实践</span></strong><span data-lake-id="u4611debb" id="u4611debb" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">：</span></li></ol><ul list="u8a23ae3c" data-lake-indent="1"><li fid="u99191361" data-lake-id="u34cfe9a0" id="u34cfe9a0"><span data-lake-id="ucf316f12" id="ucf316f12" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">统计总行数推荐使用</span><code data-lake-id="ub983b71f" id="ub983b71f"><span data-lake-id="uddb7f793" id="uddb7f793" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">COUNT(*)</span></code><span data-lake-id="u79349936" id="u79349936" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">，语义最清晰</span></li><li fid="u99191361" data-lake-id="ude04da1d" id="ude04da1d"><span data-lake-id="u63a3110a" id="u63a3110a" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">需要排除NULL值时使用</span><code data-lake-id="uc3cf0336" id="uc3cf0336"><span data-lake-id="u99a0dfb5" id="u99a0dfb5" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">COUNT(字段名)</span></code></li><li fid="u99191361" data-lake-id="u2628758a" id="u2628758a"><span data-lake-id="u4c33b2ec" id="u4c33b2ec" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">在需要统计不同值的数量时使用</span><code data-lake-id="u0f5dc4d6" id="u0f5dc4d6"><span data-lake-id="uefc39610" id="uefc39610" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">COUNT(DISTINCT 字段名)</span></code></li></ul><h2 data-lake-id="dCIwg" id="dCIwg" data-lake-index-type="0"><span data-lake-id="uac6525c0" id="uac6525c0">MySQL中varchar和char有什么区别？</span></h2><p data-lake-id="uedd2dec9" id="uedd2dec9"><span data-lake-id="ua75eeec6" id="ua75eeec6" style="color: rgb(var(--ds-rgb-label-1))">CHAR 和 VARCHAR 是 MySQL 中最常用的两种字符串类型，它们在存储方式、性能和适用场景上有显著区别。</span></p><table data-lake-id="At20s" id="At20s" margin="true" class="lake-table" style="width: 750px"><colgroup><col width="250"><col width="250"><col width="250"></colgroup><tbody><tr data-lake-id="u3f0a5deb" id="u3f0a5deb"><td data-lake-id="u09d64a70" id="u09d64a70"><p data-lake-id="u26e3c727" id="u26e3c727" style="text-align: left"><strong><span data-lake-id="uba274b2d" id="uba274b2d" style="color: rgb(var(--ds-rgb-label-1))">特性</span></strong></p></td><td data-lake-id="ufed6dfd5" id="ufed6dfd5"><p data-lake-id="u75d45f02" id="u75d45f02" style="text-align: left"><strong><span data-lake-id="u148fac79" id="u148fac79" style="color: rgb(var(--ds-rgb-label-1))">CHAR</span></strong></p></td><td data-lake-id="u5869f4e3" id="u5869f4e3"><p data-lake-id="u07486450" id="u07486450" style="text-align: left"><strong><span data-lake-id="u06314e2d" id="u06314e2d" style="color: rgb(var(--ds-rgb-label-1))">VARCHAR</span></strong></p></td></tr><tr data-lake-id="ufc621032" id="ufc621032"><td data-lake-id="u2d035c6e" id="u2d035c6e"><p data-lake-id="u71acfbf8" id="u71acfbf8"><strong><span data-lake-id="ud8efad66" id="ud8efad66" style="color: rgb(var(--ds-rgb-label-1))">存储方式</span></strong></p></td><td data-lake-id="u65d71d72" id="u65d71d72"><p data-lake-id="u29a00110" id="u29a00110"><span data-lake-id="u3f9f3f89" id="u3f9f3f89" style="color: rgb(var(--ds-rgb-label-1))">固定长度，分配指定长度的空间</span></p></td><td data-lake-id="u39f03291" id="u39f03291"><p data-lake-id="u205b451e" id="u205b451e"><span data-lake-id="uab04419a" id="uab04419a" style="color: rgb(var(--ds-rgb-label-1))">可变长度，只占用实际需要的空间</span></p></td></tr><tr data-lake-id="u31e55a93" id="u31e55a93"><td data-lake-id="u9455a77b" id="u9455a77b"><p data-lake-id="u59dae353" id="u59dae353"><strong><span data-lake-id="u4c05028e" id="u4c05028e" style="color: rgb(var(--ds-rgb-label-1))">存储大小</span></strong></p></td><td data-lake-id="u51d62e09" id="u51d62e09"><p data-lake-id="uc0856ecc" id="uc0856ecc"><span data-lake-id="ua2613482" id="ua2613482" style="color: rgb(var(--ds-rgb-label-1))">固定为定义的长度</span></p></td><td data-lake-id="ue97c039d" id="ue97c039d"><p data-lake-id="u5bbb75fd" id="u5bbb75fd"><span data-lake-id="u5bfa1e3e" id="u5bfa1e3e" style="color: rgb(var(--ds-rgb-label-1))">实际长度 + 1或2字节长度前缀</span></p></td></tr><tr data-lake-id="u3e1918ab" id="u3e1918ab"><td data-lake-id="u433987a2" id="u433987a2"><p data-lake-id="ue1713af9" id="ue1713af9"><strong><span data-lake-id="u4ae3f43c" id="u4ae3f43c" style="color: rgb(var(--ds-rgb-label-1))">最大长度</span></strong></p></td><td data-lake-id="u75d33d89" id="u75d33d89"><p data-lake-id="u37114701" id="u37114701"><span data-lake-id="ue3c4dd2f" id="ue3c4dd2f" style="color: rgb(var(--ds-rgb-label-1))">255字符</span></p></td><td data-lake-id="uaa22c985" id="uaa22c985"><p data-lake-id="u287e3099" id="u287e3099"><span data-lake-id="uffdb42ef" id="uffdb42ef" style="color: rgb(var(--ds-rgb-label-1))">65,535字节(受行最大限制)</span></p></td></tr><tr data-lake-id="uc8add749" id="uc8add749"><td data-lake-id="u5a71d07f" id="u5a71d07f"><p data-lake-id="u9faf56a6" id="u9faf56a6"><strong><span data-lake-id="u270ad237" id="u270ad237" style="color: rgb(var(--ds-rgb-label-1))">空格处理</span></strong></p></td><td data-lake-id="u027f71de" id="u027f71de"><p data-lake-id="u6c1a8446" id="u6c1a8446"><span data-lake-id="u76ea7332" id="u76ea7332" style="color: rgb(var(--ds-rgb-label-1))">存储时会用空格填充到指定长度，检索时去除尾部空格</span></p></td><td data-lake-id="uae3f2989" id="uae3f2989"><p data-lake-id="u72983add" id="u72983add"><span data-lake-id="u8ab0e5bf" id="u8ab0e5bf" style="color: rgb(var(--ds-rgb-label-1))">按原样存储，不自动填充或去除空格</span></p></td></tr><tr data-lake-id="uf3e7342e" id="uf3e7342e"><td data-lake-id="ub3fb4c88" id="ub3fb4c88"><p data-lake-id="u1dafb629" id="u1dafb629"><strong><span data-lake-id="u8416b825" id="u8416b825" style="color: rgb(var(--ds-rgb-label-1))">内存分配</span></strong></p></td><td data-lake-id="u03d3e410" id="u03d3e410"><p data-lake-id="u50e9cb38" id="u50e9cb38"><span data-lake-id="u37a3d13f" id="u37a3d13f" style="color: rgb(var(--ds-rgb-label-1))">总是分配定义长度的内存</span></p></td><td data-lake-id="u8c066f24" id="u8c066f24"><p data-lake-id="u94a3be4f" id="u94a3be4f"><span data-lake-id="u4a17c96c" id="u4a17c96c" style="color: rgb(var(--ds-rgb-label-1))">按实际内容分配内存</span></p></td></tr><tr data-lake-id="u7a1d3712" id="u7a1d3712"><td data-lake-id="u14e74ff0" id="u14e74ff0"><p data-lake-id="u96b69cf3" id="u96b69cf3"><strong><span data-lake-id="u21801bed" id="u21801bed" style="color: rgb(var(--ds-rgb-label-1))">性能</span></strong></p></td><td data-lake-id="u99918694" id="u99918694"><p data-lake-id="u8e6e5a30" id="u8e6e5a30"><span data-lake-id="u7310b395" id="u7310b395" style="color: rgb(var(--ds-rgb-label-1))">读取速度快(固定长度)</span></p></td><td data-lake-id="ub915966a" id="ub915966a"><p data-lake-id="u2ed74bd2" id="u2ed74bd2"><span data-lake-id="u6230ede1" id="u6230ede1" style="color: rgb(var(--ds-rgb-label-1))">写入/更新效率更高(可变长度)</span></p></td></tr><tr data-lake-id="ud876e2c9" id="ud876e2c9"><td data-lake-id="u08a02fb6" id="u08a02fb6"><p data-lake-id="ua2538375" id="ua2538375"><strong><span data-lake-id="u41dbecd8" id="u41dbecd8" style="color: rgb(var(--ds-rgb-label-1))">适用场景</span></strong></p></td><td data-lake-id="u96ad2a2c" id="u96ad2a2c"><p data-lake-id="u66feb988" id="u66feb988"><span data-lake-id="u37bc0501" id="u37bc0501" style="color: rgb(var(--ds-rgb-label-1))">长度固定或几乎不变的数据(如MD5哈希、国家代码)</span></p></td><td data-lake-id="ua01c3bb8" id="ua01c3bb8"><p data-lake-id="u957d7cfd" id="u957d7cfd"><span data-lake-id="u2a326827" id="u2a326827" style="color: rgb(var(--ds-rgb-label-1))">长度变化较大的数据(如用户名、地址)</span></p></td></tr></tbody></table><h3 data-lake-id="sJMzQ" id="sJMzQ" data-lake-index-type="0"><span data-lake-id="u3e738524" id="u3e738524" style="color: rgb(var(--ds-rgb-label-1))">1. 存储机制差异</span></h3><ul list="u8389c4d9"><li fid="ue7a4c323" data-lake-id="ud4632ba7" id="ud4632ba7"><strong><span data-lake-id="u137b901c" id="u137b901c" style="color: rgb(var(--ds-rgb-label-1))">CHAR(10)</span></strong><span data-lake-id="u598920b6" id="u598920b6" style="color: rgb(var(--ds-rgb-label-1))">：无论存储什么内容都占用10个字符空间</span></li></ul><ul list="u8389c4d9" data-lake-indent="1"><li fid="u0baa249e" data-lake-id="u8b095e53" id="u8b095e53"><span data-lake-id="ucaeaef3a" id="ucaeaef3a" style="color: rgb(var(--ds-rgb-label-1))">存储&quot;abc&quot; → &quot;abc &quot; (补7个空格)</span></li><li fid="u0baa249e" data-lake-id="ufe6520ff" id="ufe6520ff"><span data-lake-id="uab9ffff2" id="uab9ffff2" style="color: rgb(var(--ds-rgb-label-1))">总是占用10个字符的存储空间</span></li></ul><ul list="u8389c4d9" start="2"><li fid="ue7a4c323" data-lake-id="ue3774129" id="ue3774129"><strong><span data-lake-id="uc4a20b63" id="uc4a20b63" style="color: rgb(var(--ds-rgb-label-1))">VARCHAR(10)</span></strong><span data-lake-id="u9204a2de" id="u9204a2de" style="color: rgb(var(--ds-rgb-label-1))">：根据实际内容占用空间</span></li></ul><ul list="u8389c4d9" data-lake-indent="1"><li fid="u070f240c" data-lake-id="ufd4edd21" id="ufd4edd21"><span data-lake-id="u7553830b" id="u7553830b" style="color: rgb(var(--ds-rgb-label-1))">存储&quot;abc&quot; → &quot;abc&quot; (只占用3个字符+1字节长度前缀)</span></li><li fid="u070f240c" data-lake-id="ua172dad1" id="ua172dad1"><span data-lake-id="ueb0ed4b7" id="ueb0ed4b7" style="color: rgb(var(--ds-rgb-label-1))">最大可存储10个字符，但只占用实际需要的空间</span></li></ul><h3 data-lake-id="w5ISk" id="w5ISk" data-lake-index-type="0"><span data-lake-id="u01dcf46e" id="u01dcf46e" style="color: rgb(var(--ds-rgb-label-1))">2. 性能考虑</span></h3><ul list="ub068f259"><li fid="u97efa4a7" data-lake-id="u7445d8f8" id="u7445d8f8"><strong><span data-lake-id="u596bd39b" id="u596bd39b" style="color: rgb(var(--ds-rgb-label-1))">CHAR</span></strong><span data-lake-id="u31b3b734" id="u31b3b734" style="color: rgb(var(--ds-rgb-label-1))"> </span><span data-lake-id="u2e16f71a" id="u2e16f71a" style="color: rgb(var(--ds-rgb-label-1))">优势：</span></li></ul><ul list="ub068f259" data-lake-indent="1"><li fid="u9fba6038" data-lake-id="u11f2de30" id="u11f2de30"><span data-lake-id="u4d278869" id="u4d278869" style="color: rgb(var(--ds-rgb-label-1))">固定长度，查询速度更快(特别是全表扫描)</span></li><li fid="u9fba6038" data-lake-id="ued5cb29e" id="ued5cb29e"><span data-lake-id="ubed3ab52" id="ubed3ab52" style="color: rgb(var(--ds-rgb-label-1))">适合频繁查询但很少修改的列</span></li></ul><ul list="ub068f259" start="2"><li fid="u97efa4a7" data-lake-id="u6e233d08" id="u6e233d08"><strong><span data-lake-id="u6bb243cb" id="u6bb243cb" style="color: rgb(var(--ds-rgb-label-1))">VARCHAR</span></strong><span data-lake-id="uc80a8ab7" id="uc80a8ab7" style="color: rgb(var(--ds-rgb-label-1))"> </span><span data-lake-id="u14454583" id="u14454583" style="color: rgb(var(--ds-rgb-label-1))">优势：</span></li></ul><ul list="ub068f259" data-lake-indent="1"><li fid="u425c074a" data-lake-id="ube60f350" id="ube60f350"><span data-lake-id="u4026f9cc" id="u4026f9cc" style="color: rgb(var(--ds-rgb-label-1))">节省存储空间(特别是大多数值远小于最大长度时)</span></li><li fid="u425c074a" data-lake-id="u03b1912a" id="u03b1912a"><span data-lake-id="ubf68caa3" id="ubf68caa3" style="color: rgb(var(--ds-rgb-label-1))">更新操作不会导致行迁移(除非长度超过原长度)</span></li></ul><h3 data-lake-id="HVAng" id="HVAng" data-lake-index-type="0"><span data-lake-id="u8906dbe0" id="u8906dbe0" style="color: rgb(var(--ds-rgb-label-1))">3. 选择建议</span></h3><ul list="ub4392bae"><li fid="u5b79f14c" data-lake-id="uad617fd7" id="uad617fd7"><span data-lake-id="uc72cdb68" id="uc72cdb68" style="color: rgb(var(--ds-rgb-label-1))">使用</span><span data-lake-id="u047dd37d" id="u047dd37d" style="color: rgb(var(--ds-rgb-label-1))"> </span><strong><span data-lake-id="u53a5ebd6" id="u53a5ebd6" style="color: rgb(var(--ds-rgb-label-1))">CHAR</span></strong><span data-lake-id="u2514d609" id="u2514d609" style="color: rgb(var(--ds-rgb-label-1))"> </span><span data-lake-id="ua572c285" id="ua572c285" style="color: rgb(var(--ds-rgb-label-1))">当：</span></li></ul><ul list="ub4392bae" data-lake-indent="1"><li fid="u0b831c43" data-lake-id="u2783be44" id="u2783be44"><span data-lake-id="ub911768b" id="ub911768b" style="color: rgb(var(--ds-rgb-label-1))">数据长度固定(如UUID、电话区号)</span></li><li fid="u0b831c43" data-lake-id="uf6d946a9" id="uf6d946a9"><span data-lake-id="u12971d54" id="u12971d54" style="color: rgb(var(--ds-rgb-label-1))">列经常被排序或分组</span></li><li fid="u0b831c43" data-lake-id="u712fbbad" id="u712fbbad"><span data-lake-id="u9864a9a4" id="u9864a9a4" style="color: rgb(var(--ds-rgb-label-1))">需要快速随机访问</span></li></ul><ul list="ub4392bae" start="2"><li fid="u5b79f14c" data-lake-id="uecf9f987" id="uecf9f987"><span data-lake-id="uf7b33298" id="uf7b33298" style="color: rgb(var(--ds-rgb-label-1))">使用</span><span data-lake-id="u8a46bf1d" id="u8a46bf1d" style="color: rgb(var(--ds-rgb-label-1))"> </span><strong><span data-lake-id="u562a638f" id="u562a638f" style="color: rgb(var(--ds-rgb-label-1))">VARCHAR</span></strong><span data-lake-id="u014ada31" id="u014ada31" style="color: rgb(var(--ds-rgb-label-1))"> </span><span data-lake-id="u80000dd7" id="u80000dd7" style="color: rgb(var(--ds-rgb-label-1))">当：</span></li></ul><ul list="ub4392bae" data-lake-indent="1"><li fid="u10158977" data-lake-id="u486e0ba4" id="u486e0ba4"><span data-lake-id="u3268f614" id="u3268f614" style="color: rgb(var(--ds-rgb-label-1))">数据长度变化较大(如用户输入)</span></li><li fid="u10158977" data-lake-id="u5807cdc3" id="u5807cdc3"><span data-lake-id="u31216385" id="u31216385" style="color: rgb(var(--ds-rgb-label-1))">存储空间有限或表中有很多字符串列</span></li><li fid="u10158977" data-lake-id="u39ba8aeb" id="u39ba8aeb"><span data-lake-id="u3238a2ad" id="u3238a2ad" style="color: rgb(var(--ds-rgb-label-1))">列很少用于排序或分组</span></li></ul><h3 data-lake-id="KxRHk" id="KxRHk" data-lake-index-type="0"><span data-lake-id="ueb7bba9b" id="ueb7bba9b" style="color: rgb(var(--ds-rgb-label-1))">4. 注意事项</span></h3><ul list="u0af6df1d"><li fid="u7a592946" data-lake-id="u633b4ca4" id="u633b4ca4"><span data-lake-id="u7cd33cb7" id="u7cd33cb7" style="color: rgb(var(--ds-rgb-label-1))">MySQL 5.0.3+ 版本中，VARCHAR最大长度是65,535字节(实际受行大小限制)</span></li><li fid="u7a592946" data-lake-id="u90920296" id="u90920296"><span data-lake-id="u083f190c" id="u083f190c" style="color: rgb(var(--ds-rgb-label-1))">使用UTF-8等多字节字符集时，字符数限制会减少</span></li><li fid="u7a592946" data-lake-id="u4f384a74" id="u4f384a74"><span data-lake-id="u225d759d" id="u225d759d" style="color: rgb(var(--ds-rgb-label-1))">CHAR在比较时会自动去除尾部空格，VARCHAR则保留</span></li><li fid="u7a592946" data-lake-id="uce2f1af4" id="uce2f1af4"><span data-lake-id="u7fd686d4" id="u7fd686d4" style="color: rgb(var(--ds-rgb-label-1))">对于非常短的字符串(如Y/N标志)，CHAR可能更高效</span></li></ul><p data-lake-id="ua4b1caa4" id="ua4b1caa4"><span data-lake-id="u85c3b712" id="u85c3b712" style="color: rgb(var(--ds-rgb-label-1))">示例：</span></p><card type="inline" name="codeblock" value="data:%7B%22search%22%3A%22%22%2C%22mode%22%3A%22plain%22%2C%22code%22%3A%22CREATE%20TABLE%20example%20(%5Cn%20%20%20%20country_code%20CHAR(2)%2C%20%20%20%20%20%20--%20%E5%9B%BA%E5%AE%9A2%E5%AD%97%E7%AC%A6%EF%BC%8C%E5%A6%82'US'%2C'CN'%5Cn%20%20%20%20username%20VARCHAR(50)%2C%20%20%20%20%20%20--%20%E5%8F%AF%E5%8F%98%E9%95%BF%E5%BA%A6%E7%94%A8%E6%88%B7%E5%90%8D%5Cn%20%20%20%20description%20VARCHAR(255)%20%20%20--%20%E5%8F%AF%E5%8F%98%E9%95%BF%E5%BA%A6%E6%8F%8F%E8%BF%B0%5Cn)%3B%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22Bracket%20Lights%20Pro%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22VOWOC%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D"></card><h2 data-lake-id="l7R2A" id="l7R2A" data-lake-index-type="0"><span data-lake-id="u7a1e8053" id="u7a1e8053">MySQL是如何实现事务的？</span></h2><p data-lake-id="ud59ef277" id="ud59ef277"><span data-lake-id="u5a587a87" id="u5a587a87" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">一句话来说：主要是通过锁，Redo Log,Undo Log,MVCC实现事务。</span></p><h3 data-lake-id="r1fNl" id="r1fNl" data-lake-index-type="0"><span data-lake-id="u2917ce59" id="u2917ce59" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">事务：</span></h3><ul list="ucf72c02c"><li fid="u4ad8ab9c" data-lake-id="u0e0fdf0e" id="u0e0fdf0e"><strong><span data-lake-id="ua0319344" id="ua0319344" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">事务 = ACID（原子性、一致性、隔离性、持久性）</span></strong></li><li fid="u4ad8ab9c" data-lake-id="u710fd9da" id="u710fd9da"><strong><span data-lake-id="u6b3ab12b" id="u6b3ab12b" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">事务控制 =</span></strong><strong><span data-lake-id="u351aba16" id="u351aba16" class="lake-fontsize-12" style="color: rgb(64, 64, 64)"> </span></strong><code data-lake-id="u1333c218" id="u1333c218"><strong><span data-lake-id="ub0f7f6b3" id="ub0f7f6b3" class="lake-fontsize-12" style="color: rgb(64, 64, 64); background-color: rgb(236, 236, 236)">BEGIN</span></strong></code><strong><span data-lake-id="ue3a6d537" id="ue3a6d537" class="lake-fontsize-12" style="color: rgb(64, 64, 64)"> </span></strong><strong><span data-lake-id="uac633cf3" id="uac633cf3" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">→ SQL 操作 →</span></strong><strong><span data-lake-id="uc58af537" id="uc58af537" class="lake-fontsize-12" style="color: rgb(64, 64, 64)"> </span></strong><code data-lake-id="ua814034b" id="ua814034b"><strong><span data-lake-id="ub411d52a" id="ub411d52a" class="lake-fontsize-12" style="color: rgb(64, 64, 64); background-color: rgb(236, 236, 236)">COMMIT</span></strong></code><strong><span data-lake-id="uc927c334" id="uc927c334" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">/</span></strong><code data-lake-id="u15a994db" id="u15a994db"><strong><span data-lake-id="u11b57b76" id="u11b57b76" class="lake-fontsize-12" style="color: rgb(64, 64, 64); background-color: rgb(236, 236, 236)">ROLLBACK</span></strong></code></li><li fid="u4ad8ab9c" data-lake-id="u7497bcc9" id="u7497bcc9"><strong><span data-lake-id="u7348a13d" id="u7348a13d" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">隔离级别决定并发事务的可见性</span></strong><span data-lake-id="ub43bf3d4" id="ub43bf3d4" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">（如</span><span data-lake-id="ub7e668bf" id="ub7e668bf" class="lake-fontsize-12" style="color: rgb(64, 64, 64)"> </span><code data-lake-id="u58136a8e" id="u58136a8e"><strong><span data-lake-id="u9f5469fa" id="u9f5469fa" class="lake-fontsize-12" style="color: rgb(64, 64, 64); background-color: rgb(236, 236, 236)">READ COMMITTED</span></strong></code><span data-lake-id="ud79eb0a5" id="ud79eb0a5" class="lake-fontsize-12" style="color: rgb(64, 64, 64)"> </span><span data-lake-id="uaaaa6027" id="uaaaa6027" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">可避免脏读）</span></li><li fid="u4ad8ab9c" data-lake-id="uf685affa" id="uf685affa"><strong><span data-lake-id="u3ef8a45b" id="u3ef8a45b" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">InnoDB 通过 Undo Log（回滚）、Redo Log（持久化）、MVCC（一致性读）、锁（隔离性）实现事务</span></strong></li></ul><h3 data-lake-id="07938244" id="07938244" data-lake-index-type="0"><span data-lake-id="ue2004e84" id="ue2004e84" style="color: rgb(64, 64, 64)">1. </span><strong><span data-lake-id="ue2895285" id="ue2895285" style="color: rgb(64, 64, 64)">事务日志（Transaction Logs）</span></strong></h3><ul list="u05930ee0"><li fid="uba247fce" data-lake-id="u2d8986bb" id="u2d8986bb"><strong><span data-lake-id="u700e48c5" id="u700e48c5" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">Undo Log（回滚日志）</span></strong><span data-lake-id="u029f4661" id="u029f4661" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">：</span></li></ul><ul list="u05930ee0" data-lake-indent="1"><li fid="u8cc66eac" data-lake-id="ua9b28b86" id="ua9b28b86"><span data-lake-id="u17a16096" id="u17a16096" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">实现原子性的关键，记录事务修改前的数据版本。</span></li><li fid="u8cc66eac" data-lake-id="ua72ca419" id="ua72ca419"><span data-lake-id="u766a002d" id="u766a002d" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">事务回滚时，通过 Undo Log 恢复原始数据。</span></li><li fid="u8cc66eac" data-lake-id="u5c91f547" id="u5c91f547"><span data-lake-id="uf2bfc305" id="uf2bfc305" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">也用于实现 MVCC（多版本并发控制），提供一致性读。</span></li></ul><ul list="u05930ee0" start="2"><li fid="uba247fce" data-lake-id="uf6bffcd2" id="uf6bffcd2"><strong><span data-lake-id="u1a3c0e25" id="u1a3c0e25" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">Redo Log（重做日志）</span></strong><span data-lake-id="ucb8072b2" id="ucb8072b2" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">：</span></li></ul><ul list="u05930ee0" data-lake-indent="1"><li fid="u95e743d2" data-lake-id="uae329808" id="uae329808"><span data-lake-id="ud2258b50" id="ud2258b50" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">确保持久性，记录事务对页面的物理修改（顺序写入，高性能）。</span></li><li fid="u95e743d2" data-lake-id="uce3465b6" id="uce3465b6"><span data-lake-id="u96b73aeb" id="u96b73aeb" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">数据库崩溃恢复时，重放 Redo Log 恢复未刷盘的提交数据。</span></li><li fid="u95e743d2" data-lake-id="u9a1ee84e" id="u9a1ee84e"><span data-lake-id="u05c97c4a" id="u05c97c4a" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">采用</span><span data-lake-id="u8606fc39" id="u8606fc39" class="lake-fontsize-12" style="color: rgb(64, 64, 64)"> </span><strong><span data-lake-id="u4904914b" id="u4904914b" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">WAL（Write-Ahead Logging）</span></strong><span data-lake-id="ufd1cc23a" id="ufd1cc23a" class="lake-fontsize-12" style="color: rgb(64, 64, 64)"> </span><span data-lake-id="ubfb42e8b" id="ubfb42e8b" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">机制：数据页修改前先写日志。</span></li></ul><ul list="u05930ee0" start="3"><li fid="uba247fce" data-lake-id="ua8432579" id="ua8432579"><strong><span data-lake-id="uf2ed8d64" id="uf2ed8d64" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">Binlog（归档日志）</span></strong><span data-lake-id="u99bf7c8a" id="u99bf7c8a" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">：</span></li></ul><ul list="u05930ee0" data-lake-indent="1"><li fid="u2b86fbd1" data-lake-id="ucd87c884" id="ucd87c884"><span data-lake-id="u7f435456" id="u7f435456" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">服务层日志，用于主从复制和数据恢复（逻辑日志，记录 SQL 或行变更）。</span></li><li fid="u2b86fbd1" data-lake-id="u6317a291" id="u6317a291"><span data-lake-id="u19ac3c7a" id="u19ac3c7a" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">在事务提交时写入（通过</span><span data-lake-id="u4e38764e" id="u4e38764e" class="lake-fontsize-12" style="color: rgb(64, 64, 64)"> </span><code data-lake-id="u1d8b8fe0" id="u1d8b8fe0"><strong><span data-lake-id="u0b4db9d0" id="u0b4db9d0" class="lake-fontsize-12" style="color: rgb(64, 64, 64); background-color: rgb(236, 236, 236)">sync_binlog</span></strong></code><span data-lake-id="u2d23f34b" id="u2d23f34b" class="lake-fontsize-12" style="color: rgb(64, 64, 64)"> </span><span data-lake-id="u9e0b82bd" id="u9e0b82bd" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">参数控制持久化策略）。</span></li></ul><card type="block" name="hr" value="data:%7B%22id%22%3A%22Rz08M%22%7D"></card><h3 data-lake-id="efa809d3" id="efa809d3" data-lake-index-type="0"><span data-lake-id="u43f386fb" id="u43f386fb" style="color: rgb(64, 64, 64)">2.</span><span data-lake-id="u35fa707a" id="u35fa707a" style="color: rgb(64, 64, 64)"> </span><strong><span data-lake-id="uc532f4ad" id="uc532f4ad" style="color: rgb(64, 64, 64)">锁机制</span></strong></h3><ul list="u3f51db18"><li fid="ub99b4982" data-lake-id="ua2d9a61c" id="ua2d9a61c"><strong><span data-lake-id="u2ce85c67" id="u2ce85c67" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">行锁</span></strong><span data-lake-id="u69d569df" id="u69d569df" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">：</span></li></ul><ul list="u3f51db18" data-lake-indent="1"><li fid="ub98f1e17" data-lake-id="ucc26ba95" id="ucc26ba95"><span data-lake-id="uf0b23997" id="uf0b23997" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">InnoDB 支持行级锁（共享锁 S、排他锁 X），减少锁冲突。</span></li><li fid="ub98f1e17" data-lake-id="ue6ed35bc" id="ue6ed35bc"><span data-lake-id="u32255a61" id="u32255a61" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">通过索引实现，无索引时会退化为表锁。</span></li></ul><ul list="u3f51db18" start="2"><li fid="ub99b4982" data-lake-id="u56e2c7dc" id="u56e2c7dc"><strong><span data-lake-id="u13fb2925" id="u13fb2925" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">间隙锁（Gap Lock）</span></strong><span data-lake-id="u3e4cc1d4" id="u3e4cc1d4" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">：</span></li></ul><ul list="u3f51db18" data-lake-indent="1"><li fid="u9a908838" data-lake-id="u88741a23" id="u88741a23"><span data-lake-id="u03af2353" id="u03af2353" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">解决幻读问题（在 RR 隔离级别下生效）。</span></li><li fid="u9a908838" data-lake-id="u8c6dde23" id="u8c6dde23"><span data-lake-id="ua2cfa37a" id="ua2cfa37a" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">锁定索引记录间的间隙，防止其他事务插入。</span></li></ul><ul list="u3f51db18" start="3"><li fid="ub99b4982" data-lake-id="ucaea5c76" id="ucaea5c76"><strong><span data-lake-id="ub4ad864b" id="ub4ad864b" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">意向锁（Intention Lock）</span></strong><span data-lake-id="u2536187c" id="u2536187c" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">：</span></li></ul><ul list="u3f51db18" data-lake-indent="1"><li fid="uc5b83438" data-lake-id="u2389617b" id="u2389617b"><span data-lake-id="ua5ba1c29" id="ua5ba1c29" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">表级锁，快速判断表中是否有行被锁定（IS/IX）。</span></li></ul><card type="block" name="hr" value="data:%7B%22id%22%3A%22IVjzT%22%7D"></card><h3 data-lake-id="4ec50bc5" id="4ec50bc5" data-lake-index-type="0"><span data-lake-id="u918e284d" id="u918e284d" style="color: rgb(64, 64, 64)">3.</span><span data-lake-id="uf79c0881" id="uf79c0881" style="color: rgb(64, 64, 64)"> </span><strong><span data-lake-id="u2e3402a5" id="u2e3402a5" style="color: rgb(64, 64, 64)">多版本并发控制（MVCC）</span></strong></h3><ul list="u25dd85fc"><li fid="ud24978e3" data-lake-id="u456fa2f8" id="u456fa2f8"><strong><span data-lake-id="u651fc5be" id="u651fc5be" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">实现原理</span></strong><span data-lake-id="u6986792e" id="u6986792e" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">：</span></li></ul><ul list="u25dd85fc" data-lake-indent="1"><li fid="ud7e1ec87" data-lake-id="ue3661e4a" id="ue3661e4a"><span data-lake-id="u8528436b" id="u8528436b" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">每行数据隐藏两个字段：</span><code data-lake-id="u11f15f02" id="u11f15f02"><strong><span data-lake-id="u1f32b824" id="u1f32b824" class="lake-fontsize-12" style="color: rgb(64, 64, 64); background-color: rgb(236, 236, 236)">DB_TRX_ID</span></strong></code><span data-lake-id="ue373e55b" id="ue373e55b" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">（事务ID）、</span><code data-lake-id="uf59825a4" id="uf59825a4"><strong><span data-lake-id="uf2e5570b" id="uf2e5570b" class="lake-fontsize-12" style="color: rgb(64, 64, 64); background-color: rgb(236, 236, 236)">DB_ROLL_PTR</span></strong></code><span data-lake-id="u84916387" id="u84916387" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">（回滚指针）。</span></li><li fid="ud7e1ec87" data-lake-id="ube0c3426" id="ube0c3426"><span data-lake-id="ufb949f47" id="ufb949f47" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">通过 Undo Log 构建数据的历史版本链。</span></li><li fid="ud7e1ec87" data-lake-id="u2480aab8" id="u2480aab8"><span data-lake-id="u513c348a" id="u513c348a" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">读操作根据隔离级别访问可见版本（通过</span><span data-lake-id="ucd11e063" id="ucd11e063" class="lake-fontsize-12" style="color: rgb(64, 64, 64)"> </span><code data-lake-id="u98aef1bc" id="u98aef1bc"><strong><span data-lake-id="ue2d145d8" id="ue2d145d8" class="lake-fontsize-12" style="color: rgb(64, 64, 64); background-color: rgb(236, 236, 236)">ReadView</span></strong></code><span data-lake-id="u522efd2c" id="u522efd2c" class="lake-fontsize-12" style="color: rgb(64, 64, 64)"> </span><span data-lake-id="u27536030" id="u27536030" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">判断）。</span></li></ul><ul list="u25dd85fc" start="2"><li fid="ud24978e3" data-lake-id="uc74b4113" id="uc74b4113"><strong><span data-lake-id="ude81bd0b" id="ude81bd0b" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">隔离级别支持</span></strong><span data-lake-id="u21902b56" id="u21902b56" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">：</span></li></ul><ul list="u25dd85fc" data-lake-indent="1"><li fid="u57cf8976" data-lake-id="udadee047" id="udadee047"><strong><span data-lake-id="u51de3391" id="u51de3391" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">RC（读已提交）</span></strong><span data-lake-id="u54bbecd5" id="u54bbecd5" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">：每次读生成新</span><span data-lake-id="u3721c90c" id="u3721c90c" class="lake-fontsize-12" style="color: rgb(64, 64, 64)"> </span><code data-lake-id="uf1759903" id="uf1759903"><strong><span data-lake-id="uded107ab" id="uded107ab" class="lake-fontsize-12" style="color: rgb(64, 64, 64); background-color: rgb(236, 236, 236)">ReadView</span></strong></code><span data-lake-id="u4f2d833c" id="u4f2d833c" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">，能看到已提交的修改。</span></li><li fid="u57cf8976" data-lake-id="ufb0dfef1" id="ufb0dfef1"><strong><span data-lake-id="ub286dda8" id="ub286dda8" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">RR（可重复读）</span></strong><span data-lake-id="udaed0ad2" id="udaed0ad2" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">：事务首次读时生成</span><span data-lake-id="ubd911d77" id="ubd911d77" class="lake-fontsize-12" style="color: rgb(64, 64, 64)"> </span><code data-lake-id="uda25722c" id="uda25722c"><strong><span data-lake-id="ucc66e9a6" id="ucc66e9a6" class="lake-fontsize-12" style="color: rgb(64, 64, 64); background-color: rgb(236, 236, 236)">ReadView</span></strong></code><span data-lake-id="ua82726fd" id="ua82726fd" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">，后续复用，避免不可重复读和幻读（部分场景需配合间隙锁）。</span></li></ul><card type="block" name="hr" value="data:%7B%22id%22%3A%22MfYrq%22%7D"></card><h3 data-lake-id="4272a4bb" id="4272a4bb" data-lake-index-type="0"><span data-lake-id="u34888c5e" id="u34888c5e" style="color: rgb(64, 64, 64)">4.</span><span data-lake-id="ue4619da5" id="ue4619da5" style="color: rgb(64, 64, 64)"> </span><strong><span data-lake-id="uf349f25b" id="uf349f25b" style="color: rgb(64, 64, 64)">事务提交流程</span></strong></h3><ol list="uac29ecac"><li fid="u22961740" data-lake-id="u23d9b836" id="u23d9b836"><strong><span data-lake-id="ud2ce1519" id="ud2ce1519" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">写入 Undo Log</span></strong><span data-lake-id="u87fc77df" id="u87fc77df" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">：记录修改前的数据。</span></li><li fid="u22961740" data-lake-id="u761c1870" id="u761c1870"><strong><span data-lake-id="u67a4c0f8" id="u67a4c0f8" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">修改内存数据页</span></strong><span data-lake-id="ub3455810" id="ub3455810" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">，并在 Redo Log Buffer 中记录变更。</span></li><li fid="u22961740" data-lake-id="ue44e2191" id="ue44e2191"><strong><span data-lake-id="uf0244c5f" id="uf0244c5f" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">写入 Redo Log</span></strong><span data-lake-id="u52f4435f" id="u52f4435f" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">（Prepare 阶段）：调用</span><span data-lake-id="u0d3a168c" id="u0d3a168c" class="lake-fontsize-12" style="color: rgb(64, 64, 64)"> </span><code data-lake-id="u65b2b99f" id="u65b2b99f"><strong><span data-lake-id="uf4ea1b56" id="uf4ea1b56" class="lake-fontsize-12" style="color: rgb(64, 64, 64); background-color: rgb(236, 236, 236)">fsync</span></strong></code><span data-lake-id="u6fc4752d" id="u6fc4752d" class="lake-fontsize-12" style="color: rgb(64, 64, 64)"> </span><span data-lake-id="u151a8964" id="u151a8964" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">确保日志落盘。</span></li><li fid="u22961740" data-lake-id="u9af7901e" id="u9af7901e"><strong><span data-lake-id="uf9bb78e0" id="uf9bb78e0" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">写入 Binlog</span></strong><span data-lake-id="u5ade7bc3" id="u5ade7bc3" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">（如果开启）：调用</span><span data-lake-id="u8ca863dd" id="u8ca863dd" class="lake-fontsize-12" style="color: rgb(64, 64, 64)"> </span><code data-lake-id="uad9e3a3d" id="uad9e3a3d"><strong><span data-lake-id="ud3622b28" id="ud3622b28" class="lake-fontsize-12" style="color: rgb(64, 64, 64); background-color: rgb(236, 236, 236)">fsync</span></strong></code><span data-lake-id="u4d649a1e" id="u4d649a1e" class="lake-fontsize-12" style="color: rgb(64, 64, 64)"> </span><span data-lake-id="u84ac3df6" id="u84ac3df6" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">持久化。</span></li><li fid="u22961740" data-lake-id="u1ef11d32" id="u1ef11d32"><strong><span data-lake-id="u5d329407" id="u5d329407" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">Redo Log Commit 标记</span></strong><span data-lake-id="u044c2862" id="u044c2862" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">（Commit 阶段）：完成提交。</span></li></ol><h2 data-lake-id="AKAq0" id="AKAq0" data-lake-index-type="0"><span data-lake-id="u1e62ff91" id="u1e62ff91">MySQL中的MVCC是什么？</span></h2><p data-lake-id="u11995a5d" id="u11995a5d"><span data-lake-id="uba8a30a2" id="uba8a30a2" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">MVCC（Multi-Version Concurrency Control，多版本并发控制）是数据库管理系统（如 MySQL InnoDB、PostgreSQL）用来实现</span><strong><span data-lake-id="uf59d4f30" id="uf59d4f30" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">高并发事务</span></strong><span data-lake-id="ueda6537f" id="ueda6537f" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">的一种机制，它通过</span><strong><span data-lake-id="u158bbe2e" id="u158bbe2e" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">数据多版本</span></strong><span data-lake-id="u392c3535" id="u392c3535" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">和</span><strong><span data-lake-id="uaa870a68" id="uaa870a68" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">快照读</span></strong><span data-lake-id="u24a3dde8" id="u24a3dde8" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">来减少锁竞争，提高读性能，同时保证事务的隔离性。</span></p><card type="block" name="hr" value="data:%7B%22id%22%3A%22XjDBp%22%7D"></card><h3 data-lake-id="qdmfg" id="qdmfg" data-lake-index-type="0"><strong><span data-lake-id="u0cdfd489" id="u0cdfd489" style="color: rgb(64, 64, 64)">1. MVCC 的核心思想</span></strong></h3><ul list="u2f07abe6"><li fid="ufd165405" data-lake-id="u4f498676" id="u4f498676"><strong><span data-lake-id="u7391f427" id="u7391f427" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">同一行数据存储多个版本</span></strong><span data-lake-id="u72acda11" id="u72acda11" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">，每个版本关联一个事务 ID（</span><code data-lake-id="ub4342537" id="ub4342537"><strong><span data-lake-id="uc4af1db7" id="uc4af1db7" class="lake-fontsize-12" style="color: rgb(64, 64, 64); background-color: rgb(236, 236, 236)">DB_TRX_ID</span></strong></code><span data-lake-id="u95646344" id="u95646344" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">）。</span></li><li fid="ufd165405" data-lake-id="u67bdf2c1" id="u67bdf2c1"><strong><span data-lake-id="ub0337074" id="ub0337074" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">读操作（SELECT）不阻塞写操作（UPDATE/DELETE）</span></strong><span data-lake-id="u14e280ea" id="u14e280ea" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">，写操作也不阻塞读操作（通过读取历史版本实现）。</span></li><li fid="ufd165405" data-lake-id="u81dc0c23" id="u81dc0c23"><strong><span data-lake-id="uf1303c01" id="uf1303c01" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">不同事务看到的数据版本可能不同</span></strong><span data-lake-id="u0d0e78f3" id="u0d0e78f3" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">（取决于事务的隔离级别和启动时间）。</span></li></ul><card type="block" name="hr" value="data:%7B%22id%22%3A%22VUz8F%22%7D"></card><h3 data-lake-id="PdMQb" id="PdMQb" data-lake-index-type="0"><strong><span data-lake-id="u62c984ff" id="u62c984ff" style="color: rgb(64, 64, 64)">2. MVCC 的关键实现机制</span></strong></h3><h3 data-lake-id="5c817078" id="5c817078" data-lake-index-type="0"><strong><span data-lake-id="u821e040a" id="u821e040a" style="color: rgb(64, 64, 64)">(1) 隐藏字段</span></strong></h3><p data-lake-id="u36cfd2e8" id="u36cfd2e8"><span data-lake-id="ued2a9583" id="ued2a9583" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">InnoDB 每行数据（记录）包含 3 个隐藏字段：</span></p><table data-lake-id="uZBr0" id="uZBr0" margin="true" class="lake-table" style="width: 750px"><colgroup><col width="375"><col width="375"></colgroup><tbody><tr data-lake-id="u96d732fd" id="u96d732fd"><td data-lake-id="udc0a83d5" id="udc0a83d5"><p data-lake-id="ude65c0be" id="ude65c0be" style="text-align: left"><strong><span data-lake-id="u9a57dd81" id="u9a57dd81" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">字段名</span></strong></p></td><td data-lake-id="ubccec0c4" id="ubccec0c4"><p data-lake-id="u4beb51d7" id="u4beb51d7" style="text-align: left"><strong><span data-lake-id="u414eeaa6" id="u414eeaa6" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">描述</span></strong></p></td></tr><tr data-lake-id="ufd3df04e" id="ufd3df04e"><td data-lake-id="u1dedd5f5" id="u1dedd5f5"><p data-lake-id="ua5213341" id="ua5213341"><code data-lake-id="uff850065" id="uff850065"><strong><span data-lake-id="u51cf498d" id="u51cf498d" class="lake-fontsize-12" style="color: rgb(64, 64, 64); background-color: rgb(236, 236, 236)">DB_TRX_ID</span></strong></code></p></td><td data-lake-id="u0e510b6a" id="u0e510b6a"><p data-lake-id="u10be3633" id="u10be3633"><span data-lake-id="u4b92bffb" id="u4b92bffb" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">最近修改该行数据的事务 ID</span></p></td></tr><tr data-lake-id="ud3f2dba3" id="ud3f2dba3"><td data-lake-id="u7da3e39f" id="u7da3e39f"><p data-lake-id="u56214741" id="u56214741"><code data-lake-id="ud2d89658" id="ud2d89658"><strong><span data-lake-id="uc040600d" id="uc040600d" class="lake-fontsize-12" style="color: rgb(64, 64, 64); background-color: rgb(236, 236, 236)">DB_ROLL_PTR</span></strong></code></p></td><td data-lake-id="u730d40c9" id="u730d40c9"><p data-lake-id="u2d0f39c4" id="u2d0f39c4"><span data-lake-id="ufb23ea3d" id="ufb23ea3d" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">回滚指针，指向 Undo Log 中的旧版本数据</span></p></td></tr><tr data-lake-id="u7c604330" id="u7c604330"><td data-lake-id="u974e11f4" id="u974e11f4"><p data-lake-id="u79dacdd9" id="u79dacdd9"><code data-lake-id="ue1b893fa" id="ue1b893fa"><strong><span data-lake-id="ud70b14cc" id="ud70b14cc" class="lake-fontsize-12" style="color: rgb(64, 64, 64); background-color: rgb(236, 236, 236)">DB_ROW_ID</span></strong></code></p></td><td data-lake-id="ua553edc8" id="ua553edc8"><p data-lake-id="u290899a6" id="u290899a6"><span data-lake-id="u21e38df0" id="u21e38df0" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">行 ID（如果表没有主键，InnoDB 会自动生成）</span></p></td></tr></tbody></table><h3 data-lake-id="f82fe52e" id="f82fe52e" data-lake-index-type="0"><strong><span data-lake-id="ufe5fa294" id="ufe5fa294" style="color: rgb(64, 64, 64)">(2) Undo Log（回滚日志）</span></strong></h3><ul list="ueb9b5e75"><li fid="u3d8f2955" data-lake-id="u1f1f4478" id="u1f1f4478"><span data-lake-id="u75a21a61" id="u75a21a61" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">存储数据修改前的历史版本（用于回滚和 MVCC）。</span></li></ul><p data-lake-id="ub2a2e727" id="ub2a2e727"><span data-lake-id="u6639bb6c" id="u6639bb6c" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">形成</span><strong><span data-lake-id="uc8ffae94" id="uc8ffae94" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">版本链</span></strong><span data-lake-id="uee186ad7" id="uee186ad7" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">，通过 </span><code data-lake-id="u5ec0aec3" id="u5ec0aec3"><strong><span data-lake-id="u3c229cc4" id="u3c229cc4" class="lake-fontsize-12" style="color: rgb(64, 64, 64); background-color: rgb(236, 236, 236)">DB_ROLL_PTR</span></strong></code><span data-lake-id="ueb71861c" id="ueb71861c" class="lake-fontsize-12" style="color: rgb(64, 64, 64)"> 可以找到所有历史版本：</span></p><h3 data-lake-id="40e6854c" id="40e6854c" data-lake-index-type="0"><strong><span data-lake-id="u5c7ab97e" id="u5c7ab97e" style="color: rgb(64, 64, 64)">(3) ReadView（读视图）</span></strong></h3><ul list="uf714cad9"><li fid="u1622a2fe" data-lake-id="u233fcd17" id="u233fcd17"><strong><span data-lake-id="ub70c9f1c" id="ub70c9f1c" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">决定事务能看到哪些版本的数据</span></strong><span data-lake-id="ubbdb68f8" id="ubbdb68f8" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">，包含：</span></li></ul><ul list="uf714cad9" data-lake-indent="1"><li fid="u57261df3" data-lake-id="u35c25f01" id="u35c25f01"><code data-lake-id="u9b905807" id="u9b905807"><strong><span data-lake-id="u4e7cb84a" id="u4e7cb84a" class="lake-fontsize-12" style="color: rgb(64, 64, 64); background-color: rgb(236, 236, 236)">m_ids</span></strong></code><span data-lake-id="u41f336ab" id="u41f336ab" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">：当前活跃（未提交）的事务 ID 列表。</span></li><li fid="u57261df3" data-lake-id="u8d77a033" id="u8d77a033"><code data-lake-id="u24102cb1" id="u24102cb1"><strong><span data-lake-id="u106bf963" id="u106bf963" class="lake-fontsize-12" style="color: rgb(64, 64, 64); background-color: rgb(236, 236, 236)">min_trx_id</span></strong></code><span data-lake-id="uf0939683" id="uf0939683" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">：</span><code data-lake-id="ubc2bf1bd" id="ubc2bf1bd"><strong><span data-lake-id="ude24362b" id="ude24362b" class="lake-fontsize-12" style="color: rgb(64, 64, 64); background-color: rgb(236, 236, 236)">m_ids</span></strong></code><span data-lake-id="u7e3a2bc8" id="u7e3a2bc8" class="lake-fontsize-12" style="color: rgb(64, 64, 64)"> </span><span data-lake-id="u42380278" id="u42380278" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">中的最小事务 ID。</span></li><li fid="u57261df3" data-lake-id="u93570075" id="u93570075"><code data-lake-id="u97fe9cdf" id="u97fe9cdf"><strong><span data-lake-id="u9edf9af5" id="u9edf9af5" class="lake-fontsize-12" style="color: rgb(64, 64, 64); background-color: rgb(236, 236, 236)">max_trx_id</span></strong></code><span data-lake-id="u3bfbbe5f" id="u3bfbbe5f" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">：下一个即将分配的事务 ID。</span></li><li fid="u57261df3" data-lake-id="ue711e747" id="ue711e747"><code data-lake-id="u341d63b8" id="u341d63b8"><strong><span data-lake-id="u329e79cb" id="u329e79cb" class="lake-fontsize-12" style="color: rgb(64, 64, 64); background-color: rgb(236, 236, 236)">creator_trx_id</span></strong></code><span data-lake-id="u9eb0cf22" id="u9eb0cf22" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">：创建该</span><span data-lake-id="u919ebe3f" id="u919ebe3f" class="lake-fontsize-12" style="color: rgb(64, 64, 64)"> </span><code data-lake-id="u4cadde54" id="u4cadde54"><strong><span data-lake-id="uf441e55e" id="uf441e55e" class="lake-fontsize-12" style="color: rgb(64, 64, 64); background-color: rgb(236, 236, 236)">ReadView</span></strong></code><span data-lake-id="u78971879" id="u78971879" class="lake-fontsize-12" style="color: rgb(64, 64, 64)"> </span><span data-lake-id="u8c6ff9f4" id="u8c6ff9f4" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">的事务 ID。</span></li></ul><ul list="uf714cad9" start="2"><li fid="u1622a2fe" data-lake-id="ua2ea518e" id="ua2ea518e"><strong><span data-lake-id="u2241dc16" id="u2241dc16" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">判断数据版本是否可见的规则</span></strong><span data-lake-id="ud0b799b0" id="ud0b799b0" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">：</span></li></ul><ul list="uf714cad9" data-lake-indent="1"><li fid="ud90159e8" data-lake-id="u7e4817a2" id="u7e4817a2"><span data-lake-id="u60761714" id="u60761714" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">如果</span><span data-lake-id="udac262f7" id="udac262f7" class="lake-fontsize-12" style="color: rgb(64, 64, 64)"> </span><code data-lake-id="u3a36229f" id="u3a36229f"><strong><span data-lake-id="u6923f96a" id="u6923f96a" class="lake-fontsize-12" style="color: rgb(64, 64, 64); background-color: rgb(236, 236, 236)">DB_TRX_ID &lt; min_trx_id</span></strong></code><span data-lake-id="u5822a2ef" id="u5822a2ef" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">：说明该版本已提交，</span><strong><span data-lake-id="u2e7b548b" id="u2e7b548b" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">可见</span></strong><span data-lake-id="u5f0937ab" id="u5f0937ab" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">。</span></li><li fid="ud90159e8" data-lake-id="uf8525dfa" id="uf8525dfa"><span data-lake-id="udd666f72" id="udd666f72" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">如果</span><span data-lake-id="uae1a90e4" id="uae1a90e4" class="lake-fontsize-12" style="color: rgb(64, 64, 64)"> </span><code data-lake-id="ud73eff26" id="ud73eff26"><strong><span data-lake-id="u795c5460" id="u795c5460" class="lake-fontsize-12" style="color: rgb(64, 64, 64); background-color: rgb(236, 236, 236)">DB_TRX_ID &gt; max_trx_id</span></strong></code><span data-lake-id="ua630bfb0" id="ua630bfb0" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">：说明该版本是未来事务修改的，</span><strong><span data-lake-id="u01564430" id="u01564430" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">不可见</span></strong><span data-lake-id="u6606035b" id="u6606035b" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">。</span></li><li fid="ud90159e8" data-lake-id="ufa63dfb9" id="ufa63dfb9"><span data-lake-id="ub93c7b01" id="ub93c7b01" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">如果</span><span data-lake-id="u2401d78a" id="u2401d78a" class="lake-fontsize-12" style="color: rgb(64, 64, 64)"> </span><code data-lake-id="uc9bdd19b" id="uc9bdd19b"><strong><span data-lake-id="ue8a3e50f" id="ue8a3e50f" class="lake-fontsize-12" style="color: rgb(64, 64, 64); background-color: rgb(236, 236, 236)">min_trx_id ≤ DB_TRX_ID ≤ max_trx_id</span></strong></code><span data-lake-id="uf5ad3975" id="uf5ad3975" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">：</span></li></ul><ul list="uf714cad9" data-lake-indent="2"><li fid="u2e4ed3b0" data-lake-id="ub21559a7" id="ub21559a7"><span data-lake-id="u527b9c60" id="u527b9c60" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">如果</span><span data-lake-id="u6208e596" id="u6208e596" class="lake-fontsize-12" style="color: rgb(64, 64, 64)"> </span><code data-lake-id="u8eaa1018" id="u8eaa1018"><strong><span data-lake-id="u015b0175" id="u015b0175" class="lake-fontsize-12" style="color: rgb(64, 64, 64); background-color: rgb(236, 236, 236)">DB_TRX_ID</span></strong></code><span data-lake-id="u99e9e1b4" id="u99e9e1b4" class="lake-fontsize-12" style="color: rgb(64, 64, 64)"> </span><span data-lake-id="ucf43cbbd" id="ucf43cbbd" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">在</span><span data-lake-id="u3eabb2e0" id="u3eabb2e0" class="lake-fontsize-12" style="color: rgb(64, 64, 64)"> </span><code data-lake-id="u1e612a41" id="u1e612a41"><strong><span data-lake-id="ucc505c82" id="ucc505c82" class="lake-fontsize-12" style="color: rgb(64, 64, 64); background-color: rgb(236, 236, 236)">m_ids</span></strong></code><span data-lake-id="u06589a3b" id="u06589a3b" class="lake-fontsize-12" style="color: rgb(64, 64, 64)"> </span><span data-lake-id="u8d04c686" id="u8d04c686" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">中：说明该版本由未提交事务修改，</span><strong><span data-lake-id="uc8ab1a66" id="uc8ab1a66" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">不可见</span></strong><span data-lake-id="u8dc4f459" id="u8dc4f459" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">。</span></li><li fid="u2e4ed3b0" data-lake-id="udcd91afa" id="udcd91afa"><span data-lake-id="u6fdc12d0" id="u6fdc12d0" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">否则：说明该版本已提交，</span><strong><span data-lake-id="u3ea32b53" id="u3ea32b53" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">可见</span></strong><span data-lake-id="u981fde05" id="u981fde05" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">。</span></li></ul><h2 data-lake-id="pdt5e" id="pdt5e" data-lake-index-type="0"><span data-lake-id="ucb386c6d" id="ucb386c6d">MySQL的日志类型有哪些？bin log,redo log,和undo log的作用和区别是什么？</span></h2><p data-lake-id="u339893cc" id="u339893cc"><span data-lake-id="uc3738b01" id="uc3738b01" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">MySQL 通过多种日志机制确保数据的</span><span data-lake-id="u6a392fbf" id="u6a392fbf" class="lake-fontsize-12" style="color: rgb(64, 64, 64)"> </span><strong><span data-lake-id="u5b234510" id="u5b234510" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">持久性、一致性、事务回滚</span></strong><span data-lake-id="u221798a5" id="u221798a5" class="lake-fontsize-12" style="color: rgb(64, 64, 64)"> </span><span data-lake-id="u4b50e6be" id="u4b50e6be" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">和</span><span data-lake-id="u9eaf6415" id="u9eaf6415" class="lake-fontsize-12" style="color: rgb(64, 64, 64)"> </span><strong><span data-lake-id="uf028cab2" id="uf028cab2" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">主从复制</span></strong><span data-lake-id="u4b29caa7" id="u4b29caa7" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">，其中最重要的三种日志是</span><span data-lake-id="u7c68ac37" id="u7c68ac37" class="lake-fontsize-12" style="color: rgb(64, 64, 64)"> </span><strong><span data-lake-id="ucffd0fb5" id="ucffd0fb5" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">binlog（二进制日志）、redo log（重做日志）</span></strong><span data-lake-id="ud6771de2" id="ud6771de2" class="lake-fontsize-12" style="color: rgb(64, 64, 64)"> </span><span data-lake-id="u2e7a9ece" id="u2e7a9ece" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">和</span><span data-lake-id="u932446fd" id="u932446fd" class="lake-fontsize-12" style="color: rgb(64, 64, 64)"> </span><strong><span data-lake-id="uea5486c8" id="uea5486c8" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">undo log（回滚日志）</span></strong><span data-lake-id="u58648908" id="u58648908" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">。它们的作用和区别如下：</span></p><card type="block" name="hr" value="data:%7B%22id%22%3A%22YIl63%22%7D"></card><h3 data-lake-id="n2V6S" id="n2V6S" data-lake-index-type="0"><strong><span data-lake-id="u901f87c1" id="u901f87c1" style="color: rgb(64, 64, 64)">1. MySQL 日志类型概览</span></strong></h3><table data-lake-id="OjKHP" id="OjKHP" margin="true" class="lake-table" style="width: 748px"><colgroup><col width="187"><col width="187"><col width="187"><col width="187"></colgroup><tbody><tr data-lake-id="uee9b4703" id="uee9b4703"><td data-lake-id="uba042690" id="uba042690"><p data-lake-id="ufd79f331" id="ufd79f331" style="text-align: left"><strong><span data-lake-id="u314f003c" id="u314f003c" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">日志类型</span></strong></p></td><td data-lake-id="uf411d954" id="uf411d954"><p data-lake-id="u539517c2" id="u539517c2" style="text-align: left"><strong><span data-lake-id="u55fcf6d5" id="u55fcf6d5" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">存储引擎支持</span></strong></p></td><td data-lake-id="ud0eb874b" id="ud0eb874b"><p data-lake-id="u7f8e14d1" id="u7f8e14d1" style="text-align: left"><strong><span data-lake-id="u42623a59" id="u42623a59" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">主要作用</span></strong></p></td><td data-lake-id="u7edf0d22" id="u7edf0d22"><p data-lake-id="u49d3c44b" id="u49d3c44b" style="text-align: left"><strong><span data-lake-id="u43b96f4e" id="u43b96f4e" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">是否持久化</span></strong></p></td></tr><tr data-lake-id="u9b580e07" id="u9b580e07"><td data-lake-id="ua2f28c2b" id="ua2f28c2b"><p data-lake-id="u789055df" id="u789055df"><strong><span data-lake-id="u6ba57696" id="u6ba57696" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">binlog（二进制日志）</span></strong></p></td><td data-lake-id="u1388de04" id="u1388de04"><p data-lake-id="u42ea7c5d" id="u42ea7c5d"><span data-lake-id="u9b8bc696" id="u9b8bc696" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">所有引擎（InnoDB、MyISAM）</span></p></td><td data-lake-id="u83ee289d" id="u83ee289d"><p data-lake-id="uc5fa9bcb" id="uc5fa9bcb"><span data-lake-id="u841dc91a" id="u841dc91a" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">主从复制、数据恢复</span></p></td><td data-lake-id="u4185362f" id="u4185362f"><p data-lake-id="u8c28a15b" id="u8c28a15b"><span data-lake-id="ue4919d4f" id="ue4919d4f" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">可配置（</span><code data-lake-id="u8dc0596e" id="u8dc0596e"><strong><span data-lake-id="uf8735c1c" id="uf8735c1c" class="lake-fontsize-12" style="color: rgb(64, 64, 64); background-color: rgb(236, 236, 236)">sync_binlog</span></strong></code></p><p data-lake-id="uafb529e9" id="uafb529e9"><span data-lake-id="uefe0bc36" id="uefe0bc36" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">）</span></p></td></tr><tr data-lake-id="ud14f8437" id="ud14f8437"><td data-lake-id="u038cb36a" id="u038cb36a"><p data-lake-id="u1be903f6" id="u1be903f6"><strong><span data-lake-id="ue1dfc06a" id="ue1dfc06a" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">redo log（重做日志）</span></strong></p></td><td data-lake-id="u0067fe0d" id="u0067fe0d"><p data-lake-id="u1a1295b6" id="u1a1295b6"><span data-lake-id="u11037d8f" id="u11037d8f" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">InnoDB 特有</span></p></td><td data-lake-id="u22f789dd" id="u22f789dd"><p data-lake-id="u9ec30de4" id="u9ec30de4"><span data-lake-id="u7a0bb6b2" id="u7a0bb6b2" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">崩溃恢复，保证事务持久性</span></p></td><td data-lake-id="udbd421fd" id="udbd421fd"><p data-lake-id="u1bdaccf3" id="u1bdaccf3"><span data-lake-id="u56e5e0ce" id="u56e5e0ce" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">强制持久化（</span><code data-lake-id="u206c03bd" id="u206c03bd"><strong><span data-lake-id="u4c467f51" id="u4c467f51" class="lake-fontsize-12" style="color: rgb(64, 64, 64); background-color: rgb(236, 236, 236)">innodb_flush_log_at_trx_commit=1</span></strong></code></p><p data-lake-id="ud5679929" id="ud5679929"><span data-lake-id="u31d22bc3" id="u31d22bc3" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">）</span></p></td></tr><tr data-lake-id="u04075be4" id="u04075be4"><td data-lake-id="u827f0f5f" id="u827f0f5f"><p data-lake-id="u03c58688" id="u03c58688"><strong><span data-lake-id="u5ebf6589" id="u5ebf6589" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">undo log（回滚日志）</span></strong></p></td><td data-lake-id="u2e4a1ad0" id="u2e4a1ad0"><p data-lake-id="ubccc0e45" id="ubccc0e45"><span data-lake-id="ueff14df7" id="ueff14df7" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">InnoDB 特有</span></p></td><td data-lake-id="u6d9b4906" id="u6d9b4906"><p data-lake-id="u23e3f7c1" id="u23e3f7c1"><span data-lake-id="udaf5b051" id="udaf5b051" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">事务回滚、MVCC 多版本控制</span></p></td><td data-lake-id="u5844229a" id="u5844229a"><p data-lake-id="udfed67f8" id="udfed67f8"><span data-lake-id="u4fc36ea5" id="u4fc36ea5" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">随事务提交逐步清理</span></p></td></tr></tbody></table><card type="block" name="hr" value="data:%7B%22id%22%3A%22mHTQt%22%7D"></card><h3 data-lake-id="aqqet" id="aqqet" data-lake-index-type="0"><strong><span data-lake-id="u22b35ec0" id="u22b35ec0" style="color: rgb(64, 64, 64)">2. 三种核心日志详解</span></strong></h3><h3 data-lake-id="185968aa" id="185968aa" data-lake-index-type="0"><strong><span data-lake-id="ufdc74415" id="ufdc74415" style="color: rgb(64, 64, 64)">(1) binlog（二进制日志）</span></strong></h3><ul list="uc58a44c4"><li fid="ua5181ad8" data-lake-id="u5d37d1bc" id="u5d37d1bc"><strong><span data-lake-id="u6dcf6e2a" id="u6dcf6e2a" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">作用</span></strong><span data-lake-id="ued813614" id="ued813614" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">：</span></li></ul><ul list="uc58a44c4" data-lake-indent="1"><li fid="u51b7e062" data-lake-id="u53e4ead3" id="u53e4ead3"><strong><span data-lake-id="ufd35c8e7" id="ufd35c8e7" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">主从复制</span></strong><span data-lake-id="ufb30c2c6" id="ufb30c2c6" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">：从库通过 binlog 同步主库的数据变更。</span></li><li fid="u51b7e062" data-lake-id="u91b251ed" id="u91b251ed"><strong><span data-lake-id="u655afff0" id="u655afff0" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">数据恢复</span></strong><span data-lake-id="u1865228b" id="u1865228b" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">：通过</span><span data-lake-id="u1cca6635" id="u1cca6635" class="lake-fontsize-12" style="color: rgb(64, 64, 64)"> </span><code data-lake-id="u4c97b632" id="u4c97b632"><strong><span data-lake-id="ucca0d097" id="ucca0d097" class="lake-fontsize-12" style="color: rgb(64, 64, 64); background-color: rgb(236, 236, 236)">mysqlbinlog</span></strong></code><span data-lake-id="u7147ff8d" id="u7147ff8d" class="lake-fontsize-12" style="color: rgb(64, 64, 64)"> </span><span data-lake-id="uc922ff49" id="uc922ff49" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">工具恢复误删数据。</span></li><li fid="u51b7e062" data-lake-id="u3f0e1bc0" id="u3f0e1bc0"><strong><span data-lake-id="ucf040d8a" id="ucf040d8a" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">审计</span></strong><span data-lake-id="ubd32d003" id="ubd32d003" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">：记录所有修改数据的 SQL 语句。</span></li></ul><ul list="uc58a44c4" start="2"><li fid="ua5181ad8" data-lake-id="u0027c125" id="u0027c125"><strong><span data-lake-id="u24463d2c" id="u24463d2c" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">特点</span></strong><span data-lake-id="ua796f828" id="ua796f828" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">：</span></li></ul><ul list="uc58a44c4" data-lake-indent="1"><li fid="u1bc2c732" data-lake-id="ud1f1d0a1" id="ud1f1d0a1"><strong><span data-lake-id="ua0375c99" id="ua0375c99" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">逻辑日志</span></strong><span data-lake-id="ubd58c927" id="ubd58c927" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">：记录 SQL 语句或行变更（</span><code data-lake-id="u0e92b284" id="u0e92b284"><strong><span data-lake-id="uf7593744" id="uf7593744" class="lake-fontsize-12" style="color: rgb(64, 64, 64); background-color: rgb(236, 236, 236)">ROW</span></strong></code><span data-lake-id="uade6b8de" id="uade6b8de" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">/</span><code data-lake-id="ua25dbda7" id="ua25dbda7"><strong><span data-lake-id="u2ae7e271" id="u2ae7e271" class="lake-fontsize-12" style="color: rgb(64, 64, 64); background-color: rgb(236, 236, 236)">STATEMENT</span></strong></code><span data-lake-id="uc90a961f" id="uc90a961f" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">/</span><code data-lake-id="u7531c49b" id="u7531c49b"><strong><span data-lake-id="u91ee6443" id="u91ee6443" class="lake-fontsize-12" style="color: rgb(64, 64, 64); background-color: rgb(236, 236, 236)">MIXED</span></strong></code><span data-lake-id="u8be9dac2" id="u8be9dac2" class="lake-fontsize-12" style="color: rgb(64, 64, 64)"> </span><span data-lake-id="u701f3312" id="u701f3312" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">格式）。</span></li><li fid="u1bc2c732" data-lake-id="u5dfaeeb4" id="u5dfaeeb4"><strong><span data-lake-id="ua305db8b" id="ua305db8b" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">追加写入</span></strong><span data-lake-id="u3f127afc" id="u3f127afc" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">：文件达到一定大小后切换新文件（不覆盖旧日志）。</span></li><li fid="u1bc2c732" data-lake-id="u8f9ee14d" id="u8f9ee14d"><strong><span data-lake-id="ub1a5c88a" id="ub1a5c88a" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">可关闭</span></strong><span data-lake-id="u18757599" id="u18757599" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">：但通常建议开启（关键场景必须启用）。</span></li></ul><p data-lake-id="ua76f90af" id="ua76f90af"><strong><span data-lake-id="ufbaa10d8" id="ufbaa10d8" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">关键配置</span></strong><span data-lake-id="u46cb230a" id="u46cb230a" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">：</span></p><ul list="uc58a44c4" start="3"><li fid="ua5181ad8" data-lake-id="ube3dc093" id="ube3dc093"><span data-lake-id="ucd00361c" id="ucd00361c" class="lake-fontsize-10" style="color: rgb(255, 255, 255); background-color: rgb(80, 80, 90)">ini</span><span data-lake-id="uf71835f5" id="uf71835f5" class="lake-fontsize-10" style="color: inherit; background-color: rgb(80, 80, 90)">复制</span></li></ul><card type="inline" name="codeblock" value="data:%7B%22search%22%3A%22%22%2C%22mode%22%3A%22plain%22%2C%22code%22%3A%22log_bin%20%3D%20ON%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%23%20%E5%BC%80%E5%90%AF%20binlog%5Cnsync_binlog%20%3D%201%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%23%20%E6%AF%8F%E6%AC%A1%E4%BA%8B%E5%8A%A1%E6%8F%90%E4%BA%A4%E9%83%BD%E5%88%B7%E7%9B%98%EF%BC%88%E4%BF%9D%E8%AF%81%E4%B8%8D%E4%B8%A2%E5%A4%B1%EF%BC%89%5Cnbinlog_format%20%3D%20ROW%20%20%20%20%20%20%20%20%20%20%20%20%20%20%23%20%E6%8E%A8%E8%8D%90%20ROW%20%E6%A0%BC%E5%BC%8F%EF%BC%88%E8%AE%B0%E5%BD%95%E8%A1%8C%E5%8F%98%E6%9B%B4%EF%BC%89%5Cnexpire_logs_days%20%3D%207%20%20%20%20%20%20%20%20%20%20%20%20%20%23%20%E6%97%A5%E5%BF%97%E4%BF%9D%E7%95%99%E5%A4%A9%E6%95%B0%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22Bracket%20Lights%20Pro%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22QOEW1%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D"></card><card type="block" name="hr" value="data:%7B%22id%22%3A%22dBKrh%22%7D"></card><h3 data-lake-id="4bfbddbb" id="4bfbddbb" data-lake-index-type="0"><strong><span data-lake-id="u3bd5d53f" id="u3bd5d53f" style="color: rgb(64, 64, 64)">(2) redo log（重做日志）</span></strong></h3><ul list="u1674d1eb"><li fid="ud77e548d" data-lake-id="u0885a76d" id="u0885a76d"><strong><span data-lake-id="ua657ef91" id="ua657ef91" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">作用</span></strong><span data-lake-id="u840872d5" id="u840872d5" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">：</span></li></ul><ul list="u1674d1eb" data-lake-indent="1"><li fid="u3a75d0bc" data-lake-id="ua781dd29" id="ua781dd29"><strong><span data-lake-id="u4e5571c5" id="u4e5571c5" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">崩溃恢复</span></strong><span data-lake-id="u1e6f73f2" id="u1e6f73f2" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">：确保事务提交后数据不丢失（即使 MySQL 崩溃）。</span></li><li fid="u3a75d0bc" data-lake-id="u863b2e8b" id="u863b2e8b"><strong><span data-lake-id="uf76117c8" id="uf76117c8" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">Write-Ahead Logging (WAL)</span></strong><span data-lake-id="u076e3f31" id="u076e3f31" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">：修改数据前先写日志，再写磁盘。</span></li></ul><ul list="u1674d1eb" start="2"><li fid="ud77e548d" data-lake-id="u789efe7a" id="u789efe7a"><strong><span data-lake-id="u2b4879bb" id="u2b4879bb" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">特点</span></strong><span data-lake-id="uf388c818" id="uf388c818" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">：</span></li></ul><ul list="u1674d1eb" data-lake-indent="1"><li fid="ubbc1d116" data-lake-id="u27c97067" id="u27c97067"><strong><span data-lake-id="u28791292" id="u28791292" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">物理日志</span></strong><span data-lake-id="u317f90a4" id="u317f90a4" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">：记录数据页的物理修改（如“在 page 5 的 offset 10 写入 ‘abc’”）。</span></li><li fid="ubbc1d116" data-lake-id="u4bf0d6d5" id="u4bf0d6d5"><strong><span data-lake-id="u2814fa0b" id="u2814fa0b" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">循环写入</span></strong><span data-lake-id="u2121d0c4" id="u2121d0c4" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">：固定大小文件组（如</span><span data-lake-id="ue3f2169d" id="ue3f2169d" class="lake-fontsize-12" style="color: rgb(64, 64, 64)"> </span><code data-lake-id="u31739d75" id="u31739d75"><strong><span data-lake-id="u815d9d67" id="u815d9d67" class="lake-fontsize-12" style="color: rgb(64, 64, 64); background-color: rgb(236, 236, 236)">ib_logfile0</span></strong></code><span data-lake-id="uad00369d" id="uad00369d" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">、</span><code data-lake-id="ud96776a3" id="ud96776a3"><strong><span data-lake-id="u79cd5675" id="u79cd5675" class="lake-fontsize-12" style="color: rgb(64, 64, 64); background-color: rgb(236, 236, 236)">ib_logfile1</span></strong></code><span data-lake-id="ue8dd9e86" id="ue8dd9e86" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">），写满后覆盖。</span></li><li fid="ubbc1d116" data-lake-id="ubc2e97f5" id="ubc2e97f5"><strong><span data-lake-id="u8680b820" id="u8680b820" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">高性能</span></strong><span data-lake-id="u98662c94" id="u98662c94" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">：顺序 I/O（比随机写数据文件快）。</span></li></ul><ul list="u1674d1eb" start="3"><li fid="ud77e548d" data-lake-id="ucf12097f" id="ucf12097f"><strong><span data-lake-id="uf99bd340" id="uf99bd340" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">工作流程</span></strong><span data-lake-id="ucb82c476" id="ucb82c476" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">：</span></li></ul><ol list="u0558f01f" data-lake-indent="1"><li fid="u4ef330c1" data-lake-id="u23972fef" id="u23972fef"><span data-lake-id="ud5683d17" id="ud5683d17" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">事务修改数据时，先写入</span><span data-lake-id="ub87e021b" id="ub87e021b" class="lake-fontsize-12" style="color: rgb(64, 64, 64)"> </span><strong><span data-lake-id="ua0e0c599" id="ua0e0c599" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">redo log buffer</span></strong><span data-lake-id="ue210f987" id="ue210f987" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">（内存）。</span></li><li fid="u4ef330c1" data-lake-id="u16ba536c" id="u16ba536c"><span data-lake-id="u4510f032" id="u4510f032" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">事务提交时，调用</span><span data-lake-id="u92f8fb2a" id="u92f8fb2a" class="lake-fontsize-12" style="color: rgb(64, 64, 64)"> </span><code data-lake-id="u1a085950" id="u1a085950"><strong><span data-lake-id="ub403edc6" id="ub403edc6" class="lake-fontsize-12" style="color: rgb(64, 64, 64); background-color: rgb(236, 236, 236)">fsync</span></strong></code><span data-lake-id="u4eed98ea" id="u4eed98ea" class="lake-fontsize-12" style="color: rgb(64, 64, 64)"> </span><span data-lake-id="u3119cf94" id="u3119cf94" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">刷盘（持久化到</span><span data-lake-id="uf170e2fd" id="uf170e2fd" class="lake-fontsize-12" style="color: rgb(64, 64, 64)"> </span><code data-lake-id="u97d75168" id="u97d75168"><strong><span data-lake-id="u2597a224" id="u2597a224" class="lake-fontsize-12" style="color: rgb(64, 64, 64); background-color: rgb(236, 236, 236)">ib_logfile</span></strong></code><span data-lake-id="u9d5671a5" id="u9d5671a5" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">）。</span></li><li fid="u4ef330c1" data-lake-id="u627edbaf" id="u627edbaf"><span data-lake-id="ud2367965" id="ud2367965" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">后台线程定期将脏页（修改的数据页）刷到磁盘。</span></li></ol><p data-lake-id="u32c92e63" id="u32c92e63"><strong><span data-lake-id="u804bcf5d" id="u804bcf5d" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">关键配置</span></strong><span data-lake-id="uc7fc7ab8" id="uc7fc7ab8" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">：</span></p><ul list="u1674d1eb" start="4"><li fid="ud77e548d" data-lake-id="uea9a2926" id="uea9a2926"><span data-lake-id="u4b889a54" id="u4b889a54" class="lake-fontsize-10" style="color: rgb(255, 255, 255); background-color: rgb(80, 80, 90)">ini</span><span data-lake-id="u2aef93cc" id="u2aef93cc" class="lake-fontsize-10" style="color: inherit; background-color: rgb(80, 80, 90)">复制</span></li></ul><card type="inline" name="codeblock" value="data:%7B%22search%22%3A%22%22%2C%22mode%22%3A%22plain%22%2C%22code%22%3A%22innodb_flush_log_at_trx_commit%20%3D%201%20%20%23%20%E6%8F%90%E4%BA%A4%E6%97%B6%E5%88%B7%E7%9B%98%EF%BC%88%E6%9C%80%E5%AE%89%E5%85%A8%EF%BC%89%5Cninnodb_log_file_size%20%3D%201G%20%20%20%20%20%20%20%20%20%20%20%23%20%E5%8D%95%E4%B8%AA%20redo%20log%20%E6%96%87%E4%BB%B6%E5%A4%A7%E5%B0%8F%5Cninnodb_log_files_in_group%20%3D%202%20%20%20%20%20%20%20%23%20redo%20log%20%E6%96%87%E4%BB%B6%E6%95%B0%E9%87%8F%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22Bracket%20Lights%20Pro%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22w9jUa%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D"></card><card type="block" name="hr" value="data:%7B%22id%22%3A%22JFIgr%22%7D"></card><h3 data-lake-id="fa93d795" id="fa93d795" data-lake-index-type="0"><strong><span data-lake-id="ub2cbad99" id="ub2cbad99" style="color: rgb(64, 64, 64)">(3) undo log（回滚日志）</span></strong></h3><ul list="u906c7f85"><li fid="u3ab7f93b" data-lake-id="ub0b82490" id="ub0b82490"><strong><span data-lake-id="u7b44b807" id="u7b44b807" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">作用</span></strong><span data-lake-id="uf1255bff" id="uf1255bff" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">：</span></li></ul><ul list="u906c7f85" data-lake-indent="1"><li fid="uedcd28d6" data-lake-id="ue95f29ff" id="ue95f29ff"><strong><span data-lake-id="udbe92970" id="udbe92970" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">事务回滚</span></strong><span data-lake-id="u54c267e6" id="u54c267e6" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">：记录数据修改前的值，用于</span><span data-lake-id="uf0e4d02c" id="uf0e4d02c" class="lake-fontsize-12" style="color: rgb(64, 64, 64)"> </span><code data-lake-id="u8fe889db" id="u8fe889db"><strong><span data-lake-id="uc02630b2" id="uc02630b2" class="lake-fontsize-12" style="color: rgb(64, 64, 64); background-color: rgb(236, 236, 236)">ROLLBACK</span></strong></code><span data-lake-id="u86d9829b" id="u86d9829b" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">。</span></li><li fid="uedcd28d6" data-lake-id="u7337434b" id="u7337434b"><strong><span data-lake-id="uba3715d1" id="uba3715d1" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">MVCC 多版本控制</span></strong><span data-lake-id="ue71307ec" id="ue71307ec" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">：提供一致性读（如 RR 隔离级别下读取历史版本）。</span></li></ul><ul list="u906c7f85" start="2"><li fid="u3ab7f93b" data-lake-id="u86f35cd4" id="u86f35cd4"><strong><span data-lake-id="u3e7cf340" id="u3e7cf340" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">特点</span></strong><span data-lake-id="u44c37b2f" id="u44c37b2f" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">：</span></li></ul><ul list="u906c7f85" data-lake-indent="1"><li fid="u0d2d5c5b" data-lake-id="u09e14795" id="u09e14795"><strong><span data-lake-id="ua757c4df" id="ua757c4df" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">逻辑日志</span></strong><span data-lake-id="uc8ca63cc" id="uc8ca63cc" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">：记录反向 SQL（如</span><span data-lake-id="uccc9cf52" id="uccc9cf52" class="lake-fontsize-12" style="color: rgb(64, 64, 64)"> </span><code data-lake-id="u5fa265ab" id="u5fa265ab"><strong><span data-lake-id="ue8776482" id="ue8776482" class="lake-fontsize-12" style="color: rgb(64, 64, 64); background-color: rgb(236, 236, 236)">INSERT</span></strong></code><span data-lake-id="uc63873d1" id="uc63873d1" class="lake-fontsize-12" style="color: rgb(64, 64, 64)"> </span><span data-lake-id="ubbb0268c" id="ubbb0268c" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">对应</span><span data-lake-id="u96f665d5" id="u96f665d5" class="lake-fontsize-12" style="color: rgb(64, 64, 64)"> </span><code data-lake-id="u5225f215" id="u5225f215"><strong><span data-lake-id="uc337e7b8" id="uc337e7b8" class="lake-fontsize-12" style="color: rgb(64, 64, 64); background-color: rgb(236, 236, 236)">DELETE</span></strong></code><span data-lake-id="u2bf8552c" id="u2bf8552c" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">，</span><code data-lake-id="u56b2aae9" id="u56b2aae9"><strong><span data-lake-id="u09727391" id="u09727391" class="lake-fontsize-12" style="color: rgb(64, 64, 64); background-color: rgb(236, 236, 236)">UPDATE</span></strong></code><span data-lake-id="ue7d3ba90" id="ue7d3ba90" class="lake-fontsize-12" style="color: rgb(64, 64, 64)"> </span><span data-lake-id="u84f4e915" id="u84f4e915" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">对应旧值）。</span></li><li fid="u0d2d5c5b" data-lake-id="u338a6409" id="u338a6409"><strong><span data-lake-id="u2e4fb1e0" id="u2e4fb1e0" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">存储在系统表空间（</span></strong><code data-lake-id="u0730c4f7" id="u0730c4f7"><strong><span data-lake-id="u0a136ea8" id="u0a136ea8" class="lake-fontsize-12" style="color: rgb(64, 64, 64); background-color: rgb(236, 236, 236)">ibdata1</span></strong></code><strong><span data-lake-id="ua133ef8e" id="ua133ef8e" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">）或独立 undo 表空间</span></strong><span data-lake-id="u87b114b9" id="u87b114b9" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">。</span></li><li fid="u0d2d5c5b" data-lake-id="u7db8a289" id="u7db8a289"><strong><span data-lake-id="u8a299b7d" id="u8a299b7d" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">随事务提交逐步清理</span></strong><span data-lake-id="uec92fe8b" id="uec92fe8b" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">（长事务会导致 undo log 堆积）。</span></li></ul><ul list="u906c7f85" start="3"><li fid="u3ab7f93b" data-lake-id="u44d9b097" id="u44d9b097"><strong><span data-lake-id="u2e92b03e" id="u2e92b03e" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">工作流程</span></strong><span data-lake-id="ua131c420" id="ua131c420" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">：</span></li></ul><ul list="u906c7f85" data-lake-indent="1"><li fid="uf324a5c7" data-lake-id="u9222c8ba" id="u9222c8ba"><span data-lake-id="u9feb0ace" id="u9feb0ace" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">事务修改数据前，先记录 undo log。</span></li><li fid="uf324a5c7" data-lake-id="uab528d8c" id="uab528d8c"><span data-lake-id="u4a43a244" id="u4a43a244" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">如果事务回滚，通过 undo log 恢复数据。</span></li><li fid="uf324a5c7" data-lake-id="uff1a151c" id="uff1a151c"><span data-lake-id="ufe1da9bd" id="ufe1da9bd" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">如果事务提交，undo log 不会立即删除（可能被 MVCC 读取）。</span></li></ul><card type="block" name="hr" value="data:%7B%22id%22%3A%22ujpuT%22%7D"></card><h3 data-lake-id="XEAjw" id="XEAjw" data-lake-index-type="0"><strong><span data-lake-id="u02d1d390" id="u02d1d390" style="color: rgb(64, 64, 64)">3. 三者的核心区别</span></strong></h3><table data-lake-id="FzGmw" id="FzGmw" margin="true" class="lake-table" style="width: 748px"><colgroup><col width="187"><col width="187"><col width="187"><col width="187"></colgroup><tbody><tr data-lake-id="udf5a6940" id="udf5a6940"><td data-lake-id="uf7cf1ea0" id="uf7cf1ea0"><p data-lake-id="u79b6a686" id="u79b6a686" style="text-align: left"><strong><span data-lake-id="u1c3e8f59" id="u1c3e8f59" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">对比项</span></strong></p></td><td data-lake-id="ua3265316" id="ua3265316"><p data-lake-id="ua5ddd5ed" id="ua5ddd5ed" style="text-align: left"><strong><span data-lake-id="u668064fd" id="u668064fd" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">binlog</span></strong></p></td><td data-lake-id="u5089cf24" id="u5089cf24"><p data-lake-id="u3f9581ed" id="u3f9581ed" style="text-align: left"><strong><span data-lake-id="u26513e79" id="u26513e79" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">redo log</span></strong></p></td><td data-lake-id="ue4bb2f69" id="ue4bb2f69"><p data-lake-id="ue9c17316" id="ue9c17316" style="text-align: left"><strong><span data-lake-id="u24553720" id="u24553720" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">undo log</span></strong></p></td></tr><tr data-lake-id="ubc8e41a8" id="ubc8e41a8"><td data-lake-id="uf283bf11" id="uf283bf11"><p data-lake-id="u3059803b" id="u3059803b"><strong><span data-lake-id="uf98d5481" id="uf98d5481" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">所属层级</span></strong></p></td><td data-lake-id="ua4873fbe" id="ua4873fbe"><p data-lake-id="u6d1b8f8f" id="u6d1b8f8f"><span data-lake-id="u9115f45a" id="u9115f45a" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">MySQL Server 层</span></p></td><td data-lake-id="u4294f64a" id="u4294f64a"><p data-lake-id="u84fcd738" id="u84fcd738"><span data-lake-id="u69fc3f2e" id="u69fc3f2e" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">InnoDB 存储引擎层</span></p></td><td data-lake-id="u64055c54" id="u64055c54"><p data-lake-id="ud7164d9f" id="ud7164d9f"><span data-lake-id="uf7e3a468" id="uf7e3a468" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">InnoDB 存储引擎层</span></p></td></tr><tr data-lake-id="udb692047" id="udb692047"><td data-lake-id="u3972ee28" id="u3972ee28"><p data-lake-id="u93a9a688" id="u93a9a688"><strong><span data-lake-id="u1cc25831" id="u1cc25831" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">日志类型</span></strong></p></td><td data-lake-id="uf9be8b27" id="uf9be8b27"><p data-lake-id="u5fe980c6" id="u5fe980c6"><span data-lake-id="u8d2f63ff" id="u8d2f63ff" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">逻辑日志（SQL 或行变更）</span></p></td><td data-lake-id="u2448ef73" id="u2448ef73"><p data-lake-id="u5fed27a6" id="u5fed27a6"><span data-lake-id="u6f75e837" id="u6f75e837" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">物理日志（数据页修改）</span></p></td><td data-lake-id="u5d0d3de4" id="u5d0d3de4"><p data-lake-id="ue2d212e8" id="ue2d212e8"><span data-lake-id="ud239fb34" id="ud239fb34" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">逻辑日志（反向操作）</span></p></td></tr><tr data-lake-id="ucfff18d6" id="ucfff18d6"><td data-lake-id="u0f9ad8eb" id="u0f9ad8eb"><p data-lake-id="u229ac014" id="u229ac014"><strong><span data-lake-id="ua8ed8b5b" id="ua8ed8b5b" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">作用</span></strong></p></td><td data-lake-id="u710eb90c" id="u710eb90c"><p data-lake-id="u0f26e7a9" id="u0f26e7a9"><span data-lake-id="u75e19679" id="u75e19679" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">主从复制、数据恢复</span></p></td><td data-lake-id="uc79e8bd4" id="uc79e8bd4"><p data-lake-id="u5a61e660" id="u5a61e660"><span data-lake-id="uec4de1ae" id="uec4de1ae" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">崩溃恢复，保证持久性</span></p></td><td data-lake-id="uadea792d" id="uadea792d"><p data-lake-id="u54574ed6" id="u54574ed6"><span data-lake-id="u57bc200f" id="u57bc200f" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">事务回滚、MVCC</span></p></td></tr><tr data-lake-id="u1a3b8405" id="u1a3b8405"><td data-lake-id="u6007898e" id="u6007898e"><p data-lake-id="u17bb0cee" id="u17bb0cee"><strong><span data-lake-id="ufbcb1952" id="ufbcb1952" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">写入时机</span></strong></p></td><td data-lake-id="u5c0cd330" id="u5c0cd330"><p data-lake-id="u84a1fce5" id="u84a1fce5"><span data-lake-id="u0775c307" id="u0775c307" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">事务提交后</span></p></td><td data-lake-id="uae57b7bf" id="uae57b7bf"><p data-lake-id="u5f8c661f" id="u5f8c661f"><span data-lake-id="u62242a0f" id="u62242a0f" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">事务执行中（Prepare 阶段）</span></p></td><td data-lake-id="u837be9c6" id="u837be9c6"><p data-lake-id="uc5f8686c" id="uc5f8686c"><span data-lake-id="u0eb7532e" id="u0eb7532e" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">事务修改数据前</span></p></td></tr><tr data-lake-id="u409a23d9" id="u409a23d9"><td data-lake-id="uedb2f4f0" id="uedb2f4f0"><p data-lake-id="u224f859f" id="u224f859f"><strong><span data-lake-id="u8fc7a5b2" id="u8fc7a5b2" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">持久化</span></strong></p></td><td data-lake-id="ude821690" id="ude821690"><p data-lake-id="u0bbff699" id="u0bbff699"><span data-lake-id="u8274a17c" id="u8274a17c" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">可配置（</span><code data-lake-id="u71260e29" id="u71260e29"><strong><span data-lake-id="u34183a2a" id="u34183a2a" class="lake-fontsize-12" style="color: rgb(64, 64, 64); background-color: rgb(236, 236, 236)">sync_binlog</span></strong></code></p><p data-lake-id="u79d78a89" id="u79d78a89"><span data-lake-id="u2c5fd157" id="u2c5fd157" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">）</span></p></td><td data-lake-id="uf133f614" id="uf133f614"><p data-lake-id="udc5f4336" id="udc5f4336"><span data-lake-id="u9708ce07" id="u9708ce07" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">强制（</span><code data-lake-id="ue541d4c3" id="ue541d4c3"><strong><span data-lake-id="ub48862a5" id="ub48862a5" class="lake-fontsize-12" style="color: rgb(64, 64, 64); background-color: rgb(236, 236, 236)">innodb_flush_log_at_trx_commit=1</span></strong></code></p><p data-lake-id="uac2f2b99" id="uac2f2b99"><span data-lake-id="u42d78a5d" id="u42d78a5d" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">）</span></p></td><td data-lake-id="u7e83491b" id="u7e83491b"><p data-lake-id="ud7e68003" id="ud7e68003"><span data-lake-id="ua8ce228a" id="ua8ce228a" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">随事务提交清理</span></p></td></tr><tr data-lake-id="u12a3ae17" id="u12a3ae17"><td data-lake-id="u854efc7c" id="u854efc7c"><p data-lake-id="udcc6e477" id="udcc6e477"><strong><span data-lake-id="u9074ef1d" id="u9074ef1d" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">日志清理</span></strong></p></td><td data-lake-id="u206f3f42" id="u206f3f42"><p data-lake-id="u2905d7dd" id="u2905d7dd"><span data-lake-id="u9f935213" id="u9f935213" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">按时间/大小过期删除</span></p></td><td data-lake-id="u936d4a7a" id="u936d4a7a"><p data-lake-id="u335af920" id="u335af920"><span data-lake-id="uc4260647" id="uc4260647" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">循环覆盖</span></p></td><td data-lake-id="u1a3ba2ab" id="u1a3ba2ab"><p data-lake-id="ua7b98edb" id="ua7b98edb"><span data-lake-id="u1e092b4c" id="u1e092b4c" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">事务提交后逐步清理</span></p></td></tr></tbody></table><p data-lake-id="ua5d18a19" id="ua5d18a19"><br></p><h2 data-lake-id="x2x2Q" id="x2x2Q" data-lake-index-type="0"><span data-lake-id="ufaafd8b8" id="ufaafd8b8">数据库的脏读、不可重复读和幻读分别是什么？</span></h2><p data-lake-id="u0bd3d142" id="u0bd3d142"><span data-lake-id="ub85b0baf" id="ub85b0baf" class="lake-fontsize-12">1.脏读（Dirty Read）</span></p><p data-lake-id="u51d2737f" id="u51d2737f" style="text-indent: 2em"><span data-lake-id="u971ab1e1" id="u971ab1e1" class="lake-fontsize-12">一个事务读取到另一个事务未提交的的数据。</span></p><p data-lake-id="ubb104e99" id="ubb104e99"><span data-lake-id="u0f69c4cc" id="u0f69c4cc" class="lake-fontsize-12">2.不可重复读（Non-repeatable Read）</span></p><p data-lake-id="udedd46ca" id="udedd46ca" style="text-indent: 2em"><span data-lake-id="u3dedfde3" id="u3dedfde3" class="lake-fontsize-12">在同一事务中，读取同一数据两次，两次值不同。</span></p><p data-lake-id="ueea607cc" id="ueea607cc"><span data-lake-id="u5ac18d47" id="u5ac18d47" class="lake-fontsize-12">3.幻读（Phantom Read）</span></p><p data-lake-id="u2b878b42" id="u2b878b42" style="text-indent: 2em"><span data-lake-id="ue08fd8f0" id="ue08fd8f0" class="lake-fontsize-12">在同一事务中执行相同的查询操作，返回的结果集的数量不同。</span></p><p data-lake-id="u04a7dc17" id="u04a7dc17"><span data-lake-id="u076edea9" id="u076edea9" class="lake-fontsize-12">发生的隔离级别：</span></p><p data-lake-id="u2889cab5" id="u2889cab5" style="text-indent: 2em"><span data-lake-id="uca4b5a4c" id="uca4b5a4c" class="lake-fontsize-12">读取未提交脏读</span></p><p data-lake-id="ueca7f003" id="ueca7f003" style="text-indent: 2em"><span data-lake-id="u93ee2ee5" id="u93ee2ee5" class="lake-fontsize-12">读取已提交可以防止脏读，但可能出现不可重复读</span></p><p data-lake-id="ub4b68e2e" id="ub4b68e2e" style="text-indent: 2em"><span data-lake-id="u2d08e687" id="u2d08e687" class="lake-fontsize-12">可重复读可以防止脏读和不可重复读，但可能出现幻读</span></p><p data-lake-id="u5eefefea" id="u5eefefea" style="text-indent: 2em"><span data-lake-id="u6c967fff" id="u6c967fff" class="lake-fontsize-12">串行化防止所有三种问题，但性能开销大。</span></p><h2 data-lake-id="TR36d" id="TR36d" data-lake-index-type="0"><span data-lake-id="ued020357" id="ued020357">MySQL中的事务隔离级别有哪些？</span></h2><p data-lake-id="u545272fd" id="u545272fd"><span data-lake-id="ua9630feb" id="ua9630feb" class="lake-fontsize-12">四种：</span></p><p data-lake-id="ub283324a" id="ub283324a" style="text-indent: 2em"><span data-lake-id="ue4b5ca98" id="ue4b5ca98" class="lake-fontsize-12">1.读未提交</span></p><p data-lake-id="u1f9e2e4c" id="u1f9e2e4c" style="text-indent: 2em"><span data-lake-id="ucb4bb39d" id="ucb4bb39d" class="lake-fontsize-12">一个事务可以看到另一个事务尚未提交的数据修改。</span></p><p data-lake-id="u2941b68f" id="u2941b68f" style="padding-left: 2em"><span data-lake-id="uc66f92d8" id="uc66f92d8" class="lake-fontsize-12">2.读已提交</span></p><p data-lake-id="u69bf09e2" id="u69bf09e2" style="padding-left: 2em"><span data-lake-id="ufce5619e" id="ufce5619e" class="lake-fontsize-12">一个事务只能看到已经提交的其他事务所做的修改。</span></p><p data-lake-id="u8962bc37" id="u8962bc37" style="padding-left: 2em"><span data-lake-id="u773cb79c" id="u773cb79c" class="lake-fontsize-12">3.读可重复</span></p><p data-lake-id="u49ded077" id="u49ded077" style="padding-left: 2em"><span data-lake-id="uad8df095" id="uad8df095" class="lake-fontsize-12">一个事务中的多个查询返回结果是一致的。</span></p><p data-lake-id="udc67bd3d" id="udc67bd3d" style="padding-left: 2em"><span data-lake-id="u7d25298b" id="u7d25298b" class="lake-fontsize-12">4.串行化   </span></p><p data-lake-id="u5b1b22d2" id="u5b1b22d2" style="padding-left: 2em"><span data-lake-id="uaaf6c25d" id="uaaf6c25d" class="lake-fontsize-12">事务的操作结果相当于一个按顺序执行的单线程操作。可以避免所有并发问题，但是大大降低并发性能。</span></p><h2 data-lake-id="swy1w" id="swy1w" data-lake-index-type="0"><span data-lake-id="u7c2d8f83" id="u7c2d8f83" class="lake-fontsize-12">MySQL默认的事务隔离级别是什么？为什么选择这个级别？</span></h2><p data-lake-id="u006b13b6" id="u006b13b6"><span data-lake-id="ue36e5b2a" id="ue36e5b2a" class="lake-fontsize-12">RR,可重复级别，原因是为了兼容早期binlog的statement格式问题（记录的是sql语句，事务谁先提交先执行谁），如果使用读已提交和未提交，会导致主从库不同步。RR因为这个隔离级别下有间隙锁，临键锁能够解决这个问题。</span></p><h2 data-lake-id="g3YW4" id="g3YW4" data-lake-index-type="0"><span data-lake-id="u16139e8b" id="u16139e8b" class="lake-fontsize-12">MySQL中有那些锁？</span></h2><p data-lake-id="u0f5b021a" id="u0f5b021a"><card type="inline" name="image" value="data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2025%2Fpng%2F32795398%2F1744030370191-477fea74-b9db-40b1-877a-39aa2e46afaf.png%22%2C%22taskId%22%3A%22ubab19b8e-1a4f-40ce-bf84-c3cfe6b4371%22%2C%22clientId%22%3A%22ufea4d7be-4e2f-4%22%2C%22originalType%22%3A%22binary%22%2C%22width%22%3A580.6666666666666%2C%22height%22%3A763%2C%22linkTarget%22%3A%22_blank%22%2C%22name%22%3A%22image.png%22%2C%22size%22%3A567198%2C%22from%22%3A%22paste%22%2C%22originWidth%22%3A871%2C%22originHeight%22%3A1144%2C%22ratio%22%3A1.5%2C%22status%22%3A%22done%22%2C%22style%22%3A%22none%22%2C%22search%22%3A%22%E4%BD%9C%E7%94%A8%20%E4%BB%85%E5%AF%B9%E7%89%B9%E5%AE%9A%E8%A1%8C%E5%8A%A0%E9%94%81%2C%E5%85%B6%E4%BB%96%E4%BA%8B%E5%8A%A1%E5%8F%AF%E4%BB%A5%E5%B9%B6%E5%8F%91%E8%AE%BF%E9%97%AE%E4%B8%8D%E5%90%8C%E7%9A%84%E8%A1%8C%20%E8%A1%8C%E7%BA%A7%E9%94%81%20%E9%80%82%E7%94%A8%E6%96%B9%E5%90%91%20%E9%80%82%E7%94%A8%E4%BA%8E%E9%AB%98%E5%B9%B6%E5%8F%91%E5%9C%BA%E6%99%AF%20%E4%BD%9C%E7%94%A8%20%E5%AF%B9%E6%95%B4%E5%BC%A0%E8%A1%A8%E5%8A%A0%E9%94%81%2C%E5%85%B6%E4%BB%96%E4%BA%8B%E5%8A%A1%E6%97%A0%E6%B3%95%E5%AF%B9%E8%BF%99%E5%BC%A0%E8%A1%A8%E8%BF%9B%E8%A1%8C%E8%AF%BB%E5%86%99%E6%93%8D%E4%BD%9C%20%E8%A1%A8%E7%BA%A7%E9%94%81%20%E9%80%82%E7%94%A8%E6%96%B9%E5%90%91%20%E9%80%82%E7%94%A8%E4%BA%8E%E9%9C%80%E8%A6%81%E4%BF%9D%E8%AF%81%E5%AE%8C%E6%95%B4%E6%80%A7%E7%9A%84%E5%B0%8F%E5%9E%8B%E8%A1%A8%20%E6%98%AF%E4%B8%80%E7%A7%8D%E8%A1%A8%E7%BA%A7%E9%94%81%2C%E7%94%A8%E4%BA%8E%E8%A1%A8%E7%A4%BA%E6%9F%90%E4%B8%AA%E4%BA%8B%E5%8A%A1%E5%AF%B9%E6%9F%90%E8%A1%8C%E6%9C%89%E5%8A%A0%E9%94%81%E7%9A%84%E6%84%8F%E5%9B%BE%2C%E9%80%9A%E4%BF%97%E6%9D%A5%E8%AE%B2%E5%B0%B1%E6%98%AF%E6%9F%90%E4%B8%AA%E5%AF%B9%20%E4%BD%9C%E7%94%A8%20%E6%9F%90%E8%A1%8C%E6%95%B0%E6%8D%AE%E6%9C%89%E5%85%B1%E4%BA%AB%E9%94%81%E6%88%96%E8%80%85%E6%98%AF%E6%8E%92%E4%BB%96%E9%94%81%2C%E5%8F%A6%E4%B8%80%E4%B8%AA%E4%BA%8B%E5%8A%A1%E5%AF%B9%E8%BF%99%E8%A1%8C%E6%95%B0%E6%8D%AE%E4%B9%9F%E8%A6%81%E5%8A%A0%E9%94%81%2C%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%8D%20%E6%98%AF%E9%81%8D%E5%8E%86%E6%95%B4%E8%A1%8C%E6%95%B0%E6%8D%AE%E5%88%A4%E6%96%AD%E6%98%AF%E5%90%A6%E6%9C%89%E6%89%80%E7%9A%84%E5%AD%98%E5%9C%A8%E8%80%8C%E6%98%AF%E7%9B%B4%E6%8E%A5%E9%80%9A%E8%BF%87%E8%A1%A8%E4%B8%8A%E7%9A%84%E6%84%8F%E5%90%91%E9%94%81%E6%9D%A5%E5%88%A4%E6%96%AD%20%E6%84%8F%E5%90%91%E9%94%81%20%E9%80%82%E7%94%A8%E6%96%B9%E5%90%91%20%E7%94%A8%E4%BA%8E%E8%A1%8C%E7%BA%A7%E9%94%81%E4%B8%8E%E8%A1%A8%E7%BA%A7%E9%94%81%E7%BB%93%E5%90%88%20%E4%BD%9C%E7%94%A8%20%E5%85%81%E8%AE%B8%E5%A4%9A%E4%B8%AA%E4%BA%8B%E5%8A%A1%E5%B9%B6%E5%8F%91%E8%AF%BB%E5%8F%96%E5%90%8C%E4%B8%80%E8%B5%84%E6%BA%90%2C%E4%BD%86%E4%B8%8D%E5%85%81%E8%AE%B8%E4%BF%AE%E6%94%B9.%E5%8F%AA%E6%9C%89%E5%9C%A8%E9%87%8A%E6%94%BE%E5%85%B1%E4%BA%AB%E9%94%81%E5%90%8E%2C%E5%85%B6%E4%BB%96%20%E4%BA%8B%E5%8A%A1%E6%89%8D%E8%83%BD%E8%8E%B7%E5%BE%97%E6%8E%92%E5%AE%83%E9%94%81%20%E5%85%B1%E4%BA%AB%E9%94%81%20%E9%80%82%E7%94%A8%E6%96%B9%E5%90%91%20%E9%80%82%E7%94%A8%E4%BA%8E%E5%A4%9A%E8%AF%BB%E5%B0%91%E5%86%99%2C%E9%99%8D%E4%BD%8E%E6%AD%BB%E9%94%81%20%E4%BD%9C%E7%94%A8%20%E5%8F%AA%E5%85%81%E8%AE%B8%E4%B8%80%E4%B8%AA%E4%BA%8B%E5%8A%A1%E5%AF%B9%E8%B5%84%E6%BA%90%E8%BF%9B%E8%A1%8C%E8%AF%BB%E5%86%99%2C%E5%85%B6%E4%BB%96%E4%BA%8B%E5%8A%A1%E5%9C%A8%E8%8E%B7%E5%BE%97%E6%8E%92%E5%AE%83%E9%94%81%E4%B9%8B%E5%89%8D%E6%97%A0%E6%B3%95%E8%AE%BF%E9%97%AE%E8%AF%A5%E8%B5%84%20%E6%BA%90%20%E6%8E%92%E4%BB%96%E9%94%81%20MYSQL%E9%94%81%E7%9A%84%E7%B1%BB%E5%9E%8B%20%E9%80%82%E7%94%A8%E6%96%B9%E5%90%91%20%E9%80%82%E7%94%A8%E4%BA%8E%E9%9C%80%E8%A6%81%E4%BF%9D%E6%8C%81%E6%95%B0%E6%8D%AE%E7%9A%84%E5%AE%8C%E6%95%B4%E6%80%A7%E5%92%8C%E4%B8%80%E8%87%B4%E6%80%A7%20%E4%BD%9C%E7%94%A8%20%E7%94%A8%E4%BA%8E%E4%BF%9D%E6%8A%A4%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AF%B9%E8%B1%A1(%E5%A6%82%E8%A1%A8%E5%92%8C%E7%B4%A2%E5%BC%95)%E7%9A%84%E5%85%83%E6%95%B0%E6%8D%AE%2C%E9%98%B2%E6%AD%A2%E5%9C%A8%E8%BF%9B%E8%A1%8CDDL%E6%8F%90%E4%BD%9C%E6%97%B6%E5%85%B6%E4%BB%96%20%E4%BA%8B%E5%8A%A1%E5%AF%B9%E8%BF%99%E4%BA%9B%E5%AF%B9%E8%B1%A1%E8%BF%9B%E8%A1%8C%E4%BF%AE%E6%94%B9.%20%E5%85%83%E6%95%B0%E6%8D%AE%E9%94%81%20%E9%80%82%E7%94%A8%E4%BA%8E%E6%95%B0%E6%8D%AE%E5%BA%93%E7%89%88%E6%9C%AC%E5%8D%87%E7%BA%A7%2C%E6%95%B0%E6%8D%AE%E8%BF%81%E7%A7%BB%E7%AD%89%E5%9C%BA%E6%99%AF.%20%E9%80%82%E7%94%A8%E6%96%B9%E5%90%91%20%E4%BD%BF%E7%94%A8%E5%85%83%E6%95%B0%E6%8D%AE%E9%94%81%E7%A1%AE%E4%BF%9D%E5%9C%A8%E8%BF%81%E7%A7%BB%E8%BF%87%E7%A8%8B%E4%B8%AD%E6%95%B0%E6%8D%AE%E7%9A%84%E4%B8%80%E8%87%B4%E6%80%A7%E5%92%8C%E5%AE%8C%E6%95%B4%E6%80%A7.%20%E4%BD%9C%E7%94%A8%20%E9%97%B4%E9%9A%99%E9%94%81%20%E9%92%88%E5%AF%B9%E5%AE%B6%E4%B8%AD%E4%B8%A4%E4%B8%AA%E8%AE%B0%E5%BD%95%E4%B9%8B%E9%97%B4%E7%9A%84%E9%97%B4%E9%9A%99%E5%8A%A0%E9%94%81%2C%E9%98%B2%E6%AD%A2%E5%85%B6%E4%BB%96%E4%BA%8B%E5%8A%A1%E5%9C%A8%E8%BF%99%E4%B8%AA%E9%97%B4%E9%9A%99%E4%B8%AD%E6%8F%92%E5%85%A5%E6%96%B0%E8%AE%B0%E5%BD%95%2C%20%E4%BB%A5%E9%81%BF%E5%85%8D%E5%B9%BB%E8%AF%BB.%E9%97%B4%E9%9A%99%E9%94%81%E4%B8%8D%E9%94%81%E5%AE%9A%E5%85%B7%E4%BD%93%E8%A1%8C%2C%E8%80%8C%E6%98%AF%E9%94%81%E5%AE%9A%E8%A1%8C%E4%B8%8E%E8%A1%8C%E4%B9%8B%E9%97%B4%E7%9A%84%E7%A9%BA%E9%97%B4.%20%E4%BD%9C%E7%94%A8%20%E6%98%AF%E8%A1%8C%E7%BA%A7%E9%94%81%E5%92%8C%E9%97%B4%E9%9A%99%E9%94%81%E7%9A%84%E7%BB%93%E5%90%88%2C%E9%94%81%E5%AE%9A%E5%85%B7%E4%BD%93%E8%A1%8C%E5%92%8C%E5%85%B6%E5%89%8D%E9%9D%A2%E7%9A%84%E9%97%B4%E9%9A%99%2C%E7%A1%AE%E4%BF%9D%E5%9C%A8%E4%B8%80%E4%B8%AA%E8%8C%83%E5%9B%B4%E5%86%85%E4%B8%8D%20%E4%BC%9A%E5%87%BA%E7%8E%B0%E5%B9%BB%E8%AF%BB.%20%E4%B8%B4%E9%94%AE%E9%94%81%20%E9%80%82%E7%94%A8%E6%96%B9%E5%90%91%20%E5%B8%B8%E7%94%A8%E4%BA%8E%E6%94%AF%E6%8C%81%E5%8F%AF%E9%87%8D%E5%A4%8D%E8%AF%BB%E7%9A%84%E9%9A%94%E7%A6%BB%E7%BA%A7%E5%88%AB.%20%E6%8F%92%E5%85%A5%E6%84%8F%E5%90%91%E9%94%81%20%E4%BD%9C%E7%94%A8%20%E4%B8%80%E7%A7%8D%E7%AD%89%E5%BE%85%E9%97%B4%E9%9A%99%E7%9A%84%E9%94%81%2C%E7%94%A8%E4%BA%8E%E6%8C%87%E7%A4%BA%E4%BA%8B%E5%8A%A1%E6%89%93%E7%AE%97%E5%9C%A8%E6%9F%90%E4%B8%AA%E9%97%B4%E9%9A%99%E4%B8%AD%E6%8F%92%E5%85%A5%E8%AE%B0%E5%BD%95%2C%E5%85%81%E8%AE%B8%E5%85%B6%E4%BB%96%E4%BA%8B%E5%8A%A1%20%E8%BF%9B%E8%A1%8C%E5%85%B1%E4%BA%AB%E9%94%81%2C%E4%BD%86%E5%9C%A8%E6%8F%92%E5%85%A5%E6%97%B6%E4%BC%9A%E9%98%BB%E6%AD%A2%E5%85%B6%E4%BB%96%E7%9A%84%E6%8E%92%E5%AE%83%E9%94%81.%20%E5%9C%A8%E6%8F%92%E5%85%A5%E8%87%AA%E5%A2%9E%E5%88%97%E6%97%B6%2C%E5%8A%A0%E9%94%81%E4%BB%A5%E4%BF%9D%E8%AF%81%E8%87%AA%E5%A2%9E%E5%80%BC%E7%9A%84%E5%94%AF%E4%B8%80%E6%80%A7%2C%E9%98%B2%E6%AD%A2%E5%B9%B6%E5%8F%91%E6%8F%92%E5%85%A5%E5%AF%BC%E8%87%B4%E7%9A%84%E5%86%B2%E7%AA%81.%E9%80%9A%20%E4%BD%9C%E7%94%A8%20%E8%87%AA%E5%A2%9E%E9%94%81%20%E5%B8%B8%E5%9C%A8%E6%8F%92%E5%85%A5%E6%93%8D%E4%BD%9C%E6%97%B6%E8%A2%AB%E4%BD%BF%E7%94%A8%2C%E4%BB%A5%E7%A1%AE%E4%BF%9D%E7%94%9F%E6%88%90%E7%9A%84%E8%87%AA%E5%A2%9ED%E6%98%AF%E5%94%AF%E4%B8%80%E7%9A%84.%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A285%2C%22y%22%3A11%2C%22width%22%3A27%2C%22height%22%3A13%2C%22text%22%3A%22%E4%BD%9C%E7%94%A8%22%7D%2C%7B%22x%22%3A368%2C%22y%22%3A21%2C%22width%22%3A264%2C%22height%22%3A14%2C%22text%22%3A%22%E4%BB%85%E5%AF%B9%E7%89%B9%E5%AE%9A%E8%A1%8C%E5%8A%A0%E9%94%81%2C%E5%85%B6%E4%BB%96%E4%BA%8B%E5%8A%A1%E5%8F%AF%E4%BB%A5%E5%B9%B6%E5%8F%91%E8%AE%BF%E9%97%AE%E4%B8%8D%E5%90%8C%E7%9A%84%E8%A1%8C%22%7D%2C%7B%22x%22%3A196%2C%22y%22%3A35%2C%22width%22%3A39%2C%22height%22%3A14%2C%22text%22%3A%22%E8%A1%8C%E7%BA%A7%E9%94%81%22%7D%2C%7B%22x%22%3A285%2C%22y%22%3A60%2C%22width%22%3A51%2C%22height%22%3A13%2C%22text%22%3A%22%E9%80%82%E7%94%A8%E6%96%B9%E5%90%91%22%7D%2C%7B%22x%22%3A391%2C%22y%22%3A70%2C%22width%22%3A98%2C%22height%22%3A15%2C%22text%22%3A%22%E9%80%82%E7%94%A8%E4%BA%8E%E9%AB%98%E5%B9%B6%E5%8F%91%E5%9C%BA%E6%99%AF%22%7D%2C%7B%22x%22%3A286%2C%22y%22%3A119%2C%22width%22%3A27%2C%22height%22%3A13%2C%22text%22%3A%22%E4%BD%9C%E7%94%A8%22%7D%2C%7B%22x%22%3A368%2C%22y%22%3A131%2C%22width%22%3A276%2C%22height%22%3A14%2C%22text%22%3A%22%E5%AF%B9%E6%95%B4%E5%BC%A0%E8%A1%A8%E5%8A%A0%E9%94%81%2C%E5%85%B6%E4%BB%96%E4%BA%8B%E5%8A%A1%E6%97%A0%E6%B3%95%E5%AF%B9%E8%BF%99%E5%BC%A0%E8%A1%A8%E8%BF%9B%E8%A1%8C%E8%AF%BB%E5%86%99%E6%93%8D%E4%BD%9C%22%7D%2C%7B%22x%22%3A196%2C%22y%22%3A142%2C%22width%22%3A38%2C%22height%22%3A14%2C%22text%22%3A%22%E8%A1%A8%E7%BA%A7%E9%94%81%22%7D%2C%7B%22x%22%3A285%2C%22y%22%3A167%2C%22width%22%3A50%2C%22height%22%3A13%2C%22text%22%3A%22%E9%80%82%E7%94%A8%E6%96%B9%E5%90%91%22%7D%2C%7B%22x%22%3A392%2C%22y%22%3A178%2C%22width%22%3A168%2C%22height%22%3A15%2C%22text%22%3A%22%E9%80%82%E7%94%A8%E4%BA%8E%E9%9C%80%E8%A6%81%E4%BF%9D%E8%AF%81%E5%AE%8C%E6%95%B4%E6%80%A7%E7%9A%84%E5%B0%8F%E5%9E%8B%E8%A1%A8%22%7D%2C%7B%22x%22%3A388%2C%22y%22%3A236%2C%22width%22%3A409%2C%22height%22%3A16%2C%22text%22%3A%22%E6%98%AF%E4%B8%80%E7%A7%8D%E8%A1%A8%E7%BA%A7%E9%94%81%2C%E7%94%A8%E4%BA%8E%E8%A1%A8%E7%A4%BA%E6%9F%90%E4%B8%AA%E4%BA%8B%E5%8A%A1%E5%AF%B9%E6%9F%90%E8%A1%8C%E6%9C%89%E5%8A%A0%E9%94%81%E7%9A%84%E6%84%8F%E5%9B%BE%2C%E9%80%9A%E4%BF%97%E6%9D%A5%E8%AE%B2%E5%B0%B1%E6%98%AF%E6%9F%90%E4%B8%AA%E5%AF%B9%22%7D%2C%7B%22x%22%3A286%2C%22y%22%3A246%2C%22width%22%3A27%2C%22height%22%3A14%2C%22text%22%3A%22%E4%BD%9C%E7%94%A8%22%7D%2C%7B%22x%22%3A388%2C%22y%22%3A258%2C%22width%22%3A410%2C%22height%22%3A14%2C%22text%22%3A%22%E6%9F%90%E8%A1%8C%E6%95%B0%E6%8D%AE%E6%9C%89%E5%85%B1%E4%BA%AB%E9%94%81%E6%88%96%E8%80%85%E6%98%AF%E6%8E%92%E4%BB%96%E9%94%81%2C%E5%8F%A6%E4%B8%80%E4%B8%AA%E4%BA%8B%E5%8A%A1%E5%AF%B9%E8%BF%99%E8%A1%8C%E6%95%B0%E6%8D%AE%E4%B9%9F%E8%A6%81%E5%8A%A0%E9%94%81%2C%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%8D%22%7D%2C%7B%22x%22%3A389%2C%22y%22%3A278%2C%22width%22%3A371%2C%22height%22%3A14%2C%22text%22%3A%22%E6%98%AF%E9%81%8D%E5%8E%86%E6%95%B4%E8%A1%8C%E6%95%B0%E6%8D%AE%E5%88%A4%E6%96%AD%E6%98%AF%E5%90%A6%E6%9C%89%E6%89%80%E7%9A%84%E5%AD%98%E5%9C%A8%E8%80%8C%E6%98%AF%E7%9B%B4%E6%8E%A5%E9%80%9A%E8%BF%87%E8%A1%A8%E4%B8%8A%E7%9A%84%E6%84%8F%E5%90%91%E9%94%81%E6%9D%A5%E5%88%A4%E6%96%AD%22%7D%2C%7B%22x%22%3A195%2C%22y%22%3A284%2C%22width%22%3A39%2C%22height%22%3A14%2C%22text%22%3A%22%E6%84%8F%E5%90%91%E9%94%81%22%7D%2C%7B%22x%22%3A285%2C%22y%22%3A324%2C%22width%22%3A51%2C%22height%22%3A14%2C%22text%22%3A%22%E9%80%82%E7%94%A8%E6%96%B9%E5%90%91%22%7D%2C%7B%22x%22%3A392%2C%22y%22%3A334%2C%22width%22%3A132%2C%22height%22%3A15%2C%22text%22%3A%22%E7%94%A8%E4%BA%8E%E8%A1%8C%E7%BA%A7%E9%94%81%E4%B8%8E%E8%A1%A8%E7%BA%A7%E9%94%81%E7%BB%93%E5%90%88%22%7D%2C%7B%22x%22%3A286%2C%22y%22%3A388%2C%22width%22%3A26%2C%22height%22%3A13%2C%22text%22%3A%22%E4%BD%9C%E7%94%A8%22%7D%2C%7B%22x%22%3A378%2C%22y%22%3A389%2C%22width%22%3A408%2C%22height%22%3A15%2C%22text%22%3A%22%E5%85%81%E8%AE%B8%E5%A4%9A%E4%B8%AA%E4%BA%8B%E5%8A%A1%E5%B9%B6%E5%8F%91%E8%AF%BB%E5%8F%96%E5%90%8C%E4%B8%80%E8%B5%84%E6%BA%90%2C%E4%BD%86%E4%B8%8D%E5%85%81%E8%AE%B8%E4%BF%AE%E6%94%B9.%E5%8F%AA%E6%9C%89%E5%9C%A8%E9%87%8A%E6%94%BE%E5%85%B1%E4%BA%AB%E9%94%81%E5%90%8E%2C%E5%85%B6%E4%BB%96%22%7D%2C%7B%22x%22%3A379%2C%22y%22%3A410%2C%22width%22%3A108%2C%22height%22%3A13%2C%22text%22%3A%22%E4%BA%8B%E5%8A%A1%E6%89%8D%E8%83%BD%E8%8E%B7%E5%BE%97%E6%8E%92%E5%AE%83%E9%94%81%22%7D%2C%7B%22x%22%3A196%2C%22y%22%3A418%2C%22width%22%3A38%2C%22height%22%3A14%2C%22text%22%3A%22%E5%85%B1%E4%BA%AB%E9%94%81%22%7D%2C%7B%22x%22%3A285%2C%22y%22%3A449%2C%22width%22%3A50%2C%22height%22%3A14%2C%22text%22%3A%22%E9%80%82%E7%94%A8%E6%96%B9%E5%90%91%22%7D%2C%7B%22x%22%3A391%2C%22y%22%3A461%2C%22width%22%3A146%2C%22height%22%3A14%2C%22text%22%3A%22%E9%80%82%E7%94%A8%E4%BA%8E%E5%A4%9A%E8%AF%BB%E5%B0%91%E5%86%99%2C%E9%99%8D%E4%BD%8E%E6%AD%BB%E9%94%81%22%7D%2C%7B%22x%22%3A285%2C%22y%22%3A515%2C%22width%22%3A28%2C%22height%22%3A13%2C%22text%22%3A%22%E4%BD%9C%E7%94%A8%22%7D%2C%7B%22x%22%3A378%2C%22y%22%3A516%2C%22width%22%3A397%2C%22height%22%3A15%2C%22text%22%3A%22%E5%8F%AA%E5%85%81%E8%AE%B8%E4%B8%80%E4%B8%AA%E4%BA%8B%E5%8A%A1%E5%AF%B9%E8%B5%84%E6%BA%90%E8%BF%9B%E8%A1%8C%E8%AF%BB%E5%86%99%2C%E5%85%B6%E4%BB%96%E4%BA%8B%E5%8A%A1%E5%9C%A8%E8%8E%B7%E5%BE%97%E6%8E%92%E5%AE%83%E9%94%81%E4%B9%8B%E5%89%8D%E6%97%A0%E6%B3%95%E8%AE%BF%E9%97%AE%E8%AF%A5%E8%B5%84%22%7D%2C%7B%22x%22%3A378%2C%22y%22%3A536%2C%22width%22%3A17%2C%22height%22%3A15%2C%22text%22%3A%22%E6%BA%90%22%7D%2C%7B%22x%22%3A195%2C%22y%22%3A545%2C%22width%22%3A39%2C%22height%22%3A15%2C%22text%22%3A%22%E6%8E%92%E4%BB%96%E9%94%81%22%7D%2C%7B%22x%22%3A7%2C%22y%22%3A570%2C%22width%22%3A115%2C%22height%22%3A18%2C%22text%22%3A%22MYSQL%E9%94%81%E7%9A%84%E7%B1%BB%E5%9E%8B%22%7D%2C%7B%22x%22%3A285%2C%22y%22%3A577%2C%22width%22%3A50%2C%22height%22%3A14%2C%22text%22%3A%22%E9%80%82%E7%94%A8%E6%96%B9%E5%90%91%22%7D%2C%7B%22x%22%3A391%2C%22y%22%3A588%2C%22width%22%3A206%2C%22height%22%3A14%2C%22text%22%3A%22%E9%80%82%E7%94%A8%E4%BA%8E%E9%9C%80%E8%A6%81%E4%BF%9D%E6%8C%81%E6%95%B0%E6%8D%AE%E7%9A%84%E5%AE%8C%E6%95%B4%E6%80%A7%E5%92%8C%E4%B8%80%E8%87%B4%E6%80%A7%22%7D%2C%7B%22x%22%3A296%2C%22y%22%3A640%2C%22width%22%3A28%2C%22height%22%3A16%2C%22text%22%3A%22%E4%BD%9C%E7%94%A8%22%7D%2C%7B%22x%22%3A389%2C%22y%22%3A642%2C%22width%22%3A398%2C%22height%22%3A15%2C%22text%22%3A%22%E7%94%A8%E4%BA%8E%E4%BF%9D%E6%8A%A4%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AF%B9%E8%B1%A1(%E5%A6%82%E8%A1%A8%E5%92%8C%E7%B4%A2%E5%BC%95)%E7%9A%84%E5%85%83%E6%95%B0%E6%8D%AE%2C%E9%98%B2%E6%AD%A2%E5%9C%A8%E8%BF%9B%E8%A1%8CDDL%E6%8F%90%E4%BD%9C%E6%97%B6%E5%85%B6%E4%BB%96%22%7D%2C%7B%22x%22%3A390%2C%22y%22%3A663%2C%22width%22%3A134%2C%22height%22%3A14%2C%22text%22%3A%22%E4%BA%8B%E5%8A%A1%E5%AF%B9%E8%BF%99%E4%BA%9B%E5%AF%B9%E8%B1%A1%E8%BF%9B%E8%A1%8C%E4%BF%AE%E6%94%B9.%22%7D%2C%7B%22x%22%3A195%2C%22y%22%3A684%2C%22width%22%3A51%2C%22height%22%3A15%2C%22text%22%3A%22%E5%85%83%E6%95%B0%E6%8D%AE%E9%94%81%22%7D%2C%7B%22x%22%3A404%2C%22y%22%3A705%2C%22width%22%3A219%2C%22height%22%3A14%2C%22text%22%3A%22%E9%80%82%E7%94%A8%E4%BA%8E%E6%95%B0%E6%8D%AE%E5%BA%93%E7%89%88%E6%9C%AC%E5%8D%87%E7%BA%A7%2C%E6%95%B0%E6%8D%AE%E8%BF%81%E7%A7%BB%E7%AD%89%E5%9C%BA%E6%99%AF.%22%7D%2C%7B%22x%22%3A297%2C%22y%22%3A727%2C%22width%22%3A50%2C%22height%22%3A14%2C%22text%22%3A%22%E9%80%82%E7%94%A8%E6%96%B9%E5%90%91%22%7D%2C%7B%22x%22%3A405%2C%22y%22%3A748%2C%22width%22%3A290%2C%22height%22%3A15%2C%22text%22%3A%22%E4%BD%BF%E7%94%A8%E5%85%83%E6%95%B0%E6%8D%AE%E9%94%81%E7%A1%AE%E4%BF%9D%E5%9C%A8%E8%BF%81%E7%A7%BB%E8%BF%87%E7%A8%8B%E4%B8%AD%E6%95%B0%E6%8D%AE%E7%9A%84%E4%B8%80%E8%87%B4%E6%80%A7%E5%92%8C%E5%AE%8C%E6%95%B4%E6%80%A7.%22%7D%2C%7B%22x%22%3A285%2C%22y%22%3A801%2C%22width%22%3A29%2C%22height%22%3A15%2C%22text%22%3A%22%E4%BD%9C%E7%94%A8%22%7D%2C%7B%22x%22%3A197%2C%22y%22%3A801%2C%22width%22%3A38%2C%22height%22%3A13%2C%22text%22%3A%22%E9%97%B4%E9%9A%99%E9%94%81%22%7D%2C%7B%22x%22%3A378%2C%22y%22%3A803%2C%22width%22%3A400%2C%22height%22%3A15%2C%22text%22%3A%22%E9%92%88%E5%AF%B9%E5%AE%B6%E4%B8%AD%E4%B8%A4%E4%B8%AA%E8%AE%B0%E5%BD%95%E4%B9%8B%E9%97%B4%E7%9A%84%E9%97%B4%E9%9A%99%E5%8A%A0%E9%94%81%2C%E9%98%B2%E6%AD%A2%E5%85%B6%E4%BB%96%E4%BA%8B%E5%8A%A1%E5%9C%A8%E8%BF%99%E4%B8%AA%E9%97%B4%E9%9A%99%E4%B8%AD%E6%8F%92%E5%85%A5%E6%96%B0%E8%AE%B0%E5%BD%95%2C%22%7D%2C%7B%22x%22%3A378%2C%22y%22%3A822%2C%22width%22%3A340%2C%22height%22%3A16%2C%22text%22%3A%22%E4%BB%A5%E9%81%BF%E5%85%8D%E5%B9%BB%E8%AF%BB.%E9%97%B4%E9%9A%99%E9%94%81%E4%B8%8D%E9%94%81%E5%AE%9A%E5%85%B7%E4%BD%93%E8%A1%8C%2C%E8%80%8C%E6%98%AF%E9%94%81%E5%AE%9A%E8%A1%8C%E4%B8%8E%E8%A1%8C%E4%B9%8B%E9%97%B4%E7%9A%84%E7%A9%BA%E9%97%B4.%22%7D%2C%7B%22x%22%3A285%2C%22y%22%3A879%2C%22width%22%3A27%2C%22height%22%3A14%2C%22text%22%3A%22%E4%BD%9C%E7%94%A8%22%7D%2C%7B%22x%22%3A378%2C%22y%22%3A881%2C%22width%22%3A409%2C%22height%22%3A15%2C%22text%22%3A%22%E6%98%AF%E8%A1%8C%E7%BA%A7%E9%94%81%E5%92%8C%E9%97%B4%E9%9A%99%E9%94%81%E7%9A%84%E7%BB%93%E5%90%88%2C%E9%94%81%E5%AE%9A%E5%85%B7%E4%BD%93%E8%A1%8C%E5%92%8C%E5%85%B6%E5%89%8D%E9%9D%A2%E7%9A%84%E9%97%B4%E9%9A%99%2C%E7%A1%AE%E4%BF%9D%E5%9C%A8%E4%B8%80%E4%B8%AA%E8%8C%83%E5%9B%B4%E5%86%85%E4%B8%8D%22%7D%2C%7B%22x%22%3A378%2C%22y%22%3A903%2C%22width%22%3A64%2C%22height%22%3A13%2C%22text%22%3A%22%E4%BC%9A%E5%87%BA%E7%8E%B0%E5%B9%BB%E8%AF%BB.%22%7D%2C%7B%22x%22%3A197%2C%22y%22%3A911%2C%22width%22%3A38%2C%22height%22%3A13%2C%22text%22%3A%22%E4%B8%B4%E9%94%AE%E9%94%81%22%7D%2C%7B%22x%22%3A285%2C%22y%22%3A943%2C%22width%22%3A50%2C%22height%22%3A13%2C%22text%22%3A%22%E9%80%82%E7%94%A8%E6%96%B9%E5%90%91%22%7D%2C%7B%22x%22%3A391%2C%22y%22%3A954%2C%22width%22%3A172%2C%22height%22%3A14%2C%22text%22%3A%22%E5%B8%B8%E7%94%A8%E4%BA%8E%E6%94%AF%E6%8C%81%E5%8F%AF%E9%87%8D%E5%A4%8D%E8%AF%BB%E7%9A%84%E9%9A%94%E7%A6%BB%E7%BA%A7%E5%88%AB.%22%7D%2C%7B%22x%22%3A196%2C%22y%22%3A1006%2C%22width%22%3A61%2C%22height%22%3A14%2C%22text%22%3A%22%E6%8F%92%E5%85%A5%E6%84%8F%E5%90%91%E9%94%81%22%7D%2C%7B%22x%22%3A309%2C%22y%22%3A1006%2C%22width%22%3A27%2C%22height%22%3A14%2C%22text%22%3A%22%E4%BD%9C%E7%94%A8%22%7D%2C%7B%22x%22%3A401%2C%22y%22%3A1008%2C%22width%22%3A409%2C%22height%22%3A16%2C%22text%22%3A%22%E4%B8%80%E7%A7%8D%E7%AD%89%E5%BE%85%E9%97%B4%E9%9A%99%E7%9A%84%E9%94%81%2C%E7%94%A8%E4%BA%8E%E6%8C%87%E7%A4%BA%E4%BA%8B%E5%8A%A1%E6%89%93%E7%AE%97%E5%9C%A8%E6%9F%90%E4%B8%AA%E9%97%B4%E9%9A%99%E4%B8%AD%E6%8F%92%E5%85%A5%E8%AE%B0%E5%BD%95%2C%E5%85%81%E8%AE%B8%E5%85%B6%E4%BB%96%E4%BA%8B%E5%8A%A1%22%7D%2C%7B%22x%22%3A401%2C%22y%22%3A1029%2C%22width%22%3A245%2C%22height%22%3A14%2C%22text%22%3A%22%E8%BF%9B%E8%A1%8C%E5%85%B1%E4%BA%AB%E9%94%81%2C%E4%BD%86%E5%9C%A8%E6%8F%92%E5%85%A5%E6%97%B6%E4%BC%9A%E9%98%BB%E6%AD%A2%E5%85%B6%E4%BB%96%E7%9A%84%E6%8E%92%E5%AE%83%E9%94%81.%22%7D%2C%7B%22x%22%3A378%2C%22y%22%3A1084%2C%22width%22%3A409%2C%22height%22%3A18%2C%22text%22%3A%22%E5%9C%A8%E6%8F%92%E5%85%A5%E8%87%AA%E5%A2%9E%E5%88%97%E6%97%B6%2C%E5%8A%A0%E9%94%81%E4%BB%A5%E4%BF%9D%E8%AF%81%E8%87%AA%E5%A2%9E%E5%80%BC%E7%9A%84%E5%94%AF%E4%B8%80%E6%80%A7%2C%E9%98%B2%E6%AD%A2%E5%B9%B6%E5%8F%91%E6%8F%92%E5%85%A5%E5%AF%BC%E8%87%B4%E7%9A%84%E5%86%B2%E7%AA%81.%E9%80%9A%22%7D%2C%7B%22x%22%3A285%2C%22y%22%3A1085%2C%22width%22%3A27%2C%22height%22%3A14%2C%22text%22%3A%22%E4%BD%9C%E7%94%A8%22%7D%2C%7B%22x%22%3A196%2C%22y%22%3A1086%2C%22width%22%3A37%2C%22height%22%3A14%2C%22text%22%3A%22%E8%87%AA%E5%A2%9E%E9%94%81%22%7D%2C%7B%22x%22%3A379%2C%22y%22%3A1108%2C%22width%22%3A288%2C%22height%22%3A14%2C%22text%22%3A%22%E5%B8%B8%E5%9C%A8%E6%8F%92%E5%85%A5%E6%93%8D%E4%BD%9C%E6%97%B6%E8%A2%AB%E4%BD%BF%E7%94%A8%2C%E4%BB%A5%E7%A1%AE%E4%BF%9D%E7%94%9F%E6%88%90%E7%9A%84%E8%87%AA%E5%A2%9ED%E6%98%AF%E5%94%AF%E4%B8%80%E7%9A%84.%22%7D%5D%2C%22showTitle%22%3Afalse%2C%22title%22%3A%22%22%2C%22rotation%22%3A0%2C%22crop%22%3A%5B0%2C0%2C1%2C1%5D%2C%22averageHue%22%3A%22%23e6e1d8%22%2C%22id%22%3A%22u776c659f%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D"></card></p><h2 data-lake-id="TUxdq" id="TUxdq" data-lake-index-type="0"><span data-lake-id="uc07c0e85" id="uc07c0e85">MySQL的事务二阶段提交是什么？</span></h2><p data-lake-id="uf165d7bd" id="uf165d7bd"><span data-lake-id="ue254ca41" id="ue254ca41" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">二阶段提交是MySQL中，为了确保redolog（重做日志）和binlog(二进制日志)之间的一致性，使用的一种机制。MySQL通过二阶段提交来保证崩溃时，不会出现数据丢失或数据不一致性的情况。</span></p><p data-lake-id="ue312e827" id="ue312e827"><span data-lake-id="u345a9ad4" id="u345a9ad4" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">二阶段提交的两个阶段：</span></p><p data-lake-id="uf9cb0058" id="uf9cb0058"><span data-lake-id="udab5b5c8" id="udab5b5c8" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">1.准备阶段：事务提交时，将其标为准备阶段</span></p><p data-lake-id="ubea3bf4a" id="ubea3bf4a"><span data-lake-id="ud0eeb17c" id="ud0eeb17c" class="lake-fontsize-12" style="color: rgb(64, 64, 64)">2.提交阶段：写入binlog成功后变为已提交</span></p><h2 data-lake-id="RMB0z" id="RMB0z" data-lake-index-type="0"><span data-lake-id="u9cea0fd2" id="u9cea0fd2">MySQL中如果发生死锁因该如何解决？</span></h2><p data-lake-id="uef0dbc05" id="uef0dbc05"><span data-lake-id="u10375b48" id="u10375b48">自动检测与回滚</span></p><p data-lake-id="u677b893e" id="u677b893e" style="text-indent: 2em"><span data-lake-id="ucd344677" id="ucd344677">MySQL自带死锁检测机制，当检测到死锁时会自动回滚其中一个事务，一般为持有资源最少的事务。</span></p><p data-lake-id="u98259628" id="u98259628" style="text-indent: 2em"><span data-lake-id="u16c2d0c2" id="u16c2d0c2">也有锁等待超时的参数，当获取锁的等待时间超过阈值，就会释放锁进行回滚。</span></p><p data-lake-id="uddda9f72" id="uddda9f72"><span data-lake-id="u912b51e7" id="u912b51e7">手动kill发生死锁的语句</span></p><p data-lake-id="uc4e64c66" id="uc4e64c66" style="padding-left: 2em"><span data-lake-id="u811574b4" id="u811574b4">可以通过命令，手动找出被阻塞的食物及线程ID，手动kill，释放资源。</span></p><h2 data-lake-id="urrPP" id="urrPP" data-lake-index-type="0"><span data-lake-id="u22977765" id="u22977765">MySQL中如何和解决深度分页的问题？</span></h2><p data-lake-id="u0910fc2e" id="u0910fc2e"><span data-lake-id="u0989270f" id="u0989270f">深度分页：就是当数据量和大的时候，按照分页访问后面的数据，列如limit 99999990 10,这样是的数据库扫描前面的99999990条数据，才能得到最终的10条数据，大批量的扫描数据会增加数据库的负载，影响性能。</span></p><p data-lake-id="u0356f31f" id="u0356f31f"><span data-lake-id="udcdae90b" id="udcdae90b">解决办法：</span></p><p data-lake-id="u1c2c3e0c" id="u1c2c3e0c"><span data-lake-id="u85507db8" id="u85507db8">1.子查询，利用子查询先去找到需要查询的ID（主键），一般有索引会很快，在直接通过主键查询。</span></p><p data-lake-id="u2e1ba370" id="u2e1ba370"><span data-lake-id="ubac22d28" id="ubac22d28">2.游标分页：就是每次查询把每页最大的ID保留下来，下次直接从这里开始查询。</span></p><p data-lake-id="ue1c953fb" id="ue1c953fb"><span data-lake-id="ub52d1902" id="ub52d1902">3.elasticsearch</span></p><h2 data-lake-id="Zhheu" id="Zhheu" data-lake-index-type="0"><span data-lake-id="u42560d15" id="u42560d15">什么是MySQL的主从同步机制？他是如何实现的？</span></h2><p data-lake-id="u157b7d1f" id="u157b7d1f"><span data-lake-id="u300f1b58" id="u300f1b58">MySQL中的主从同步机制是一种数据复制技术，用于将主数据库上的数据同步到一个或者多个从库当中。主要通过二进制日志（binlong）实现数据的复制。主库在执行写操作时，会将这些操作记录到日志中，然后推送给从库，从库重放对应日志文件，即可完成复制。</span></p><p data-lake-id="uc54db726" id="uc54db726"><span data-lake-id="u7ee9325b" id="u7ee9325b">实现方法：</span></p><p data-lake-id="ua3e41f75" id="ua3e41f75"><span data-lake-id="u6701eabf" id="u6701eabf">1.异步复制：主库不需要等待从库的响应（性能高，数据一致性低）</span></p><p data-lake-id="u0a366aa7" id="u0a366aa7"><span data-lake-id="u1049ede1" id="u1049ede1">2.同步复制：主库同步等待所有从库确认收到数据（性能差，数据一致性高）</span></p><p data-lake-id="u1ec7c9e0" id="u1ec7c9e0"><span data-lake-id="ud4c4f52b" id="ud4c4f52b">3.半同步复制：主库等待至少一个从库的确认收到数据（性能折中，数据一致性较高）（MySQL5.7有的）</span></p><p data-lake-id="uf208800f" id="uf208800f"><span data-lake-id="u3e7e6923" id="u3e7e6923">异步同步：</span></p><p data-lake-id="u9d5a722a" id="u9d5a722a"><card type="inline" name="image" value="data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2025%2Fpng%2F32795398%2F1744107490836-f553641a-e813-46b5-829e-960be1b94168.png%22%2C%22taskId%22%3A%22u96c5cbdf-f46a-4137-a1ba-9e81e33461d%22%2C%22clientId%22%3A%22u8d9c30ac-238e-4%22%2C%22originalType%22%3A%22binary%22%2C%22width%22%3A1369.3333333333333%2C%22height%22%3A462%2C%22linkTarget%22%3A%22_blank%22%2C%22name%22%3A%22image.png%22%2C%22size%22%3A381086%2C%22from%22%3A%22paste%22%2C%22originWidth%22%3A2054%2C%22originHeight%22%3A693%2C%22ratio%22%3A1.5%2C%22status%22%3A%22done%22%2C%22style%22%3A%22none%22%2C%22search%22%3A%22%E4%B8%BB%E5%BA%93%20%E4%BB%8E%E5%BA%93%20%E6%8E%A8%E9%80%81BINLOG%E6%9B%B4%E6%96%B0%E4%BA%8B%E4%BB%B6%201%2FO%E7%BA%BF%E7%A8%8B%E5%86%99%E5%85%A5%E6%95%B0%E6%8D%AE%20%E5%86%99%E5%85%A5%20%E6%8F%90%E4%BA%A4%E4%BA%8B%E5%8A%A1%E8%AF%B7%E6%B1%82%20BINLOG%20RELAY%20LOG%20%E5%AE%A2%E6%88%B7%E7%AB%AF%20%E6%8B%89%E5%8F%96%E6%95%B0%E6%8D%AE%20%E8%BF%94%E5%9B%9E%E5%93%8D%E5%BA%94%20%E8%BF%94%E5%9B%9E%E5%93%8D%E5%BA%94%20SQL%E7%BA%BF%E7%A8%8B%E9%87%8D%E6%94%BE%E6%95%B0%E6%8D%AE%20%E6%8F%90%E4%BA%A4%E4%BA%8B%E5%8A%A1%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A695%2C%22y%22%3A58%2C%22width%22%3A54%2C%22height%22%3A27%2C%22text%22%3A%22%E4%B8%BB%E5%BA%93%22%7D%2C%7B%22x%22%3A1566%2C%22y%22%3A62%2C%22width%22%3A54%2C%22height%22%3A29%2C%22text%22%3A%22%E4%BB%8E%E5%BA%93%22%7D%2C%7B%22x%22%3A942%2C%22y%22%3A134%2C%22width%22%3A226%2C%22height%22%3A30%2C%22text%22%3A%22%E6%8E%A8%E9%80%81BINLOG%E6%9B%B4%E6%96%B0%E4%BA%8B%E4%BB%B6%22%7D%2C%7B%22x%22%3A1273%2C%22y%22%3A159%2C%22width%22%3A189%2C%22height%22%3A28%2C%22text%22%3A%221%2FO%E7%BA%BF%E7%A8%8B%E5%86%99%E5%85%A5%E6%95%B0%E6%8D%AE%22%7D%2C%7B%22x%22%3A434%2C%22y%22%3A165%2C%22width%22%3A55%2C%22height%22%3A29%2C%22text%22%3A%22%E5%86%99%E5%85%A5%22%7D%2C%7B%22x%22%3A177%2C%22y%22%3A169%2C%22width%22%3A156%2C%22height%22%3A32%2C%22text%22%3A%22%E6%8F%90%E4%BA%A4%E4%BA%8B%E5%8A%A1%E8%AF%B7%E6%B1%82%22%7D%2C%7B%22x%22%3A682%2C%22y%22%3A175%2C%22width%22%3A77%2C%22height%22%3A27%2C%22text%22%3A%22BINLOG%22%7D%2C%7B%22x%22%3A1558%2C%22y%22%3A191%2C%22width%22%3A105%2C%22height%22%3A26%2C%22text%22%3A%22RELAY%20LOG%22%7D%2C%7B%22x%22%3A42%2C%22y%22%3A197%2C%22width%22%3A79%2C%22height%22%3A31%2C%22text%22%3A%22%E5%AE%A2%E6%88%B7%E7%AB%AF%22%7D%2C%7B%22x%22%3A974%2C%22y%22%3A234%2C%22width%22%3A105%2C%22height%22%3A30%2C%22text%22%3A%22%E6%8B%89%E5%8F%96%E6%95%B0%E6%8D%AE%22%7D%2C%7B%22x%22%3A1098%2C%22y%22%3A357%2C%22width%22%3A104%2C%22height%22%3A31%2C%22text%22%3A%22%E8%BF%94%E5%9B%9E%E5%93%8D%E5%BA%94%22%7D%2C%7B%22x%22%3A197%2C%22y%22%3A359%2C%22width%22%3A104%2C%22height%22%3A27%2C%22text%22%3A%22%E8%BF%94%E5%9B%9E%E5%93%8D%E5%BA%94%22%7D%2C%7B%22x%22%3A1634%2C%22y%22%3A445%2C%22width%22%3A213%2C%22height%22%3A34%2C%22text%22%3A%22SQL%E7%BA%BF%E7%A8%8B%E9%87%8D%E6%94%BE%E6%95%B0%E6%8D%AE%22%7D%2C%7B%22x%22%3A661%2C%22y%22%3A480%2C%22width%22%3A103%2C%22height%22%3A31%2C%22text%22%3A%22%E6%8F%90%E4%BA%A4%E4%BA%8B%E5%8A%A1%22%7D%5D%2C%22showTitle%22%3Afalse%2C%22title%22%3A%22%22%2C%22rotation%22%3A0%2C%22crop%22%3A%5B0%2C0%2C1%2C1%5D%2C%22averageHue%22%3A%22%23f8e9c5%22%2C%22id%22%3A%22ud642cb60%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D"></card></p><p data-lake-id="ub13d0c93" id="ub13d0c93"><span data-lake-id="u9941a695" id="u9941a695">扩展：</span></p><p data-lake-id="u46c34677" id="u46c34677"><span data-lake-id="u878df141" id="u878df141" class="lake-fontsize-12" style="color: rgba(0, 0, 0, 0.85) !important">异步复制<br />MySQL 默认是异步复制，具体流程如下：<br />主库：</span></p><ul list="ud1203e57"><li fid="ud9312675" data-lake-id="ua6626e33" id="ua6626e33"><span data-lake-id="u9c483ff6" id="u9c483ff6" class="lake-fontsize-12" style="color: rgba(0, 0, 0, 0.85) !important">接收到提交事务请求</span></li><li fid="ud9312675" data-lake-id="uf702f889" id="uf702f889"><span data-lake-id="ua884a179" id="ua884a179" class="lake-fontsize-12" style="color: rgba(0, 0, 0, 0.85) !important">更新数据</span></li><li fid="ud9312675" data-lake-id="udd4c7d9a" id="udd4c7d9a"><span data-lake-id="u8a990ace" id="u8a990ace" class="lake-fontsize-12" style="color: rgba(0, 0, 0, 0.85) !important">将数据写到 binlog 中</span></li><li fid="ud9312675" data-lake-id="uf33bcf36" id="uf33bcf36"><span data-lake-id="u24a6484c" id="u24a6484c" class="lake-fontsize-12" style="color: rgba(0, 0, 0, 0.85) !important">给客户端响应</span></li><li fid="ud9312675" data-lake-id="ue93ee952" id="ue93ee952"><span data-lake-id="uee905032" id="uee905032" class="lake-fontsize-12" style="color: rgba(0, 0, 0, 0.85) !important">主库推送 binlog 变更事件到从库中</span></li><li fid="ud9312675" data-lake-id="udd06dc45" id="udd06dc45"><span data-lake-id="ue2992cff" id="ue2992cff" class="lake-fontsize-12" style="color: rgba(0, 0, 0, 0.85) !important">从库接收到事件去主库拉取数据</span></li></ul><p data-lake-id="u70dfa216" id="u70dfa216"><span data-lake-id="ua8c2fc48" id="ua8c2fc48" class="lake-fontsize-12" style="color: rgba(0, 0, 0, 0.85) !important">从库：</span></p><ul list="ud1203e57" start="7"><li fid="ud9312675" data-lake-id="uea664dc2" id="uea664dc2"><span data-lake-id="ud6714f97" id="ud6714f97" class="lake-fontsize-12" style="color: rgba(0, 0, 0, 0.85) !important">由 I/O 线程将同步过来的 binlog 写入到 relay log 中。</span></li><li fid="ud9312675" data-lake-id="ua77cb2d7" id="ua77cb2d7"><span data-lake-id="u1c97a42c" id="u1c97a42c" class="lake-fontsize-12" style="color: rgba(0, 0, 0, 0.85) !important">由 SQL 线程从 relay log 重放事件，更新数据</span></li><li fid="ud9312675" data-lake-id="u199607d4" id="u199607d4"><span data-lake-id="u9f6e10e7" id="u9f6e10e7" class="lake-fontsize-12" style="color: rgba(0, 0, 0, 0.85) !important">给主库返回响应。</span></li></ul><h3 data-lake-id="9c335f96" id="9c335f96" data-lake-index-type="0"><span data-lake-id="ub36c5a92" id="ub36c5a92" style="color: rgb(0, 0, 0)">同步复制</span></h3><p data-lake-id="uc13f9faf" id="uc13f9faf"><span data-lake-id="u41fd8579" id="u41fd8579" class="lake-fontsize-12" style="color: rgba(0, 0, 0, 0.85) !important">主库需要将 binlog 复制到所有从库，等所有从库响应了之后才会给客户端响应，这样的话性能很差，一般不会选择同步复制。</span></p><h3 data-lake-id="b00b0eb9" id="b00b0eb9" data-lake-index-type="0"><span data-lake-id="uf4f59db3" id="uf4f59db3" style="color: rgb(0, 0, 0)">半同步复制</span></h3><p data-lake-id="u9a603a36" id="u9a603a36"><span data-lake-id="ua7d831d3" id="ua7d831d3" class="lake-fontsize-12" style="color: rgba(0, 0, 0, 0.85) !important">MySQL 5.7 之后搞了个半同步复制，有个参数可以选择 “成功同步几个从库就返回响应。”<br />比如一共有 3 个从库，我参数配置 1，那么只要有一个从库响应说复制成功了，主库就直接返回响应给客户端，不会等待其他两个从库。<br />这样的话性能就比较好，并且数据可靠性也增强了，只有当那个从库和主库同时都挂了，才会缺失数据。</span></p><h3 data-lake-id="104672a0" id="104672a0" data-lake-index-type="0"><span data-lake-id="u32d0aa1c" id="u32d0aa1c" style="color: rgb(0, 0, 0)">并行复制</span></h3><p data-lake-id="uc16ea096" id="uc16ea096"><span data-lake-id="uc3f56514" id="uc3f56514" class="lake-fontsize-12" style="color: rgba(0, 0, 0, 0.85) !important">以前从库是通过一个 SQL 线程按照顺序逐条执行主库的 binlog 日志指令（即从 relay log 重放事件）。对于主库的高并发写入操作，这种串行执行的方式会导致从库的复制速度跟不上主库，从而产生主从延迟问题。<br />所以 MySQL 引入了并行复制，说白了就是通过多个 SQL 线程来并发执行重放事件。MySQL 提供了以下几种并行复制模式。</span></p><h3 data-lake-id="050ccf54" id="050ccf54" data-lake-index-type="0"><span data-lake-id="udc366278" id="udc366278" style="color: rgb(0, 0, 0)">MySQL 5.6 基于库级别的并行复制</span></h3><p data-lake-id="uf9dae00d" id="uf9dae00d"><span data-lake-id="u3f32d191" id="u3f32d191" class="lake-fontsize-12" style="color: rgba(0, 0, 0, 0.85) !important">假设主库有多个数据库（如 db1 和 db2 ），在从库上，db1 的事务和 db2 的事务可以同时执行。即将不同数据库上的事务分配到不同的 SQL 线程中执行。如果主库大部分事务集中在一个数据库上，这个就没啥用了。</span></p><h3 data-lake-id="9a4d8012" id="9a4d8012" data-lake-index-type="0"><span data-lake-id="u6ec0b912" id="u6ec0b912" style="color: rgb(0, 0, 0)">MySQL 5.7 基于组提交（Group Commit）事务的并行复制</span></h3><p data-lake-id="ud608773a" id="ud608773a"><span data-lake-id="u82a4ce08" id="u82a4ce08" class="lake-fontsize-12" style="color: rgba(0, 0, 0, 0.85) !important">进一步细化了并行的颗粒度，从库级别细化到组提交级别。即 MySQL 会将组提交的事务视为彼此独立的事务，可以在从库并行重放。</span></p><p data-lake-id="u56a766e3" id="u56a766e3"><span data-lake-id="u773cc1ba" id="u773cc1ba" class="lake-fontsize-12" style="color: rgba(0, 0, 0, 0.85) !important">如果主库开启了组提交，且事务之间没有冲突。那么这些事务都可以由多线程并行执行。<br />binlog 中如果两个事务的 last_committed 相同，说明这两个事务是在同一个 Group 内提交的。但是粒度还是不够，如果大部分事务都集中在一张表上？<br />那么只有相同 last_committed 可以并发，即使有些数据的更改和当前事务是不冲突的，也无法并发。</span></p><h3 data-lake-id="43fa02a5" id="43fa02a5" data-lake-index-type="0"><span data-lake-id="ud3bd4c40" id="ud3bd4c40" style="color: rgb(0, 0, 0) !important">MySQL 5.7 基于逻辑时钟（LOGICAL_CLOCK）的并行复制</span></h3><p data-lake-id="u744e0daa" id="u744e0daa"><span data-lake-id="u4de7dcd5" id="u4de7dcd5" class="lake-fontsize-12" style="color: rgba(0, 0, 0, 0.85) !important">LOGICAL_CLOCK 是基于 Group Commit 的并行复制，引入了时间标记的概念。<br />基于所有在主库同时处于 prepare 阶段且未提交的事务不会存在锁冲突的情况（就是这些事务在从库执行时都可以并行执行），将这些事务都打上一个时间标记（实际实现用的是上一个提交事务的 sequence_number，即上面提到的 binlog 中的 last_committed ）。<br />这样从库在识别到这些事务时，可以并行，进一步的提高并发度。<br />所以提升主库的组提交事务数可以让从库复制的并行度更高，所以 MySQL 5.7 引入了两个参数：</span></p><p data-lake-id="u1c496e62" id="u1c496e62"><span data-lake-id="u91a93459" id="u91a93459" class="lake-fontsize-12" style="color: rgb(0, 0, 0)"><br /><br /></span></p><ul list="ua9696d5e"><li fid="u351baa2d" data-lake-id="ud3f4a7cf" id="ud3f4a7cf"><span data-lake-id="ufbef9fef" id="ufbef9fef" class="lake-fontsize-12" style="color: rgba(0, 0, 0, 0.85) !important">binlog_group_commit_sync_delay：组提交等待延迟提交的时间。即每次 binlog 组提交时等待一段时间再 fsync。让进入 group 的事务更多，提高并行度。</span></li><li fid="u351baa2d" data-lake-id="u8be1d948" id="u8be1d948"><span data-lake-id="udd8e8aa1" id="udd8e8aa1" class="lake-fontsize-12" style="color: rgba(0, 0, 0, 0.85) !important">binlog_group_commit_sync_no_delay_count：组提交时允许的最大事务数量，达到该数量时立即触发组提交，而无需等待延迟时间（binlog_group_commit_sync_delay）。即达到期望的并行度后立即提交，缩小等待时长。</span></li></ul><h3 data-lake-id="d9520b1f" id="d9520b1f" data-lake-index-type="0"><span data-lake-id="u8ee2b499" id="u8ee2b499" style="color: rgb(0, 0, 0) !important">MySQL 8.0 基于 WriteSet 的并行复制</span></h3><p data-lake-id="ub1ff4eea" id="ub1ff4eea"><span data-lake-id="ua86dcf97" id="ua86dcf97" class="lake-fontsize-12" style="color: rgba(0, 0, 0, 0.85) !important">在 MySQL 5.7 中，为了提升从库的事务回放速度，需要在主库提高事务的并行度。主库上的事务越多线程并行提交，备库就能在更大程度上实现并行回放。然而，这种方式依赖于主库的并行提交情况，当主库事务是串行提交时，备库的回放效率会显著下降。<br />所以 MySQL 8.0 引入了基于 WriteSet 的并行复制，即使主库上的事务是串行提交的，只要事务之间没有冲突，备库也可以并行回放这些事务，提升复制效率。<br />WriteSet 是事务更新行的集合，通过哈希算法对主键或唯一索引生成标识，记录在二进制日志中。即通过 WriteSet 判定事务之间的冲突，如果两个事务的WriteSet没有冲突，则它们可以并行回放。</span></p><h2 data-lake-id="qq45a" id="qq45a" data-lake-index-type="0"><span data-lake-id="u0f475e12" id="u0f475e12">MySQL如何处理主从同步延迟？</span></h2><p data-lake-id="u0c89315d" id="u0c89315d"><span data-lake-id="ue99ca116" id="ue99ca116" class="lake-fontsize-12" style="color: rgba(0, 0, 0, 0.85) !important">首先需要明确一个点延迟是必然存在的，无论怎么优化都无法避免延迟的存在，只能减少延迟的时间。<br />常见解决方式有以下几种：</span><span data-lake-id="ue9432f87" id="ue9432f87"><br /><br /></span></p><ul list="u350b3012"><li fid="ua3ad9069" data-lake-id="u36b825f7" id="u36b825f7"><strong><span data-lake-id="u352d4694" id="u352d4694" class="lake-fontsize-12" style="color: rgb(0, 0, 0) !important">二次查询</span></strong><span data-lake-id="u6e0669ea" id="u6e0669ea" class="lake-fontsize-12" style="color: rgba(0, 0, 0, 0.85) !important">。如果从库查不到数据，则再去主库查一遍，由 API 封装这个逻辑即可，算是一个兜底策略，比较简单。不过等于读的压力又转移到主库身上了，如果有不法分子故意查询必定查不到的查询，这就对主库产生冲击了。</span></li><li fid="ua3ad9069" data-lake-id="u2222b94f" id="u2222b94f"><strong><span data-lake-id="uc9e67632" id="uc9e67632" class="lake-fontsize-12" style="color: rgb(0, 0, 0) !important">强制将写之后立马读的操作转移到主库上</span></strong><span data-lake-id="u96baf65e" id="u96baf65e" class="lake-fontsize-12" style="color: rgba(0, 0, 0, 0.85) !important">。这种属于代码写死了，比如一些写入之后立马查询的操作，就绑定在一起，写死都走主库。不推荐，比较死板。</span></li><li fid="ua3ad9069" data-lake-id="u55fa1f3f" id="u55fa1f3f"><strong><span data-lake-id="ue817386a" id="ue817386a" class="lake-fontsize-12" style="color: rgb(0, 0, 0) !important">关键业务读写都走主库</span></strong><span data-lake-id="udeddf7e5" id="udeddf7e5" class="lake-fontsize-12" style="color: rgba(0, 0, 0, 0.85) !important">，非关键还是读写分离。比如上面我举例的用户注册这种，可以读写主库，这样就不会有登陆报该用户不存在的问题，这种访问量频次应该也不会很多，所以看业务适当调整此类接口。</span></li><li fid="ua3ad9069" data-lake-id="uede87358" id="uede87358"><strong><span data-lake-id="ud64b3c52" id="ud64b3c52" class="lake-fontsize-12" style="color: rgb(0, 0, 0) !important">使用缓存</span></strong><span data-lake-id="u12a4af57" id="u12a4af57" class="lake-fontsize-12" style="color: rgba(0, 0, 0, 0.85) !important">，主库写入后同步到缓存中，这样查询时可以先查询缓存，避免了延迟的问题，不过又引入了缓存数据一致性的问题。</span><span data-lake-id="ue6574b48" id="ue6574b48"><br /><br /></span></li></ul><p data-lake-id="u2dd89a9c" id="u2dd89a9c"><span data-lake-id="ua7b3c9fa" id="ua7b3c9fa" class="lake-fontsize-12" style="color: rgba(0, 0, 0, 0.85) !important">除此之外，也可以提一提配置问题，例如主库的配置高，从库的配置太低了，可以提升从库的配置等。如果面试官对 MySQL 比较熟，可能会追问一些偏 DBA 侧的问题，例如并行复制等。</span></p><h3 data-lake-id="143c7cf2" id="143c7cf2" data-lake-index-type="0"><span data-lake-id="u32f4fb6b" id="u32f4fb6b" style="color: rgb(0, 0, 0)">MySQL 主从延迟的常见原因及优化方案</span></h3><table data-lake-id="qwtIj" id="qwtIj" class="lake-table" style="width: 750px"><colgroup><col width="375"><col width="375"></colgroup><tbody><tr data-lake-id="ua385b8fa" id="ua385b8fa"><td data-lake-id="u0c898b9c" id="u0c898b9c"><p data-lake-id="u469ab8b3" id="u469ab8b3" style="text-align: left"><strong><span data-lake-id="u86c8c580" id="u86c8c580" class="lake-fontsize-12" style="color: rgb(0, 0, 0) !important">原因</span></strong></p></td><td data-lake-id="u2fa22469" id="u2fa22469"><p data-lake-id="u20abaecc" id="u20abaecc" style="text-align: left"><strong><span data-lake-id="u41f546cf" id="u41f546cf" class="lake-fontsize-12" style="color: rgb(0, 0, 0) !important">优化方案</span></strong></p></td></tr><tr data-lake-id="ud7291e4f" id="ud7291e4f"><td data-lake-id="u8b8d9e57" id="u8b8d9e57"><p data-lake-id="u9c1146e1" id="u9c1146e1" style="text-align: left"><span data-lake-id="u23cb34cb" id="u23cb34cb" class="lake-fontsize-12" style="color: rgba(0, 0, 0, 0.85) !important">从库单线程复制</span></p></td><td data-lake-id="ue7b7798b" id="ue7b7798b"><p data-lake-id="u71b29df9" id="u71b29df9" style="text-align: left"><span data-lake-id="u96a4c6c1" id="u96a4c6c1" class="lake-fontsize-12" style="color: rgba(0, 0, 0, 0.85) !important">启用多线程复制：MySQL 并行复制。</span></p></td></tr><tr data-lake-id="u5436480f" id="u5436480f"><td data-lake-id="u8bdccd3b" id="u8bdccd3b"><p data-lake-id="u848873be" id="u848873be" style="text-align: left"><span data-lake-id="ufa235e85" id="ufa235e85" class="lake-fontsize-12" style="color: rgba(0, 0, 0, 0.85) !important">网络延迟</span></p></td><td data-lake-id="u55ed3f25" id="u55ed3f25"><p data-lake-id="u137589fb" id="u137589fb" style="text-align: left"><span data-lake-id="u4ede6616" id="u4ede6616" class="lake-fontsize-12" style="color: rgba(0, 0, 0, 0.85) !important">优化网络连接，缩短主从之间的物理距离。</span></p></td></tr><tr data-lake-id="ue051a58b" id="ue051a58b"><td data-lake-id="u89fd8513" id="u89fd8513"><p data-lake-id="uaac02205" id="uaac02205" style="text-align: left"><span data-lake-id="ud59f7734" id="ud59f7734" class="lake-fontsize-12" style="color: rgba(0, 0, 0, 0.85) !important">从库性能不足</span></p></td><td data-lake-id="ue6306bbb" id="ue6306bbb"><p data-lake-id="u30552d6c" id="u30552d6c" style="text-align: left"><span data-lake-id="ub35c83ac" id="ub35c83ac" class="lake-fontsize-12" style="color: rgba(0, 0, 0, 0.85) !important">增加硬件资源。</span></p></td></tr><tr data-lake-id="u24535398" id="u24535398"><td data-lake-id="u75dc6b6c" id="u75dc6b6c"><p data-lake-id="u65da23f9" id="u65da23f9" style="text-align: left"><span data-lake-id="u0efff2b7" id="u0efff2b7" class="lake-fontsize-12" style="color: rgba(0, 0, 0, 0.85) !important">长事务</span></p></td><td data-lake-id="u7f2f907b" id="u7f2f907b"><p data-lake-id="ud2496314" id="ud2496314" style="text-align: left"><span data-lake-id="u5ed2712c" id="u5ed2712c" class="lake-fontsize-12" style="color: rgba(0, 0, 0, 0.85) !important">优化应用程序，减少主库写入压力，避免长事务。MySQL 中长事务可能会导致哪些问题？</span></p></td></tr><tr data-lake-id="u9b04f30c" id="u9b04f30c"><td data-lake-id="u74592cc8" id="u74592cc8"><p data-lake-id="ufec62589" id="ufec62589" style="text-align: left"><span data-lake-id="u3c150a53" id="u3c150a53" class="lake-fontsize-12" style="color: rgba(0, 0, 0, 0.85) !important">从库太多</span></p></td><td data-lake-id="uf1b0f08d" id="uf1b0f08d"><p data-lake-id="u92d11e5b" id="u92d11e5b" style="text-align: left"><span data-lake-id="u1f1a77ca" id="u1f1a77ca" class="lake-fontsize-12" style="color: rgba(0, 0, 0, 0.85) !important">从库过多主库同步压力大，导致延迟，合理的评估主从数量</span></p></td></tr><tr data-lake-id="uae94403c" id="uae94403c"><td data-lake-id="uccdbd65d" id="uccdbd65d"><p data-lake-id="u43a5517a" id="u43a5517a" style="text-align: left"><span data-lake-id="uabe04fc2" id="uabe04fc2" class="lake-fontsize-12" style="color: rgba(0, 0, 0, 0.85) !important">从库负载太高</span></p></td><td data-lake-id="u35ca1c5c" id="u35ca1c5c"><p data-lake-id="u5905fb70" id="u5905fb70" style="text-align: left"><span data-lake-id="ufa88c9fd" id="ufa88c9fd" class="lake-fontsize-12" style="color: rgba(0, 0, 0, 0.85) !important">增加从库实例，分散查询压力，避免慢查询。</span></p></td></tr></tbody></table><p data-lake-id="uae61417f" id="uae61417f"><span data-lake-id="u01949996" id="u01949996" class="lake-fontsize-12" style="color: rgba(0, 0, 0, 0.85) !important">再强调一下主从延迟是必然存在的，无论怎么优化都无法避免延迟的存在，只能减少延迟的时间。例如即使启用多线程复制就一定可以避免延迟吗？所以业务上的解决方案还是以回答重点内的几个解决方式为准。</span></p>